{"version":3,"file":"static/js/293.b444a68c.chunk.js","mappings":"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","sources":["components/EntryPoints.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  MenuItem,\n  TextField,\n  Typography,\n  Grid,\n  Box,\n} from \"@mui/material\";\nimport loginPoster from \"../assets/img/login.jpeg\";\nimport signupPoster from \"../assets/img/signup.jpeg\";\nimport \"../assets/custom/css/enteryPoint.css\";\nimport { GoogleLogin } from \"react-google-login\";\nimport FacebookLogin from \"react-facebook-login\";\nimport FacebookOutlinedIcon from \"@mui/icons-material/FacebookOutlined\";\nimport { Link } from \"react-router-dom\";\nimport { login } from \"../services/service\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setAlert, setAuth, setRefreshBox } from \"../store/action/action\";\n\nexport default function EntryPoints(props) {\n  // history var for location and jumping throw path\n  const history = props.history;\n\n  const dispatch = useDispatch();\n  // const state = useSelector(state=>state)\n\n  // store import\n  const { auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    if (auth.isAuth) history(\"/dashboard\");\n    else history('/')\n  }, [auth.isAuth]);\n\n  // context\n\n  const [postVal, setPostVal] = useState(\"\");\n\n  const handleChangePost = (event) => {\n    setPostVal(event.target.value);\n  };\n\n  const post = [\n    {\n      value: \"Admin\",\n      label: \"Admin\",\n    },\n    {\n      value: \"Management & Accountant\",\n      label: \"Management & Accountant\",\n    },\n    {\n      value: \"Marketing\",\n      label: \"Marketing\",\n    },\n\n    {\n      value: \"Sales\",\n      label: \"Sales\",\n    },\n    {\n      value: \"Staff\",\n      label: \"Staff\",\n    },\n\n  ];\n  const [currency, setCurrency] = React.useState(\"EUR\");\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"role\", postVal);\n    FD.append(\"email\", e.target.email.value);\n    FD.append(\"password\", e.target.password.value);\n\n    let res = login(FD);\n\n    res.then((data) => {\n      //console.log(data)\n\n      if (data.status === 200) {\n        dispatch(\n          setAuth({\n            isAuth: true,\n            token: data.data.token,\n            role: data.data.role,\n            name: data.data.name,\n            mobile: data.data.mobile,\n            email: data.data.email,\n            access: data.data.access,\n            expireIn: data.data.expireIn,\n          })\n        );\n\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: data.data.message,\n          })\n        );\n\n        localStorage.setItem(\"token\", data.data.token);\n\n        history(\"/dashboard\");\n      } else {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: data.data.message,\n          })\n        );\n      }\n    });\n  };\n\n  return (\n    <>\n      {/* // login module */}\n      <title>Login</title>\n\n      {window.location.pathname === \"/\" && (\n        <Container fixed sx={{ height: \"content-fit\" }}>\n          <Box p={15} pt={3} pb={3}>\n            <Grid\n              container\n              sx={{ borderRadius: 2, boxShadow: 3, overflow: \"hidden\" }}\n            >\n              {/* Image Side  */}\n              <Grid item id=\"imgBox\" sm={12} md={6} lg={6}>\n                <img\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  src={loginPoster}\n                  alt=\"Login Poster\"\n                />\n              </Grid>\n\n              {/* Form Side */}\n              <Grid item p={6} sm={12} md={6} lg={6}>\n                <Typography component={\"span\"} variant=\"h4\">\n                  Login\n                </Typography>\n                <Box\n                  sx={{\n                    \"& .MuiTextField-root\": { mt: 2 },\n                    margin: \"auto\",\n                  }}\n                >\n                  <form\n                    method=\"post\"\n                    onSubmit={handleLogin}\n                    className=\"formStyle\"\n                  >\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      type=\"password\"\n                      name=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      label=\"Staff Role\"\n                      value={postVal}\n                      multiple\n                      name=\"role\"\n                      onChange={handleChangePost}\n                      helperText=\"Please select the staff role\"\n                    >\n                      {post.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      sx={{\n                        width: \"100%\",\n                        marginTop: \"5%\",\n                        marginBottom: \"8%\",\n                      }}\n                    >\n                      {\" \"}\n                      Log In\n                    </Button>\n                  </form>\n                </Box>\n\n                <hr />\n                {/* \n                <FacebookLogin\n                  appId=\"1088597931155576\"\n                  autoLoad={true}\n                  fields=\"name,email,picture\"\n                  // onClick={componentClicked}\n                  // callback={responseFacebook}\n                  textButton={\n                    <Button\n                      className=\"FacebookButton\"\n                      startIcon={<FacebookOutlinedIcon />}\n                    >\n                      LOGIN WITH Facebook\n                    </Button>\n                  }\n                  cssClass=\"fbButton\"\n                />\n\n                <GoogleLogin\n                  clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n                  buttonText=\"LOGIN WITH GOOGLE\"\n                  // onSuccess={responseGoogle}\n                  // onFailure={responseGoogle}\n                  cookiePolicy={\"single_host_origin\"}\n                  className=\"goggleButton\"\n                /> */}\n\n                <Typography\n                  component={\"span\"}\n                  variant=\"caption\"\n                  color=\"primary\"\n                  sx={{ display: \"block\", marginTop: \"8%\" }}\n                >\n                  Forgot Password?\n                </Typography>\n                {/* \n                <Typography component={'span'} variant=\"caption\" color=\"primary\">\n                  <Link className=\"links\" to=\"/register\">\n                    I do not have an account. Create Account\n                  </Link>\n                </Typography> */}\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      )}\n\n      {/* // sign up module */}\n      {window.location.pathname === \"/register\" && (\n        <Container fixed sx={{ height: \"content-fit\" }}>\n          <Box p={15} pt={3} pb={3}>\n            <Grid\n              container\n              sx={{ borderRadius: 2, boxShadow: 3, overflow: \"hidden\" }}\n            >\n              {/* Image Side  */}\n              <Grid item id=\"imgBox\" sm={12} md={6} lg={6}>\n                <img\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  src={signupPoster}\n                  alt=\"Login Poster\"\n                />\n              </Grid>\n\n              {/* Form Side */}\n              <Grid item p={6} sm={12} md={6} lg={6}>\n                <Typography component={\"span\"} variant=\"h4\">\n                  Create an account\n                </Typography>\n                <form method=\"post\" className=\"formStyle\">\n                  <Box\n                    sx={{\n                      \"& .MuiTextField-root\": { mt: 2 },\n                      margin: \"auto\",\n                    }}\n                  >\n                    <TextField\n                      fullWidth\n                      label=\"Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      type=\"email\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      label=\"Select\"\n                      value={currency}\n                      onChange={handleChange}\n                      helperText=\"Please select your post\"\n                    >\n                      {post.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      sx={{\n                        width: \"100%\",\n                        marginTop: \"5%\",\n                        marginBottom: \"8%\",\n                      }}\n                    >\n                      {\" \"}\n                      Register\n                    </Button>\n                  </Box>\n                </form>\n\n                <hr />\n\n                <FacebookLogin\n                  appId=\"1088597931155576\"\n                  autoLoad={true}\n                  fields=\"name,email,picture\"\n                  // onClick={componentClicked}\n                  // callback={responseFacebook}\n                  textButton={\n                    <Button\n                      className=\"FacebookButton\"\n                      startIcon={<FacebookOutlinedIcon />}\n                    >\n                      LOGIN WITH Facebook\n                    </Button>\n                  }\n                  cssClass=\"fbButton\"\n                />\n\n                <GoogleLogin\n                  clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n                  buttonText=\"LOGIN WITH GOOGLE\"\n                  // onSuccess={responseGoogle}\n                  // onFailure={responseGoogle}\n                  cookiePolicy={\"single_host_origin\"}\n                  className=\"goggleButton\"\n                />\n\n                <Typography\n                  component={\"span\"}\n                  variant=\"caption\"\n                  sx={{ color: \"#0e9f6e\", display: \"block\", marginTop: \"8%\" }}\n                >\n                  <Link className=\"links\" to=\"/login\">\n                    Alredy, Have an account. Login\n                  </Link>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      )}\n    </>\n  );\n}\n"],"names":["EntryPoints","props","history","dispatch","useDispatch","auth","useSelector","state","useEffect","isAuth","useState","postVal","setPostVal","post","value","label","React","currency","setCurrency","window","location","pathname","Container","fixed","sx","height","Box","p","pt","pb","Grid","container","borderRadius","boxShadow","overflow","item","id","sm","md","lg","style","width","src","loginPoster","alt","Typography","component","variant","mt","margin","method","onSubmit","e","preventDefault","FD","FormData","append","target","email","password","login","then","data","status","setAuth","token","role","name","mobile","access","expireIn","setAlert","open","message","localStorage","setItem","className","TextField","fullWidth","type","select","multiple","onChange","event","helperText","map","option","MenuItem","Button","color","marginTop","marginBottom","display","signupPoster","appId","autoLoad","fields","textButton","startIcon","FacebookOutlined","cssClass","GoogleLogin","clientId","buttonText","cookiePolicy","to"],"sourceRoot":""}