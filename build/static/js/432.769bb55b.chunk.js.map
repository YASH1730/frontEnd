{"version":3,"file":"static/js/432.769bb55b.chunk.js","mappings":"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AO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,IAGLC,GAAmB,CACvB,CACEF,MAAO,YACPC,MAAO,aAET,CACED,MAAO,gBACPC,MAAO,kBAILE,GAAa,CACjB,CACEH,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,iBACPC,MAAO,mBAGLG,GAAY,CAChB,CACEJ,MAAO,wBACPC,MAAO,yBAET,CACED,MAAO,sBACPC,MAAO,wBAILI,GAAmB,CACvB,CACEL,MAAO,QACPC,MAAO,SAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,QACPC,MAAO,UAILK,GAAiB,CACrB,CACEN,MAAO,YACPC,MAAO,aAET,CACED,MAAO,qBACPC,MAAO,sBAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,kBACPC,MAAO,mBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,eAGLM,GAAO,CACX,CACEP,MAAO,QACPC,MAAO,SAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,0BACPC,MAAO,2BAGT,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,UA+BLO,GAAc,CAAC,OAAQ,UAEvBC,GAAU,CACd,QACA,UACA,WACA,WACA,WACA,SACA,OACA,gBACA,YACA,UACA,SACA,WACA,UAGIC,GAAuB,CAC3B,CACEV,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,qBACPC,MAAO,uBAILU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","sources":["components/dashboard/form/SideForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport {\n  Button,\n  IconButton,\n  MenuItem,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  Modal,\n  InputAdornment,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Checkbox,\n  FormGroup,\n  Fade,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Slider,\n  Select,\n  TextareaAutosize,\n  ListItemText,\n  InputLabel,\n  Autocomplete,\n  Rating,\n} from \"@mui/material\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport Slide from \"@mui/material/Slide\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport \"../../../assets/custom/css/sideForm.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\n// component\nimport ImageSquence from \"../../Utility/ImageSquence\";\n// service APIS\nimport {\n  getLastProduct,\n  categoryList,\n  getSubCatagories,\n  // addPrimaryMaterial,\n  // editPrimaryMaterial,\n  getPrimaryMaterial,\n  addSupplier,\n  editSupplier,\n  createBlog,\n  updateBlog,\n  getLastHardware,\n  addMergeProduct,\n  updateMergeProduct,\n  getLastMergeProduct,\n  getPresentSKUs,\n  addCustomer,\n  updateCustomer,\n  addOrder,\n  getLastOrder,\n  customerCatalog,\n  variation,\n  getHardwareDropdown,\n  getDraftID,\n  addDraft,\n  getArticlesId,\n  getLastSupplier,\n  getSupplierDropdown,\n  addInward,\n  addOutward,\n  uploadImage,\n  addTransfer,\n  getStockSKU,\n  // addPolish,\n  // editPolish,\n  updateReview,\n  getCategoryList,\n  applyDiscount,\n  addReview,\n  getSequence,\n  getAddress,\n  listPincode,\n  addUser,\n  updateUser,\n} from \"../../../services/service.js\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport { setAlert, setForm } from \"../../../store/action/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport StarIcon from \"@mui/icons-material/Star\";\nimport size from \"react-image-size\";\nimport { fromUnixTime } from \"date-fns/esm\";\n\nimport config from \"../../../config.json\";\n\nconst option = {\n  labels: {\n    confirmable: \"Proceed\",\n    cancellable: \"Cancel\",\n  },\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 50,\n  height: 50,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 3,\n};\n\nconst SideForm = () => {\n  // multiple images\n  const [files, setFiles] = useState([]);\n  const [webBanner, setWebBanner] = useState([]);\n  const [mobileBanner, setMobileBanner] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [hover, setHover] = React.useState(-1); // for rating in review\n\n  const [sequence, setSequence] = useState([]);\n  // image link\n  const imageLink = `${config.Official_API_Image}/upload/`;\n\n  const confirm = useConfirm();\n\n  // confirmBox\n  const confirmBox = (e, action) => {\n    e.preventDefault();\n\n    confirm({ description: `Data will listed in Database !!!` }, option)\n      .then(() => action(e))\n      .catch((err) => {\n        console.log(\"Operation cancelled because. \", err);\n      });\n  };\n\n  // single images\n  const [Image, setImages] = useState([]);\n  const [Indoor, setIndoor] = useState([]);\n\n  // modal state\n  const [open, setOpen] = useState(false);\n\n  // address object\n  const [address, setAddress] = useState([]);\n  const [billing, setBillingAddress] = useState([]);\n\n  function FeaturesPreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setFeatured(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = featured.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n\n  const labels = {\n    0.5: \"Useless\",\n    1: \"Useless+\",\n    1.5: \"Poor\",\n    2: \"Poor+\",\n    2.5: \"Ok\",\n    3: \"Ok+\",\n    3.5: \"Good\",\n    4: \"Good+\",\n    4.5: \"Excellent\",\n    5: \"Excellent+\",\n  };\n\n  const customer_type = [\"Interior\", \"Architect\", \"VIP\", \"VVIP\"];\n\n  const return_reason = [\n\n    'Product not as expected', \n    'Size is too small', \n    'Quality not as expected', \n    'Damaged during transit',\n    'Different from Store',\n    'Wrong Polish',\n    'Others'\n  ]\n\n\n  const order_status = [\n    {\n      key: \"processing\",\n      value: \"Processing\",\n    },\n    {\n      key: \"packed &_shipped\",\n      value: \"Packed & Shipped\",\n    },\n    {\n      key: \"wating_for_approval\",\n      value: \"Waiting for Approval\",\n    },\n    {\n      key: \"final_touching\",\n      value: \" Final Touching,\",\n    },\n    {\n      key: \"manufacturing\",\n      value: \"Manufacturing\",\n    },\n    {\n      key: \"carving\",\n      value: \"Carving\",\n    },\n    {\n      key: \"polish\",\n      value: \"Polish\",\n    },\n    {\n      key: \"weaving\",\n      value: \"Weaving\",\n    },\n    {\n      key: \"brass_fitting\",\n      value: \"Brass fitting\",\n    },\n  ];\n\n  function ImagePreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setImages(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = Image.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n  function IndoorPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setIndoor);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (Indoor) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          Indoor.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          Indoor.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [Indoor]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => Indoor.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n\n  // static catalog\n\n  const polishCatalog = [\n    \"Stain Finish\",\n    \"Distressed Polish\",\n    \"Antique Touch\",\n    \"Duco Paint\",\n    \"Natural Finish\",\n    \"Oil Massge\",\n    \"Powder Coating\",\n  ];\n\n  const taxRateCatalog = [\n    {\n      value: 28,\n      label: 28,\n    },\n    {\n      value: 18,\n      label: 18,\n    },\n    {\n      value: 12,\n      label: 12,\n    },\n    {\n      value: 5,\n      label: 5,\n    },\n    {\n      value: 3,\n      label: 3,\n    },\n    {\n      value: 2,\n      label: 2,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  const backStyleCatalog = [\n    {\n      value: \"Lean Back\",\n      label: \"Lean Back\",\n    },\n    {\n      value: \"Straight Back\",\n      label: \"Straight Back\",\n    },\n  ];\n\n  const legCatalog = [\n    {\n      value: \"Folding Legs\",\n      label: \"Folding Legs\",\n    },\n    {\n      value: \"Knockdown Legs\",\n      label: \"Knockdown Legs\",\n    },\n  ];\n  const warehouse = [\n    {\n      value: \"Bangalore (Karnataka)\",\n      label: \"Bangalore (Karnataka)\",\n    },\n    {\n      value: \"Jodhpur (Rajasthan)\",\n      label: \"Jodhpur (Rajasthan)\",\n    },\n  ];\n\n  const weightCapCatalog = [\n    {\n      value: \"Child\",\n      label: \"Child\",\n    },\n    {\n      value: \"Light Weight\",\n      label: \"Light Weight\",\n    },\n    {\n      value: \"Adult\",\n      label: \"Adult\",\n    },\n  ];\n\n  const trollyMaterial = [\n    {\n      value: \"Teak Wood\",\n      label: \"Teak Wood\",\n    },\n    {\n      value: \"Natural Solid Wood\",\n      label: \"Natural Solid Wood\",\n    },\n    {\n      value: \"Stone\",\n      label: \"Stone\",\n    },\n    {\n      value: \"Metal\",\n      label: \"Metal\",\n    },\n    {\n      value: \"Brass\",\n      label: \"Brass\",\n    },\n    {\n      value: \"Copper\",\n      label: \"Copper\",\n    },\n    {\n      value: \"Glass\",\n      label: \"Glass\",\n    },\n    {\n      value: \"Mango Wood\",\n      label: \"Mango Wood\",\n    },\n    {\n      value: \"Pine wood\",\n      label: \"Pine wood\",\n    },\n    {\n      value: \"Acacia wood\",\n      label: \"Acacia wood\",\n    },\n    {\n      value: \"Sheesham wood\",\n      label: \"Sheesham wood\",\n    },\n    {\n      value: \"Ceramic\",\n      label: \"Ceramic\",\n    },\n    {\n      value: \"Brass Coated SS\",\n      label: \"Brass Coated SS\",\n    },\n    {\n      value: \"Iron Jali\",\n      label: \"Iron Jali\",\n    },\n    {\n      value: \"Glass Jali\",\n      label: \"Glass Jali\",\n    },\n  ];\n  const role = [\n    {\n      value: \"Admin\",\n      label: \"Admin\",\n    },\n    {\n      value: \"Marketing\",\n      label: \"Marketing\",\n    },\n    {\n      value: \"Management & Accountant\",\n      label: \"Management & Accountant\",\n    },\n\n    {\n      value: \"Sales\",\n      label: \"Sales\",\n    },\n    {\n      value: \"Staff\",\n      label: \"Staff\",\n    },\n\n  ];\n  const rangeCatalog = [\n    {\n      value: \"Traditional\",\n      label: \"Traditional\",\n    },\n\n    {\n      value: \"Distressed\",\n      label: \"Distressed\",\n    },\n\n    {\n      value: \"Crackle\",\n      label: \"Crackle\",\n    },\n\n    {\n      value: \"Painting\",\n      label: \"Painting\",\n    },\n\n    {\n      value: \"Antique\",\n      label: \"Antique\",\n    },\n  ];\n\n  const coupon_type = [\"FLAT\", \"OFF(%)\"];\n\n  const modules = [\n    \"Order\",\n    \"Product\",\n    \"Settings\",\n    \"Wishlist\",\n    \"Customer\",\n    \"Reward\",\n    \"Blog\",\n    \"Action Center\",\n    \"Inventory\",\n    \"Profile\",\n    \"Banner\",\n    \"Hardware\",\n    \"Review\",\n  ];\n\n  const assemblyLevelCatalog = [\n    {\n      value: \"Easy Assembly\",\n      label: \"Easy Assembly\",\n    },\n    {\n      value: \"Carpenter Assembly\",\n      label: \"Carpenter Assembly\",\n    },\n  ];\n\n  const unitCatalog = [\n    {\n      value: \"Pcs\",\n      label: \"Pcs\",\n    },\n    {\n      value: \"Kg\",\n      label: \"Kg\",\n    },\n    {\n      value: \"Ft\",\n      label: \"Ft\",\n    },\n    {\n      value: \"Set\",\n      label: \"Set\",\n    },\n    {\n      value: \"Metre\",\n      label: \"Metre\",\n    },\n  ];\n\n  const purpose = [\n    \"Manufactured\",\n    \"Repairing\",\n    \"Packing\",\n  ];\n  const level = [\n    \"Level 1\",\n    \"Level 2\",\n    \"Level 3\",\n    \"Level 4\",\n    \"Level 5\",\n    \"Level 6\",\n    \"Level 7\",\n    \"Level 8\",\n    \"Level 9\",\n    \"Level 10\",\n  ];\n\n  // redux\n  const { form, mode } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  // states\n  const [cat, setCat] = useState(\"\");\n  const [discount, setDiscount] = useState({ discount_limit: 0, MRP: 0 });\n  // const [showFabric, setShowFabric] = useState(\"No\");\n\n  //  State for stepper\n  const [activeStep, setActiveStep] = useState(0);\n\n  // states for the dynamic rendering\n  const [SKU, setSKU] = useState(\"\");\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [materialCatalog, setMaterialCatalog] = useState([]);\n  // const [textileCatalog, setTextileCatalog] = useState([]);\n  // const [fabricCatalog, setFabricCatalog] = useState([]);\n  const [SKUCatalog, setSKUCatalog] = useState([]);\n  const [customer, setCustomerCatalog] = useState([]);\n  const [productSKU, setProductSKU] = useState({\n    P_SKU: [],\n    H_SKU: [],\n    supplier: [],\n    category: [],\n  });\n\n  const [catalog, setCatalog] = useState({\n    hinge: [],\n    knob: [],\n    door: [],\n    handle: [],\n    fitting: [],\n    polish: [],\n    fabric: [],\n    wheel: [],\n    ceramic_drawer: [],\n    ceramic_tiles: [],\n    pincode: [],\n    city: [],\n    dial: [],\n  });\n\n  // ref\n  const editorRef = useRef();\n\n  // pres data\n  const [changeData, setData] = useState({\n    CVW: 0,\n    dial: false,\n    ACIN: \"\",\n    role: 'Staff',\n    primary_material: [],\n    product_articles: [],\n    hardware_articles: [],\n    category_discount: [],\n    supplier: \"\",\n    range: \"None\",\n    product_array: [],\n    variation_array: [],\n    warehouse: [],\n    savedImages: [],\n    specification_image: \"\",\n    featured_image: \"\",\n    mannequin_image: \"\",\n    shipping: \"\",\n    product_title: \"\",\n    seo_title: \"\",\n    seo_description: \"\",\n    seo_keyword: \"\",\n    product_des: \"\",\n    category: \"\",\n    sub_category: \"\",\n    length: 0,\n    breadth: 0,\n    selling_points: [],\n    height: 0,\n    priMater: \"\",\n    priMater_weight: \"\",\n    secMater: \"\",\n    secMater_weight: \"\",\n    selling_price: 0,\n    mrp: 0,\n    discount_cap: 0,\n    polish_time: 0,\n    manufacturing_time: 0,\n    polish: [],\n    wight_cap: \"\",\n    wall_hanging: \"\",\n    assembly_required: \"\",\n    assembly_leg: \"\",\n    assembly_part: 2,\n    fitting: \"None\",\n    silver: \"\",\n    weight: 0,\n    selling_point: \"\",\n    mirror: \"\",\n    joints: \"\",\n    tax_rate: 18,\n    seat_width: 0,\n    ceramic_drawer: \"None\",\n    ceramic_tiles: \"None\",\n    seat_depth: 0,\n    seat_height: 0,\n    wheel: \"None\",\n    wheel_included: \"no\",\n    trolly: \"\",\n    returnable: false,\n    returnDays: 0,\n    trolly_mater: \"\",\n    top_size_length: 0,\n    top_size_breadth: 0,\n    dial_size: 0,\n    COD: false,\n    textile: \"\",\n    paid_amount: 0,\n    total_amount: 0,\n    customer_name: \"\",\n    customer_email: \"\",\n    shipping_address: \"\",\n    searchCustomer: \"\",\n    mobile_store: true,\n    online_store: true,\n    continue_selling: true,\n    ceramic_drawer_included: false,\n    ceramic_tiles_included: false,\n    unit: \"Pcs\",\n    quantity: 1,\n    textile_type: \"\",\n    category_id: \"\",\n    sub_category_id: \"\",\n    product_description: \"\",\n    legs: \"None\",\n    fabric: \"None\",\n    assembly_level: \"Easy Assembly\",\n    mattress: \"no\",\n    mattress_length: 0,\n    mattress_breadth: 0,\n    hinge: \"None\",\n    hinge_qty: 0,\n    knob: \"None\",\n    knob_qty: 0,\n    handle: \"None\",\n    handle_qty: 0,\n    door: \"None\",\n    door_qty: 0,\n    plywood: \"no\",\n    wheel_qty: 0,\n    cradle_bed: \"no\",\n    amazon_url: \"\",\n    flipkart_url: \"\",\n    jiomart_url: \"\",\n    cradle_bed_depth: 0,\n    cradle_bed_height: 0,\n    cradle_bed_width: 0,\n    showroom_price: 0,\n    discount_limit: 0,\n    length_main: 0,\n    ceramic_drawer_qty: 0,\n    ceramic_tiles_qty: 0,\n    back_style: \"None\",\n    weight_capacity: \"None\",\n    drawer: \"None\",\n    package_breadth: 0,\n    package_height: 0,\n    package_length: 0,\n    silver_weight: 0,\n    mirror_length: 0,\n    mirror_width: 0,\n    drawer_count: 0,\n    seating_size_width: 0,\n    seating_size_depth: 0,\n    seating_size_height: 0,\n    restocking_time: 0,\n    min_quantity: 1,\n    hardware_polish: \"None\",\n    warehouse_to: \"\",\n    wood_weight: 0,\n    metal_weight: 0,\n    package_weight: 0,\n    polish_name: \"\",\n    polish_type: \"None\",\n    polish_finish: \"None\",\n    level: \"None\",\n    lock: false,\n    price: 0,\n    indoorSavedImage: [],\n    status: true,\n    web_banner_status: false,\n    mobile_banner_status: false,\n    marketing: false,\n    sequence_no: \"\",\n    customer_mobile: \"\",\n    city: \"\",\n    state: \"\",\n    GST: \"no\",\n    has_GST: \"\",\n    billing: \"\",\n    classification: \"\",\n    customer_type: \"\",\n    country: \"\",\n    pincode: \"\",\n    note: \"\",\n  });\n\n  function getLabelText(value) {\n    return `${value} Star${value !== 1 ? \"s\" : \"\"}, ${labels[value]}`;\n  }\n\n  // function for generating Merged product  ID\n\n  const getMKU = () => {\n    getLastMergeProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].M.split(\"-\")[1]) + 1;\n\n          setSKU(`M-0${index}`);\n        } else {\n          setSKU(\"M-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product SKU ID\n\n  const getSKU = () => {\n    getLastProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          // // //console.log(res.data[0].SKU)\n\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`P-0${index}`);\n        } else {\n          setSKU(\"P-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating hardware  ID\n\n  const getHKU = () => {\n    getLastHardware()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`H-0${index}`);\n        } else {\n          setSKU(\"H-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product OID ID\n\n  const getOID = () => {\n    getLastOrder()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].OID.split(\"-\")[1]) + 1;\n\n          setSKU(`OID-0${index}`);\n        } else {\n          setSKU(\"OID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getSID = () => {\n    getLastSupplier()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SID.split(\"-\")[1]) + 1;\n\n          setSKU(`SID-0${index}`);\n        } else {\n          setSKU(\"SID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getDID = () => {\n    getDraftID()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].DID.split(\"-\")[1]) + 1;\n\n          setSKU(`DID-0${index}`);\n        } else {\n          setSKU(\"DID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n\n  useMemo(() => {\n    switch (form.formType) {\n      case \"add_customer\":\n        getDID();\n        break;\n      case \"review\":\n        getDID();\n        break;\n      case \"edit_order\":\n        getDID();\n\n        console.log(form.payload);\n\n        let quantity = form.payload.order.quantity || {};\n\n        // for product qty\n        Object.keys(quantity).length > 0 &&\n          Object.keys(quantity).map((item) => {\n            setData((old) => ({\n              ...old,\n              [item]: quantity[item] || 1,\n            }));\n          });\n\n        setData((old) => ({\n          ...old,\n          O: form.payload.order.O,\n          discount: form.payload.order.discount,\n          paid: form.payload.order.paid,\n          total: form.payload.order.total,\n          customer_name: form.payload.order.customer_name,\n          customer_email: form.payload.order.customer_email,\n          customer_mobile: form.payload.order.customer_mobile,\n          city: form.payload.order.city,\n          state: form.payload.order.state,\n          order_status: form.payload.order.status,\n          shipping: form.payload.order.shipping,\n          GST: form.payload.order.GST,\n          has_GST: form.payload.order.has_GST,\n          billing: form.payload.order.billing,\n          classification: form.payload.order.classification,\n          customer_type: form.payload.order.customer_type,\n          country: form.payload.order.country || \"India\",\n          quantity: Object.keys(quantity) || [],\n          pincode: form.payload.order.pincode,\n          note: form.payload.order.note,\n        }));\n\n        break;\n      case \"cancel_order\":\n        break;\n      case \"hardware\":\n        getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          let hardware = data.data.filter((row) => {\n            return row.category_name === \"Hardware\";\n          });\n\n          setData({\n            ...changeData,\n            category_name: hardware.length > 0 ? hardware[0]._id : \"None\",\n          });\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        // console.log(category,category.filter((row) => { return row.category_name === 'Hardware' }))\n\n        break;\n      case \"update_hardware\":\n        // getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        const row = form.payload.row;\n\n        console.log(row);\n\n        setData({\n          SKU: row.SKU,\n          title: row.title,\n          category_name: row.category_id,\n          category_id: row.category_id,\n          sub_category_name: row.sub_category_id,\n          sub_category_id: row.sub_category_id,\n          hardware_image: row.hardware_image,\n          savedImages: row.hardware_image,\n          featured_image: row.featured_image,\n          mannequin_image: row.mannequin_image,\n          warehouse: row.warehouse || [],\n          bangalore_stock: row.bangalore_stock,\n          discount_limit: row.discount_limit,\n          jodhpur_stock: row.jodhpur_stock,\n          manufacturing_time: row.manufacturing_time,\n          online_store: row.online_store,\n          mobile_store: row.mobile_store,\n          primary_material: row.primary_material,\n          primary_material_name: row.primary_material_name,\n          status: row.status,\n          returnDays: row.returnDays,\n          COD: row.COD,\n          returnable: row.returnable,\n          quantity: row.quantity,\n          package_length: row.package_length,\n          package_height: row.package_height,\n          package_breadth: row.package_breadth,\n          unit: row.unit,\n          selling_price: row.selling_price,\n          showroom_price: row.showroom_price,\n          polish_time: row.polish_time,\n          restocking_time: row.restocking_time,\n          selling_points: row.selling_points || [],\n          seo_title: row.seo_title,\n          seo_description: row.seo_description,\n          seo_keyword: row.seo_keyword,\n          hardware_polish: row.hardware_polish,\n          min_quantity: row.min_quantity,\n          continue_selling: row.continue_selling,\n          tax_rate: row.tax_rate,\n          weight: row.weight,\n          package_weight: row.package_weight,\n        });\n        break;\n      case \"product\":\n        // getSKU();\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        console.log(form);\n\n        if (form.payload) {\n          setData((old) => ({ ...old, ...form.payload }));\n        }\n\n        break;\n      case \"variation\":\n        getSKU();\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          ACIN: form.payload.row.action.ACIN,\n          CVW: form.payload.row.action.CVW,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          dial: form.payload.row.action.dial,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n        break;\n      case \"add_order\":\n        getOID();\n        getPresentSKUs().then((data) => {\n          if (data.data === null) return setSKUCatalog([]);\n\n          return setSKUCatalog(data.data);\n        });\n\n        customerCatalog().then((data) => {\n          //console.log(data);\n          if (data.data === null) return setCustomerCatalog([]);\n\n          return setCustomerCatalog(data.data);\n        });\n\n        break;\n      case \"category\":\n        getDID();\n        break;\n      case \"update_category\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n        setData({\n          _id: form.payload.row.action,\n          category: form.payload.row.category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        getDID();\n        console.log(form.payload.row);\n        setData({\n          primaryMaterial_name: form.payload.row.primaryMaterial_name,\n          primaryMaterial_description:\n            form.payload.row.primaryMaterial_description,\n          customizations: form.payload.row.customizations,\n        });\n        break;\n      case \"subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        // setCat(form.payload.row.category_id);\n        break;\n      case \"update_Subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        setCat(form.payload.row.category_id);\n        setData({\n          _id: form.payload.row.action,\n          sub_category_name: form.payload.row.sub_category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_blog\":\n        getDID();\n        setData({\n          title: form.payload.value.title,\n          card_image: form.payload.value.card_image,\n          seo_title: form.payload.value.seo_title,\n          seo_description: form.payload.value.seo_description,\n          card_description: form.payload.value.card_description,\n          description: form.payload.value.description,\n        });\n        break;\n      case \"update_product\":\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          CVW: form.payload.row.action.CVW,\n          parent_SKU: form.payload.row.parent_SKU,\n          variations: form.payload.row.variations,\n          variant_label: form.payload.row.variant_label,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          dial: form.payload.row.action.dial,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n\n        break;\n      case \"update_customer\":\n        //console.log(form.payload);\n        setData({\n          CID: form.payload.row.CID,\n          register_time: form.payload.row.register_time,\n          username: form.payload.row.username,\n          mobile: form.payload.row.mobile,\n          email: form.payload.row.email,\n          password: form.payload.row.password,\n          city: form.payload.row.city,\n          state: form.payload.row.state,\n          shipping: form.payload.row.shipping,\n        });\n        break;\n      case \"merge_product\":\n        getMKU();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          ...changeData,\n        });\n\n        break;\n      case \"update_merge\":\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n          return setSubCategory(data.data);\n        });\n\n        console.log(form.payload.row.product_articles);\n\n        // for product qty\n        form.payload.row.product_articles.length > 0 &&\n          form.payload.row.product_articles.map((item) => {\n            setData((old) => ({\n              ...old,\n              [item.SKU]: item.qty,\n            }));\n          });\n\n        setData((old) => ({\n          ...old,\n          M: form.payload.row.M,\n          product_articles:\n            form.payload.row.product_articles.map((item) => item.SKU) || [],\n          product_title: form.payload.row.product_title,\n          category_name: form.payload.row.category_id,\n          category_id: form.payload.row.category_id,\n          sub_category_name: form.payload.row.sub_category_id,\n          sub_category_id: form.payload.row.sub_category_id,\n          warehouse: form.payload.row.warehouse,\n          warehouse_name: form.payload.row.warehouse_name,\n          bangalore_stock: form.payload.row.bangalore_stock,\n          jodhpur_stock: form.payload.row.jodhpur_stock,\n          product_description: form.payload.row.product_description,\n          product_image: form.payload.row.product_image,\n          savedImages: form.payload.row.product_image,\n          featured_image: form.payload.row.featured_image,\n          mannequin_image: form.payload.row.mannequin_image,\n          specification_image: form.payload.row.specification_image,\n          selling_points: form.payload.row.selling_points,\n          selling_price: form.payload.row.selling_price,\n          showroom_price: form.payload.row.showroom_price,\n          discount_limit: form.payload.row.discount_limit,\n          mobile_store: form.payload.row.mobile_store,\n          online_store: form.payload.row.online_store,\n          continue_selling: form.payload.row.continue_selling,\n          COD: form.payload.row.COD,\n          returnDays: form.payload.row.returnDays,\n          returnable: form.payload.row.returnable,\n          polish_time: form.payload.row.polish_time,\n          manufacturing_time: form.payload.row.manufacturing_time,\n          package_length: form.payload.row.package_length,\n          package_height: form.payload.row.package_height,\n          package_breadth: form.payload.row.package_breadth,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n        }));\n\n        break;\n      case \"update_Stock\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          product_id: form.payload.row.product_id,\n          stock: form.payload.row.stock,\n          warehouse: form.payload.row.warehouse,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          supplier_name: form.payload.row.supplier_name,\n          mobile: form.payload.row.mobile,\n          gst_no: form.payload.row.gst_no,\n          alt_mobile: form.payload.row.alt_mobile,\n          specialization: form.payload.row.specialization,\n          SID: form.payload.row.SID,\n          address: form.payload.row.address,\n        });\n        break;\n      case \"add_supplier\":\n        getSID();\n        break;\n      case \"update_polish\":\n        // console.log(form.payload.row)\n        getDID();\n        setData({\n          ...changeData,\n          _id: form.payload.row.action._id,\n          polish_name: form.payload.row.action.polish_name,\n          polish_type: form.payload.row.action.polish_type,\n          level: form.payload.row.action.level,\n          polish_finish: form.payload.row.action.polish_finish,\n          outDoor_image: form.payload.row.action.outDoor_image,\n          savedImages: form.payload.row.action.outDoor_image,\n          inDoor_image: form.payload.row.action.inDoor_image,\n          indoorSavedImage: form.payload.row.action.inDoor_image,\n          lock: form.payload.row.action.lock,\n          price: form.payload.row.action.price,\n        });\n        break;\n      case \"primaryMaterial\":\n        getDID();\n        break;\n      case \"addPolish\":\n        getDID();\n        break;\n      case \"addBlog\":\n        getDID();\n        break;\n      case \"update_review\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          product_id: form.payload.row.product_id,\n          rating: parseInt(form.payload.row.rating),\n          review: form.payload.row.review,\n          review_title: form.payload.row.review_title,\n          yourTube_url: form.payload.row.yourTube_url,\n          action: form.payload.row.action,\n        }));\n        break;\n      case \"add_banner\":\n        getDID();\n        setSequenceFunc();\n        break;\n      case \"update_banner\":\n        setSequenceFunc();\n        getDID();\n        console.log(form.payload);\n        setData({\n          uuid: form.payload.value.uuid,\n          web_banner: form.payload.value.web_banner,\n          web_url: form.payload.value.web_url,\n          sequence_no: form.payload.value.sequence_no,\n          old_sequence_no: form.payload.value.sequence_no,\n          mobile_banner: form.payload.value.mobile_banner,\n          mobile_url: form.payload.value.mobile_url,\n          banner_title: form.payload.value.banner_title,\n          web_banner_status: form.payload.value.web_banner_status,\n          mobile_banner_status: form.payload.value.mobile_banner_status,\n        });\n        break;\n      case \"update_user\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          user_name: form.payload.formattedValue.user_name,\n          email: form.payload.formattedValue.email,\n          mobile: form.payload.formattedValue.mobile,\n          role: form.payload.formattedValue.role,\n          access:\n            form.payload.row.access[0] !== \"No Permissions Alloted\"\n              ? form.payload.row.access\n              : [],\n          action: form.payload.row.action,\n        }));\n        break;\n      case \"add_coupon\":\n        getDID();\n        break;\n      case \"update_coupon\":\n        getDID();\n        // console.log(form.payload.formattedValue.expiry);\n        setData((old) => ({\n          _id: form.payload.formattedValue._id,\n          customer_ids: form.payload.formattedValue.customer_ids,\n          coupon_code: form.payload.formattedValue.coupon_code,\n          coupon_type: form.payload.formattedValue.coupon_type,\n          flat_amount: form.payload.formattedValue.flat_amount,\n          times: form.payload.formattedValue.times,\n          off: form.payload.formattedValue.off,\n          valid_from: form.payload.formattedValue.valid_from.split(\"T\")[0],\n          expiry: form.payload.formattedValue.expiry.split(\"T\")[0],\n          coupon_description: form.payload.formattedValue.coupon_description,\n        }));\n        break;\n      default:\n        break;\n    }\n  }, [form.formType, form.state]);\n\n  async function setSequenceFunc() {\n    const data = await getSequence();\n    console.log(data);\n    if (data.status === 200) {\n      return setSequence([...data.data]);\n    }\n  }\n\n  // stepper button\n  const handleNextStep = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  // stepper button\n  const handleBackStep = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleDiscount = (e) => {\n    if (e.target.name === \"discount_limit\") {\n      if (e.target.value > 25) e.target.value = 25;\n    }\n    setDiscount({\n      ...discount,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // for update\n  const handleChangeData = (e) => {\n    switch (form.formType) {\n      case \"update_category\":\n        setData({\n          ...changeData,\n          category: e.target.value,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_polish\":\n        setData({\n          ...changeData,\n          polish: e.target.value,\n        });\n        break;\n      case \"update_knob\":\n        setData({\n          ...changeData,\n          knob: e.target.value,\n        });\n        break;\n      case \"update_fitting\":\n        setData({\n          ...changeData,\n          fitting: e.target.value,\n        });\n        break;\n      case \"update_hinge\":\n        setData({\n          ...changeData,\n          hinge: e.target.value,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_handle\":\n        setData({\n          ...changeData,\n          handle: e.target.value,\n        });\n        break;\n      case \"update_secondaryMaterial\":\n        setData({\n          ...changeData,\n          secMater: e.target.value,\n        });\n        break;\n      case \"update_product\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_blog\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_fabric\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_textile\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"inward\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n\n      default:\n      // //console.log(\"\");\n    }\n  };\n\n  const feature = [\n    \"web_banner_status\",\n    \"mobile_banner_status\",\n    \"rotating_seats\",\n    \"eatable_oil_polish\",\n    \"no_chemical\",\n    \"lean_back\",\n    \"straight_back\",\n    \"weaving\",\n    \"not_suitable_for_Micro_Dish\",\n    \"tilt_top\",\n    \"inside_compartments\",\n    \"stackable\",\n    \"knife\",\n    \"wall_hanging\",\n    \"COD\",\n    \"returnable\",\n    \"mobile_store\",\n    \"online_store\",\n    \"continue_selling\",\n    \"ceramic_drawer_included\",\n    \"ceramic_tiles_included\",\n    \"status\",\n    \"lock\",\n    \"customizations\",\n    \"marketing\",\n    \"dial\",\n  ];\n\n  //  for product felids\n  const handleProductFields = (e) => {\n    if (feature.includes(e.target.name)) {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.checked,\n      });\n    } else {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.value,\n      });\n    }\n    // //console.log(changeData);\n  };\n\n  const handleChange = (event) => {\n    // //console.log(event.target.name);\n    setCat(event.target.value);\n  };\n\n  const handleClose = () => {\n    resetAll();\n    dispatch(setForm({ state: false, formType: null, payload: null }));\n  };\n\n  // function for handling category\n  const handleCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"insertCategory\");\n\n    FD.append(\"category_image\", Image[0]);\n    FD.append(\"category_name\", e.target.category_name.value);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"category_status\", e.target.category_status.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_name: data.data.response.category_name,\n          //     category_status: data.data.response.category_status,\n          //     category_image: data.data.response.category_image,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [...old, data.data.response.category_status]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling update category\n  const handleUpdateCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"updateCategory\");\n\n    FD.append(\"_id\", changeData._id);\n\n    Image[0] !== undefined && FD.append(\"category_image\", Image[0]);\n    // console.log(Image[0])\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    e.target.category_name.value !== undefined\n      ? FD.append(\"category_name\", e.target.category_name.value)\n      : console.log();\n\n    const res = addDraft(FD);\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.category_name = e.target.category_name.value;\n          //       Image[0] !== undefined\n          //         ? (set.category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling Customer\n  const handleCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned\");\n    FD.append(\"type\", \"Customer\");\n    FD.append(\"operation\", \"addCustomer\");\n    FD.append(\"profile_image\", Image[0]);\n    FD.append(\"username\", e.target.username.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"email\", e.target.email.value);\n    FD.append(\"password\", e.target.password.value);\n    FD.append(\"shipping\", JSON.stringify(address));\n    FD.append(\"billing\", JSON.stringify(billing));\n    FD.append(\"marketing\", changeData.marketing);\n    FD.append(\"classification\", changeData.classification);\n    FD.append(\"customer_type\", changeData.customer_type);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     CID: data.data.response.CID,\n          //     register_time: data.data.response.register_time,\n          //     profile_image: data.data.response.profile_image,\n          //     username: data.data.response.username,\n          //     mobile: data.data.response.mobile,\n          //     email: data.data.response.email,\n          //     password: data.data.response.password,\n          //     shipping: data.data.response.shipping,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          setAddress([]);\n          setBillingAddress([]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  // function for handling Customer\n  const handleUpdateCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image[0] !== undefined && FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"CID\", changeData.CID);\n    FD.append(\"username\", changeData.username);\n    FD.append(\"mobile\", changeData.mobile);\n    FD.append(\"email\", changeData.email);\n    FD.append(\"password\", changeData.password);\n    FD.append(\"city\", changeData.city);\n    // FD.append(\"pincode\", changeData.pincode);\n    FD.append(\"state\", changeData.state);\n    // FD.append(\"landmark\", changeData.landmark);\n    FD.append(\"shipping\", changeData.shipping);\n\n    const res = updateCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.CID = changeData.CID;\n                set.register_time = changeData.register_time;\n                set.profile_image =\n                  Image[0] !== undefined\n                    ? `${imageLink}${Image[0].path}`\n                    : console.log();\n                set.username = changeData.username;\n                set.mobile = changeData.mobile;\n                set.email = changeData.email;\n                set.password = changeData.password;\n                set.city = changeData.city;\n                set.state = changeData.state;\n                set.shipping = changeData.shipping;\n              }\n              return set;\n            })\n          );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function fo resting the values\n\n  const resetAll = () => {\n    setProductSKU({\n      P_SKU: [],\n      H_SKU: [],\n      supplier: [],\n      category: [],\n    });\n    setWebBanner([]);\n    setMobileBanner([]);\n    setImages([]);\n    setFeatured([]);\n    setFiles([]);\n    setActiveStep(0);\n    setData({\n      CVW: 0,\n      ACIN: \"\",\n      web_banner_status: false,\n      mobile_banner_status: false,\n      warehouse_to: \"\",\n      sequence_no: \"\",\n      marketing: false,\n      dial: false,\n      primary_material: [],\n      product_articles: [],\n      hardware_articles: [],\n      category_discount: [],\n      supplier: \"\",\n      range: \"None\",\n      product_array: [],\n      variation_array: [],\n      warehouse: [],\n      savedImages: [],\n      shipping: \"\",\n      product_title: \"\",\n      amazon_url: \"\",\n      status: true,\n      flipkart_url: \"\",\n      jiomart_url: \"\",\n      seo_title: \"\",\n      seo_description: \"\",\n      specification_image: \"\",\n      featured_image: \"\",\n      mannequin_image: \"\",\n      seo_keyword: \"\",\n      product_des: \"\",\n      category: \"\",\n      sub_category: \"\",\n      length: 0,\n      breadth: 0,\n      selling_points: [],\n      height: 0,\n      priMater: \"\",\n      priMater_weight: \"\",\n      secMater: \"\",\n      secMater_weight: \"\",\n      selling_price: 0,\n      mrp: 0,\n      discount_cap: 0,\n      polish_time: 0,\n      manufacturing_time: 0,\n      polish: [],\n      wight_cap: \"\",\n      wall_hanging: \"\",\n      assembly_required: \"\",\n      assembly_leg: \"\",\n      assembly_part: 2,\n      fitting: \"None\",\n      silver: \"\",\n      selling_point: \"\",\n      mirror: \"\",\n      joints: \"\",\n      tax_rate: 18,\n      seat_width: 0,\n      ceramic_drawer: \"None\",\n      ceramic_tiles: \"None\",\n      seat_depth: 0,\n      seat_height: 0,\n      wheel: \"None\",\n      wheel_included: \"no\",\n      trolly: \"\",\n      returnable: false,\n      returnDays: 0,\n      trolly_mater: \"\",\n      top_size_length: 0,\n      top_size_breadth: 0,\n      dial_size: 0,\n      COD: false,\n      textile: \"\",\n      paid_amount: 0,\n      total_amount: 0,\n      customer_name: \"\",\n      customer_email: \"\",\n      shipping_address: \"\",\n      searchCustomer: \"\",\n      mobile_store: true,\n      online_store: true,\n      continue_selling: true,\n      ceramic_drawer_included: false,\n      ceramic_tiles_included: false,\n      unit: \"Pcs\",\n      quantity: 1,\n      textile_type: \"\",\n      category_id: \"\",\n      sub_category_id: \"\",\n      product_description: \"\",\n      legs: \"None\",\n      fabric: \"None\",\n      assembly_level: \"Easy Assembly\",\n      mattress: \"no\",\n      mattress_length: 0,\n      mattress_breadth: 0,\n      hinge: \"None\",\n      hinge_qty: 0,\n      knob: \"None\",\n      knob_qty: 0,\n      handle: \"None\",\n      handle_qty: 0,\n      door: \"None\",\n      door_qty: 0,\n      plywood: \"no\",\n      wheel_qty: 0,\n      cradle_bed: \"no\",\n      cradle_bed_depth: 0,\n      cradle_bed_height: 0,\n      cradle_bed_width: 0,\n      showroom_price: 0,\n      discount_limit: 0,\n      length_main: 0,\n      weight: 0,\n      ceramic_drawer_qty: 0,\n      ceramic_tiles_qty: 0,\n      back_style: \"None\",\n      weight_capacity: \"None\",\n      drawer: \"None\",\n      package_breadth: 0,\n      package_height: 0,\n      package_length: 0,\n      silver_weight: 0,\n      mirror_length: 0,\n      mirror_width: 0,\n      drawer_count: 0,\n      seating_size_width: 0,\n      seating_size_depth: 0,\n      seating_size_height: 0,\n      restocking_time: 0,\n      min_quantity: 1,\n      hardware_polish: \"None\",\n      wood_weight: 0,\n      metal_weight: 0,\n      package_weight: 0,\n      polish_type: \"None\",\n      polish_finish: \"None\",\n      level: \"None\",\n      lock: false,\n      price: 0,\n      indoorSavedImage: [],\n      pincode: \"\",\n      role: 'Staff',\n\n    });\n    document.getElementById(\"myForm\").reset();\n  };\n\n  const handleProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"insertProduct\");\n\n    FD.append(\"SKU\", \"Not Assigned \" + SKU);\n    FD.append(\"status\", false);\n\n    FD.append(\"CVW\", changeData.CVW);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n    FD.append(\"primary_material\", changeData.primary_material);\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n\n    FD.append(\"dial\", changeData.dial);\n    changeData.dial && FD.append(\"dial_size\", changeData.dial_size);\n    changeData.dial && FD.append(\"dial_name\", changeData.dial_name);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleVariation = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"status\", true);\n    FD.append(\"parent_SKU\", changeData.SKU);\n\n    FD.append(\"SKU\", SKU);\n    FD.append(\"ACIN\", changeData.ACIN);\n\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial\", changeData.dial);\n    changeData.dial && FD.append(\"dial_size\", changeData.dial_size);\n    changeData.dial && FD.append(\"dial_name\", changeData.dial_name);\n\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = variation(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                SKU: data.data.response.SKU,\n                CVW: data.data.response.CVW,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_name: data.data.response.sub_category_name,\n                sub_category_id: data.data.response.sub_category_id,\n                product_description: data.data.response.product_description,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                primary_material: data.data.response.primary_material,\n                primary_material_name: data.data.response.primary_material_name,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                length_main: data.data.response.length_main,\n                breadth: data.data.response.breadth,\n                height: data.data.response.height,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                weight: data.data.response.weight,\n                polish: data.data.response.polish,\n                polish_name: data.data.response.polish_name,\n                hinge: data.data.response.hinge,\n                hinge_qty: data.data.response.hinge_qty,\n                hinge_name: data.data.response.hinge_name,\n                knob: data.data.response.knob,\n                knob_qty: data.data.response.knob_qty,\n                knob_name: data.data.response.knob_name,\n                handle: data.data.response.handle,\n                handle_qty: data.data.response.handle_qty,\n                handle_name: data.data.response.handle_name,\n                door: data.data.response.door,\n                door_qty: data.data.response.door_qty,\n                door_name: data.data.response.door_name,\n                fitting: data.data.response.fitting,\n                fitting_name: data.data.response.fitting_name,\n                selling_points: data.data.response.selling_points,\n                dial_size: data.data.response.dial_size,\n                seating_size_width: data.data.response.seating_size_width,\n                seating_size_depth: data.data.response.seating_size_depth,\n                seating_size_height: data.data.response.seating_size_height,\n                weight_capacity: data.data.response.weight_capacity,\n                fabric: data.data.response.fabric,\n                fabric_qty: data.data.response.fabric_qty,\n                fabric_name: data.data.response.fabric_name,\n                wall_hanging: data.data.response.wall_hanging,\n                assembly_required: data.data.response.assembly_required,\n                assembly_part: data.data.response.assembly_part,\n                legs: data.data.response.legs,\n                mirror: data.data.response.mirror,\n                mirror_length: data.data.response.mirror_length,\n                mirror_width: data.data.response.mirror_width,\n                silver: data.data.response.silver,\n                silver_weight: data.data.response.silver_weight,\n                joints: data.data.response.joints,\n                upholstery: data.data.response.upholstery,\n                trolley: data.data.response.trolley,\n                trolley_material: data.data.response.trolley_material,\n                rotating_seats: data.data.response.rotating_seats,\n                eatable_oil_polish: data.data.response.eatable_oil_polish,\n                no_chemical: data.data.response.no_chemical,\n                straight_back: data.data.response.straight_back,\n                lean_back: data.data.response.lean_back,\n                weaving: data.data.response.weaving,\n                knife: data.data.response.knife,\n                not_suitable_for_Micro_Dish:\n                  data.data.response.not_suitable_for_Micro_Dish,\n                tilt_top: data.data.response.tilt_top,\n                inside_compartments: data.data.response.inside_compartments,\n                stackable: data.data.response.stackable,\n                MRP: data.data.response.MRP,\n                tax_rate: data.data.response.tax_rate,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                status: data.data.response.status,\n                returnDays: data.data.response.returnDays,\n                COD: data.data.response.COD,\n                returnable: data.data.response.returnable,\n                drawer: data.data.response.drawer,\n                drawer_count: data.data.response.drawer_count,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                range: data.data.response.range,\n                back_style: data.data.response.back_style,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                quantity: data.data.response.quantity,\n                unit: data.data.response.unit,\n                assembly_level: data.data.response.assembly_level,\n                continue_selling: data.data.response.continue_selling,\n                wheel: data.data.response.wheel,\n                wheel_included: data.data.response.wheel_included,\n                wheel_qty: data.data.response.wheel_qty,\n                wheel_name: data.data.response.wheel_name,\n                ceramic_tiles: data.data.response.ceramic_tiles,\n                ceramic_tiles_qty: data.data.response.ceramic_tiles_qty,\n                ceramic_tiles_included:\n                  data.data.response.ceramic_tiles_included,\n                ceramic_tiles_name: data.data.response.ceramic_tiles_name,\n                ceramic_drawers: data.data.response.ceramic_drawers,\n                ceramic_drawers_included:\n                  data.data.response.ceramic_drawers_included,\n                ceramic_drawers_name: data.data.response.ceramic_drawers_name,\n                mattress: data.data.response.mattress,\n                mattress_length: data.data.response.mattress_length,\n                mattress_breadth: data.data.response.mattress_breadth,\n                plywood: data.data.response.plywood,\n                top_size_breadth: data.data.response.top_size_breadth,\n                top_size_length: data.data.response.top_size_length,\n                ceramic_drawers_qty: data.data.response.ceramic_drawers_qty,\n                variations: data.data.response.variations,\n                variant_label: data.data.response.variant_label,\n                parent_SKU: data.data.response.parent_SKU,\n                amazon_url: data.data.response.amazon_url,\n                flipkart_url: data.data.response.flipkart_url,\n                jiomart_url: data.data.response.jiomart_url,\n\n                action: data.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"updateProduct\");\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"variations\", changeData.variations);\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial\", changeData.dial);\n    changeData.dial && FD.append(\"dial_size\", changeData.dial_size);\n    changeData.dial && FD.append(\"dial_name\", changeData.dial_name);\n\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 1,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"M\", SKU);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = addMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            total: old.total + 1,\n            data: [\n              ...form.row,\n              {\n                id: form.row.length + 1,\n                M: data.data.response.M,\n                product_articles: data.data.response.product_articles,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                sub_category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_id: data.data.response.category_id,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                product_description: data.data.response.product_description,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                selling_points: data.data.response.selling_points,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                continue_selling: data.data.response.continue_selling,\n                COD: data.data.response.COD,\n                returnDays: data.data.response.returnDays,\n                returnable: data.data.response.returnable,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                action: data.data.response._id,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = updateMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          console.log(data.data.updates.product_articles);\n          form.setRow((old) => ({\n            ...old,\n            data: form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.product_title = changeData.product_title;\n                set.product_articles = data.data.updates.product_articles;\n                set.category_name = data.data.updates.category_name;\n                set.category_id = data.data.updates.category_id;\n                set.sub_category_name = data.data.updates.sub_category_name;\n                set.sub_category_id = data.data.updates.sub_category_id;\n                set.featured_image = data.data.updates.featured_image;\n                set.mannequin_image = data.data.updates.mannequin_image;\n                set.specification_image = data.data.updates.specification_image;\n                set.warehouse = data.data.updates.warehouse;\n                set.warehouse_name = data.data.updates.warehouse_name;\n                set.bangalore_stock = data.data.updates.bangalore_stock;\n                set.jodhpur_stock = data.data.updates.jodhpur_stock;\n                set.product_description = data.data.updates.product_description;\n                set.product_image = data.data.updates.product_image;\n                set.selling_points = data.data.updates.selling_points;\n                set.selling_price = data.data.updates.selling_price;\n                set.showroom_price = data.data.updates.showroom_price;\n                set.discount_limit = data.data.updates.discount_limit;\n                set.mobile_store = data.data.updates.mobile_store;\n                set.online_store = data.data.updates.online_store;\n                set.continue_selling = data.data.updates.continue_selling;\n                set.COD = data.data.updates.COD;\n                set.returnDays = data.data.updates.returnDays;\n                set.returnable = data.data.updates.returnable;\n                set.polish_time = data.data.updates.polish_time;\n                set.manufacturing_time = data.data.updates.manufacturing_time;\n                set.package_length = data.data.updates.package_length;\n                set.package_height = data.data.updates.package_height;\n                set.package_breadth = data.data.updates.package_breadth;\n                set.seo_title = data.data.updates.seo_title;\n                set.seo_description = data.data.updates.seo_description;\n                set.seo_keyword = data.data.updates.seo_keyword;\n                return set;\n              } else return set;\n            }),\n          }));\n\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handlePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Matrial\");\n    FD.append(\"operation\", \"insertMaterial\");\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n    FD.append(\n      \"primaryMaterial_status\",\n      e.target.primaryMaterial_status.checked\n    );\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    // const res = addPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     primaryMaterial_name: data.data.response.primaryMaterial_name,\n          //     primaryMaterial_description:\n          //       data.data.response.primaryMaterial_description,\n          //     primaryMaterial_image: data.data.response.primaryMaterial_image,\n          //     primaryMaterial_status: data.data.response.primaryMaterial_status,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.primaryMaterial_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdatePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.row.action);\n    FD.append(\"type\", \"Material\");\n    FD.append(\"operation\", \"updateMaterial\");\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    e.target.primaryMaterial_name.value !== \"\" &&\n      FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // const res = editPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.primaryMaterial_description =\n          //         e.target.primaryMaterial_description.value;\n          //       set.primaryMaterial_name = e.target.primaryMaterial_name.value;\n          //       set.customizations = changeData.customizations;\n          //       set.primaryMaterial_image =\n          //         Image[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.primaryMaterial_image;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = addSupplier(FD);\n\n    res\n      .then((data) => {\n        //console.log(data.status);\n\n        if (data.status === 200) {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              supplier_name: data.data.response.supplier_name,\n              mobile: data.data.response.mobile,\n              gst_no: data.data.response.gst_no,\n              alt_mobile: data.data.response.alt_mobile,\n              specialization: data.data.response.specialization,\n              SID: data.data.response.SID,\n              address: data.data.response.address,\n              action: data.data.response._id,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    FD.append(\"_id\", form.payload.row.action);\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = editSupplier(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.supplier_name = e.target.supplier_name.value;\n                set.mobile = e.target.mobile.value;\n                set.gst_no = e.target.gst_no.value;\n                set.alt_mobile = e.target.alt_mobile.value;\n                set.specialization = e.target.specialization.value;\n                set.SID = e.target.SID.value;\n                set.address = e.target.address.value;\n              }\n              return set;\n            })\n          );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleApplyDiscount = async (e) => {\n    e.preventDefault();\n\n    try {\n      const FD = new FormData();\n\n      console.log(changeData.category_discount);\n      // merge the discount with category name\n\n      let discount_array = [];\n\n      if (changeData.category_discount.length > 0)\n        discount_array = changeData.category_discount.map((name) => ({\n          name: name,\n          discount: changeData[name] || 0,\n        }));\n\n      FD.append(\"discount_array\", JSON.stringify(discount_array));\n\n      const res = await applyDiscount(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        setProductSKU({\n          P_SKU: [],\n          H_SKU: [],\n          supplier: [],\n          category: [],\n        });\n\n        form.setRow(\n          form.row.map((set) => {\n            let response = changeData.category_discount.filter((name) => {\n              return name === set.category_name;\n            });\n            console.log(response);\n            if (response.length > 0)\n              set.discount_limit = changeData[set.category_name];\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  };\n  const handleInward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n    FD.append(\"purpose\", changeData.purpose);\n\n    const res = addInward(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n            category: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              inward_id: data.data.response.inward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleOutward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n    console.log(changeData);\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n\n    const res = addOutward(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              outward_id: data.data.response.outward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleTransfer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"warehouse_to\", changeData.warehouse_to);\n\n    const res = addTransfer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              transfer_id: data.data.response.transfer_id,\n              order_no: data.data.response.order_no,\n              warehouse: data.data.response.warehouse,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              quantity: data.data.response.quantity,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"insertSubCategory\");\n\n    category.map((item) => {\n      item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", item.category_name);\n    });\n\n    FD.append(\"sub_category_image\", Image[0]);\n    FD.append(\"category_id\", e.target.category_id.value);\n    FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n    FD.append(\"sub_category_status\", e.target.sub_category_status.checked);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_id: data.data.response.category_id,\n          //     category_name: data.data.response.category_name,\n          //     sub_category_image: data.data.response.sub_category_image,\n          //     sub_category_name: data.data.response.sub_category_name,\n          //     sub_category_status: data.data.response.sub_category_status,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.sub_category_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    let catName = \"\";\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"updateSubCategory\");\n\n    // //console.log(form.payload);\n    Image[0] !== undefined && FD.append(\"sub_category_image\", Image[0]);\n\n    FD.append(\"_id\", changeData._id);\n\n    category.map((item) => {\n      if (item._id === e.target.category_id.value) catName = item.category_name;\n      return (\n        item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", catName)\n      );\n    });\n\n    e.target.category_id.value !== \"\" &&\n      FD.append(\"category_id\", e.target.category_id.value);\n    e.target.sub_category_name.value !== \"\" &&\n      FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.sub_category_name = e.target.sub_category_name.value;\n          //       set.category_name = catName;\n          //       Image[0] !== undefined\n          //         ? (set.sub_category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const [url, setUrl] = useState(\"\");\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    const res = uploadImage(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setImages([]);\n          setUrl(data.data.url);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleAddBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"insertBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    // const res = createBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     uuid: data.data.response.uuid,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     title: data.data.response.title,\n          //     card_image: data.data.response.card_image,\n          //     card_description: data.data.response.card_description,\n          //     description: data.data.response.description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.value._id);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"updateBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"_id\", form.payload.value._id);\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n\n    // const res = updateBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.seo_title = e.target.seo_title.value;\n          //       set.seo_description = e.target.seo_description.value;\n          //       set.title = e.target.title.value;\n          //       set.card_image =\n          //         featured[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.card_image;\n          //       set.card_description = e.target.card_description.value;\n          //       set.description =\n          //         editorRef.current.getContent() || set.description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateOrder = async(e) => {\n    try{\n    e.preventDefault();\n\n    console.log(changeData.quantity);\n    \n    const FD = new FormData();\n\n    // draft\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.O);\n    FD.append(\"type\", \"Order\");\n    FD.append(\"operation\", \"editOrder\");\n    \n    // order     \n    console.log(editorRef.current.getContent())\n    FD.append(\"note\", editorRef.current.getContent()  );\n    FD.append(\"status\", changeData.order_status);\n    \n    // product\n    let Product_SKU = {};\n    if (changeData.quantity.length > 0)\n      changeData.quantity.map(\n        (SKU) => (Product_SKU = { ...Product_SKU, [SKU]: parseInt(changeData[SKU]) || 1 })\n      );\n\n    FD.append(\"quantity\", JSON.stringify(Product_SKU));\n    \n    // customer\n    FD.append(\"O\", changeData.O);\n    FD.append(\"discount\", changeData.discount);\n    FD.append(\"paid\", changeData.paid);\n    FD.append(\"customer_name\", changeData.customer_name);\n    FD.append(\"customer_email\", changeData.customer_email);\n    FD.append(\"customer_mobile\", changeData.customer_mobile);\n    FD.append(\"country\", changeData.country);\n    FD.append(\"city\", changeData.city);\n    FD.append(\"state\", changeData.state);\n    FD.append(\"shipping\", changeData.shipping);\n    FD.append(\"billing\", changeData.billing);\n    FD.append(\"pincode\", changeData.pincode);\n    FD.append(\"GST\", changeData.GST);\n    FD.append(\"has_GST\", changeData.has_GST);\n    FD.append(\"classification\", changeData.classification);\n    FD.append(\"customer_type\", changeData.customer_type);\n\n    console.log(changeData,Product_SKU)\n\n    const res = await addDraft(FD);\n\n    \n        if (res.status !== 200) {\n          // setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message || \"Something Went Wrong !!!\",\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n    }catch(err){\n      console.log(err)\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n\n    }\n  };\n\n  const handleAddress = (e) => {\n    e.preventDefault();\n    setAddress([\n      ...address,\n      {\n        name: e.target.customer_name.value,\n        mobile: e.target.mobile.value,\n        pincode: changeData.pincode,\n        city: e.target.city.value,\n        state: e.target.state.value,\n        shipping: e.target.address.value,\n        type: e.target.type.value,\n      },\n    ]);\n    console.log(address);\n  };\n  const handleBillingAddress = (e) => {\n    e.preventDefault();\n    setBillingAddress([\n      ...billing,\n      {\n        name: e.target.customer_name.value,\n        mobile: e.target.mobile.value,\n        pincode: changeData.pincode,\n        city: e.target.city.value,\n        state: e.target.state.value,\n        shipping: e.target.address.value,\n        type: e.target.type.value,\n      },\n    ]);\n    console.log(address);\n  };\n\n  async function handleHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"insertHardware\");\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n\n      FD.append(\"specification_image\", changeData.specification_image || \"\");\n      FD.append(\"featured_image\", changeData.featured_image || \"\");\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      category.map((item) => {\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     SKU: data.data.response.SKU,\n        //     title: data.data.response.title,\n        //     category_name: data.data.response.category_name,\n        //     category_id: data.data.response.category_id,\n        //     sub_category_name: data.data.response.sub_category_name,\n        //     sub_category_id: data.data.response.sub_category_id,\n        //     hardware_image: data.data.response.hardware_image,\n        //     warehouse: data.data.response.warehouse,\n        //     bangalore_stock: data.data.response.bangalore_stock,\n        //     jodhpur_stock: data.data.response.jodhpur_stock,\n        //     manufacturing_time: data.data.response.manufacturing_time,\n        //     status: data.data.response.status,\n        //     returnDays: data.data.response.returnDays,\n        //     COD: data.data.response.COD,\n        //     returnable: data.data.response.returnable,\n        //     quantity: data.data.response.quantity,\n        //     package_length: data.data.response.package_length,\n        //     package_height: data.data.response.package_height,\n        //     package_breadth: data.data.response.package_breadth,\n        //     unit: data.data.response.unit,\n        //     range: data.data.response.range,\n        //     action: data.data.response._id,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  async function handleUpdateHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"updateHardware\");\n\n      // console.log(form.payload.row.action);\n\n      FD.append(\"_id\", form.payload.row.action);\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n      FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n      FD.append(\"specification_image\", changeData.specification_image);\n      FD.append(\"featured_image\", changeData.featured_image);\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n\n      let multiOBJ = {};\n\n      category.map((item) => {\n        if (item._id === changeData.category_name)\n          multiOBJ = { ...multiOBJ, category_name: item.category_name };\n\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        if (item._id === changeData.sub_category_name)\n          multiOBJ = { ...multiOBJ, sub_category_name: item.sub_category_name };\n\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time || 0);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", changeData.SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res) {\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.title = changeData.title;\n          //       set.category_name = multiOBJ.category_name;\n          //       set.category_id = changeData.category_id;\n          //       set.sub_category_name = multiOBJ.sub_category_name;\n          //       set.sub_category_id = changeData.sub_category_id;\n          //       set.hardware_image = changeData.hardware_image;\n          //       set.warehouse = changeData.warehouse.join(\",\");\n          //       set.bangalore_stock = changeData.bangalore_stock;\n          //       set.jodhpur_stock = changeData.jodhpur_stock;\n          //       set.manufacturing_time = changeData.manufacturing_time;\n          //       set.status = changeData.status;\n          //       set.returnDays = changeData.returnDays;\n          //       set.COD = changeData.COD;\n          //       set.returnable = changeData.returnable;\n          //       set.quantity = changeData.quantity;\n          //       set.package_length = changeData.package_length;\n          //       set.package_height = changeData.package_height;\n          //       set.package_breadth = changeData.package_breadth;\n          //       set.unit = changeData.unit;\n          //       set.range = changeData.range;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(\"error>>\", err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  const handlePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"insertPolish\");\n\n    FD.append(\"polish_name\", e.target.polish_name.value);\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"lock\", e.target.lock.checked);\n    FD.append(\"price\", e.target.price.value);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdatePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"updatePolish\");\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"polish_name\", changeData.polish_name);\n    FD.append(\"lock\", changeData.lock);\n    FD.append(\"price\", changeData.price);\n    FD.append(\"savedOutDoor\", JSON.stringify(changeData.savedImages));\n    FD.append(\"savedIndoor\", JSON.stringify(changeData.indoorSavedImage));\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.polish_name = changeData.polish_name;\n          //       set.polish_type = changeData.polish_type;\n          //       set.polish_finish = changeData.polish_finish;\n          //       set.level = changeData.level;\n          //       set.outDoor_image = changeData.outDoor_image;\n          //       set.inDoor_image = changeData.inDoor_image;\n          //       set.lock = changeData.lock;\n          //       set.price = changeData.price;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        setImages([]);\n        setIndoor([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateCoupon = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.coupon_code);\n    FD.append(\"type\", \"Coupon\");\n    FD.append(\"operation\", \"updateCoupon\");\n    FD.append(\"times\", changeData.times);\n    FD.append(\"coupon_code\", changeData.coupon_code);\n    FD.append(\"coupon_type\", changeData.coupon_type);\n    changeData.coupon_type === \"FLAT\" &&\n      FD.append(\"flat_amount\", changeData.flat_amount);\n    changeData.coupon_type === \"OFF(%)\" && FD.append(\"off\", changeData.off);\n    FD.append(\"valid_from\", changeData.valid_from);\n    FD.append(\"expiry\", changeData.expiry);\n    FD.append(\"coupon_description\", changeData.coupon_description);\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleCoupon = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Coupon\");\n    FD.append(\"operation\", \"addCoupon\");\n    FD.append(\"times\", changeData.times);\n    FD.append(\"coupon_code\", changeData.coupon_code);\n    FD.append(\"coupon_type\", changeData.coupon_type);\n    changeData.coupon_type === \"FLAT\" &&\n      FD.append(\"flat_amount\", changeData.flat_amount);\n    changeData.coupon_type === \"OFF(%)\" && FD.append(\"off\", changeData.off);\n    FD.append(\"valid_from\", changeData.valid_from);\n    FD.append(\"expiry\", changeData.expiry);\n    FD.append(\"coupon_description\", changeData.coupon_description);\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  async function handleReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"\");\n      FD.append(\"type\", \"Review\");\n      FD.append(\"operation\", \"addReview\");\n      FD.append(\"product_id\", changeData.product_id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      FD.append(\"reviewer_name\", changeData.reviewer_name);\n      FD.append(\"reviewer_email\", changeData.reviewer_email);\n      files.map((element) => {\n        if (element.validate) return FD.append(\"review_images\", element);\n      });\n      const res = await addDraft(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          // form.setCheck((old) => [...old, true]);\n          // form.setRow((old) => ({\n          //   ...old,\n          //   data: [\n          //     ...old.data,\n          //     {\n          //       id: old.data.length + 1,\n          //       CID: res.data.response.CID,\n          //       product_id: res.data.response.product_id,\n          //       rating: res.data.response.rating,\n          //       review: res.data.response.review,\n          //       admin_reply: res.data.response.admin_reply,\n          //       review_title: res.data.response.review_title,\n          //       review_images: res.data.response.review_images,\n          //       review_videos: res.data.response.review_videos,\n          //       yourTube_url: res.data.response.yourTube_url,\n          //       reviewer_name: res.data.response.reviewer_name,\n          //       reviewer_email: res.data.response.reviewer_email,\n          //       hide: res.data.response.hide,\n          //       date: res.data.response.date,\n          //       action: res.data.response,\n          //     },\n          //   ],\n          // }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      //console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData._id);\n      FD.append(\"type\", \"Review\");\n      FD.append(\"operation\", \"updateReview\");\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      const res = await addDraft(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: old.data.map((row, index) => {\n              console.log(row);\n              if (row.action._id === changeData._id) {\n                row.rating = changeData.rating;\n                row.review = changeData.review;\n                row.review_title = changeData.review_title;\n                row.yourTube_url = changeData.yourTube_url;\n              }\n              return row;\n            }),\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  // load new searchList\n  const handleSupplierList = async (e) => {\n    const delayDebounceFn = setTimeout(() => {\n      getSupplierDropdown(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: res.data.Suppliers,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  };\n  async function handleSearchStockSKU(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getStockSKU({ search: e.target.value, warehouse: changeData.warehouse })\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearch(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getArticlesId(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearchCategory(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getCategoryList(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: res.data,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n\n  // function for handling banner\n  async function handleBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"addBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      FD.append(\"web_banner\", webBanner[0]);\n      FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     user_name : res.data.response.user_name,\n        //     email : res.data.response.email,\n        //     mobile : res.data.response.mobile,\n        //     role : res.data.response.role,\n        //     access : res.data.response.access,\n        //     action: res.data.response,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.uuid);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"updateBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      webBanner.length > 0 && FD.append(\"web_banner\", webBanner[0]);\n      mobileBanner.length > 0 && FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     category_name: data.data.response.category_name,\n        //     category_status: data.data.response.category_status,\n        //     category_image: data.data.response.category_image,\n        //     seo_title: data.data.response.seo_title,\n        //     seo_description: data.data.response.seo_description,\n        //     seo_keyword: data.data.response.seo_keyword,\n        //     product_description: data.data.response.product_description,\n        //     action: data.data.response,\n        //   },\n        // ]);\n        // form.setCheck((old) => [...old, data.data.response.category_status]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUser(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"user_name\", changeData.user_name);\n      FD.append(\"password\", changeData.password);\n      FD.append(\"email\", changeData.email);\n      FD.append(\"mobile\", changeData.mobile);\n      FD.append(\"role\", changeData.role);\n      FD.append(\"access\", changeData.access);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addUser(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        form.setRow([\n          ...form.row,\n          {\n            id: form.row.length + 1,\n            user_name: res.data.response.user_name,\n            email: res.data.response.email,\n            mobile: res.data.response.mobile,\n            role: res.data.response.role,\n            access: res.data.response.access,\n            action: res.data.response,\n          },\n        ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateUser(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"user_name\", changeData.user_name);\n      FD.append(\"email\", changeData.email);\n      FD.append(\"mobile\", changeData.mobile);\n      FD.append(\"role\", changeData.role);\n      FD.append(\"access\", changeData.access);\n\n      const res = await updateUser(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        console.log(changeData.access);\n        form.setRow(\n          form.row.map((set) => {\n            if (set.action === form.payload.row.action) {\n              set.user_name = changeData.user_name;\n              set.email = changeData.email;\n              set.mobile = changeData.mobile;\n              set.role = changeData.role;\n              set.access = changeData.access;\n              set.action = changeData.action;\n            }\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  useEffect(() => {\n    handelPincode();\n  }, [changeData.pincode]);\n\n  async function handelPincode() {\n    // console.log(changeData.pincode);\n    if (changeData.pincode.toString().length === 6) {\n      let res = await getAddress(changeData.pincode);\n      if (res.status === 200) {\n        let pincode = res.data.results[changeData.pincode] || [];\n        setCatalog((old) => ({ ...old, city: pincode }));\n        setData((old) => ({\n          ...old,\n          state: pincode[0].state,\n        }));\n      }\n    } else {\n      setData((old) => ({ ...old, pincode: changeData.pincode }));\n    }\n  }\n\n  async function handlePincodeSearch(e) {\n    console.log(e.target.value);\n    let res = await listPincode({\n      page: 1,\n      limit: 10,\n      total: 10,\n      pincode: e.target.value,\n    });\n    if (res.status === 200) {\n      setCatalog((old) => ({ ...old, pincode: [...res.data.data] }));\n    }\n  }\n\n  return (\n    <>\n      <Slide direction=\"left\" in={form.state} mountOnEnter unmountOnExit>\n        <Backdrop\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open={form.state}\n        >\n          <Box\n            className={\n              mode.type === true ? \"mainDarkContainer\" : \"mainContainer\"\n            }\n            sx={\n              form.formType === \"product\" || form.formType === \"update_product\" || form.formType === \"variation\"\n              || form.formType === \"edit_order\"\n                ? { width: \"100vw !important\", padding: \"0 5% !important\" }\n                : {}\n            }\n          >\n            <IconButton\n              onClick={handleClose}\n              color=\"primary\"\n              className=\"crossButton\"\n            >\n              <CancelIcon />\n            </IconButton>\n\n            {/* add Products */}\n\n            {form.formType === \"product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* \n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                      changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <Grid xs={12}>\n                                  <Typography variant=\"h6\">\n                                    Uploaded Images\n                                  </Typography>\n                                </Grid>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.dial}\n                                    onChange={handleProductFields}\n                                    name=\"dial\"\n                                  />\n                                }\n                                label=\"Dial\"\n                              />\n\n\n\n                              {changeData.dial && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"dial_name\"\n                                    label=\"Dail\"\n                                    multiple\n                                    value={changeData.dial_name}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.dial.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Inch\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.dial_size}\n                                    onChange={handleProductFields}\n                                    name=\"dial_size\"\n                                  />\n\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"drawer_count\"\n                                  label=\"Drawer Count\"\n                                  value={changeData.drawer_count}\n                                  onChange={handleProductFields}\n                                />\n                              )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Products Ends */}\n            {/* Update Products */}\n\n            {form.formType === \"update_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.SKU || \"\"}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                      changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.dial}\n                                    onChange={handleProductFields}\n                                    name=\"dial\"\n                                  />\n                                }\n                                label=\"Dial\"\n                              />\n\n\n                              {changeData.dial && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"dial_name\"\n                                    label=\"Dail\"\n                                    multiple\n                                    value={changeData.dial_name}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.dial.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Inch\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.dial_size}\n                                    onChange={handleProductFields}\n                                    name=\"dial_size\"\n                                  />\n\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"drawer_count\"\n                                  label=\"Drawer Count\"\n                                  value={changeData.drawer_count}\n                                  onChange={handleProductFields}\n                                />\n                              )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url || \"\"}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url || \"\"}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url || \"\"}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Products Ends */}\n            {/* Variation Products */}\n\n            {form.formType === \"variation\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Create Variation\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add variation of product and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleVariation);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              required\n                              label=\"ACIN Number\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"ACIN\"\n                              value={changeData.ACIN}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                      changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.dial}\n                                    onChange={handleProductFields}\n                                    name=\"dial\"\n                                  />\n                                }\n                                label=\"Dial\"\n                              />\n\n\n                              {changeData.dial && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"dial_name\"\n                                    label=\"Dail\"\n                                    multiple\n                                    value={changeData.dial_name}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.dial.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Inch\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.dial_size}\n                                    onChange={handleProductFields}\n                                    name=\"dial_size\"\n                                  />\n\n                                </>\n                              )}\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"drawer_count\"\n                                  label=\"Drawer Count\"\n                                  value={changeData.drawer_count}\n                                  onChange={handleProductFields}\n                                />\n                              )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Create Variation\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Variation Products Ends */}\n\n            {/* merge Products */}\n\n            {form.formType === \"merge_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Merge your products and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              autoHighlight\n                              noOptionsText={\"ex : P-01001\"}\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles || \"\"}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* merge Products Ends */}\n\n            {/* update merge Products */}\n\n            {form.formType === \"update_merge\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update Merge your products and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              disabled\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.M}\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              disablePortal\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              noOptionsText={\"ex : P-01001\"}\n                              autoHighlight\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              isOptionEqualToValue={(option, value) => {\n                                // console.log(value);\n                                return typeof value === \"Array\"\n                                  ? value.isInclude(option)\n                                  : value === option;\n                              }}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update merge Products Ends */}\n\n            {/*  add Category */}\n\n            {form.formType === \"category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product category and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCategory);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"category_name\"\n                      label=\"Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Category Ends */}\n\n            {/*  update Category */}\n\n            {form.formType === \"update_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCategory);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      onChange={handleChangeData}\n                      value={changeData.category}\n                      name=\"category_name\"\n                      label=\"Category\"\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Category Ends */}\n\n            {/*  discount Category */}\n\n            {form.formType === \"discount_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Discount\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add discount on product category from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleApplyDiscount);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : Chair\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.category.map((row) => {\n                        return row.category_name;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchCategory}\n                          value={changeData.category_discount || \"\"}\n                          {...params}\n                          label=\"Select Category\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          category_discount: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.category_discount.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Discount Limit\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.category_discount.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] < 100 && changeData[item]\n                                  ? changeData[item]\n                                  : 0\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Apply Discount\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* discount Category Ends */}\n\n            {/*  add primaryMateriel */}\n\n            {form.formType === \"primaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePrimaryMaterial);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      defaultValue={\"Material Description\"}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"customizations\" />}\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"primaryMaterial_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add primaryMaterial Ends */}\n\n            {/*  update primaryMaterial */}\n\n            {form.formType === \"update_PrimaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePrimaryMaterial);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      value={changeData.primaryMaterial_name}\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      onChange={handleChangeData}\n                      defaultValue={changeData.primaryMaterial_description}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.customizations}\n                            name=\"customizations\"\n                            onChange={handleProductFields}\n                          />\n                        }\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update primaryMaterial Ends */}\n\n            {/*  add Supplier */}\n\n            {form.formType === \"add_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add Supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      disabled\n                      value={SKU || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Suppliers  Ends */}\n\n            {/*  update Suppliers  */}\n\n            {form.formType === \"update_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      value={changeData.SID || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization || \"\"}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update suppliers Ends */}\n\n            {/*  update blog  */}\n\n            {form.formType === \"update_blog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                      value={changeData.seo_title}\n                      onChange={handleChangeData}\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                      value={changeData.seo_description}\n                      onChange={handleChangeData}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.card_description}\n                      onChange={handleChangeData}\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.title}\n                      onChange={handleChangeData}\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue={`${changeData.description}`}\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add update blog  Ends */}\n\n            {/*   Add BLog */}\n\n            {form.formType === \"addBlog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleAddBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Add Blog Description\n                    </FormLabel>\n\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue=\"<p>Write Blog Here!!!</p>\"\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Add Blog Ends */}\n\n            {/*  add subCategory */}\n\n            {form.formType === \"subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your sub category and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\n                        \"Please Drag and Drop a image for sub Category image\"\n                      }\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      label=\"Category\"\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"sub_category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add sebCategory Ends */}\n\n            {/*update subCategory */}\n\n            {form.formType === \"update_Subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your update sub category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop a image for Sub Category.\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Category\n                    </FormLabel>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      displayEmpty\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      value={changeData.sub_category_name || \"\"}\n                      onChange={handleProductFields}\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update sebCategory Ends */}\n\n            {/*  add Customer */}\n\n            {form.formType === \"add_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add customer details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n                {/* addres form */}\n                <AddressForm\n                  setOpen={setOpen}\n                  open={open.open}\n                  setOuter={setData}\n                  confirmBox={confirmBox}\n                  handleAddress={open.type === 'billing' ? handleBillingAddress : handleAddress}\n                />\n                {/* addres form */}\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <FormControl>\n                      <FormLabel id=\"demo-radio-buttons-group-label\">\n                        Classification\n                      </FormLabel>\n                      <RadioGroup\n                        aria-labelledby=\"demo-radio-buttons-group-label\"\n                        name=\"classification\"\n                        size=\"small\"\n                        value={changeData.classification}\n                        onChange={handleProductFields}\n                      >\n                        <FormControlLabel\n                          value=\"personal\"\n                          control={<Radio />}\n                          label=\"Personal\"\n                          size=\"small\"\n                        />\n                        <FormControlLabel\n                          size=\"small\"\n                          value=\"business\"\n                          control={<Radio />}\n                          label=\"Business\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.customer_type}\n                      onChange={handleProductFields}\n                      select\n                      sx={{ mb: 2, mt: 1 }}\n                      name=\"customer_type\"\n                      label=\"Customer Type\"\n                      multiple\n                      helperText=\"Please select customer type.\"\n                    >\n                      {customer_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n                    <Grid container>\n                      {address &&\n                        address.map((item) => {\n                          return (\n                            <Grid item xs={3}>\n                              <Box\n                                sx={{\n                                  overflowWrap: \"break-word\",\n                                  border: \"2px solid #a52a2a80\",\n                                  borderStyle: \"dashed\",\n                                  p: 1,\n                                  ml: 1,\n                                  mr: 1,\n                                  width: \"130px\",\n                                  height: \"150px\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                <Typography variant=\"caption\">\n                                  {item.shipping}\n                                </Typography>\n                              </Box>\n                            </Grid>\n                          );\n                        })}\n                      <Grid item xs={3}>\n                        <Button\n                          variant=\"outlined\"\n                          sx={{ width: \"20%\" }}\n                          onClick={() => {\n                            setOpen({ open: true, type: 'shipping' });\n                          }}\n                        >\n                          <AddIcon />\n                        </Button>\n                      </Grid>\n                    </Grid>\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Billing Address\n                    </FormLabel>\n                    <Grid container>\n                      {billing &&\n                        billing.map((item) => {\n                          return (\n                            <Grid item xs={3}>\n                              <Box\n                                sx={{\n                                  overflowWrap: \"break-word\",\n                                  border: \"2px solid #a52a2a80\",\n                                  borderStyle: \"dashed\",\n                                  p: 1,\n                                  ml: 1,\n                                  mr: 1,\n                                  width: \"130px\",\n                                  height: \"150px\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                <Typography variant=\"caption\">\n                                  {item.shipping}\n                                </Typography>\n                              </Box>\n                            </Grid>\n                          );\n                        })}\n                      <Grid item xs={3}>\n                        <Button\n                          variant=\"outlined\"\n                          sx={{ width: \"20%\" }}\n                          onClick={() => {\n                            setOpen({ open: true, type: 'billing' });\n                          }}\n                        >\n                          <AddIcon />\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.marketing}\n                            onChange={handleProductFields}\n                            name=\"marketing\"\n                          />\n                        }\n                        label=\"Marketing\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Customer Ends */}\n            {/*  update Customer */}\n\n            {form.formType === \"update_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update customer details and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.username}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.pincode}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"pincode\"\n                      label=\"Pin-Code\"\n                      type=\"number\"\n                    /> */}\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.city}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"city\"\n                      label=\"City\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.state}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"state\"\n                      label=\"state\"\n                      type=\"text\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.landmark}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"landmark\"\n                      label=\"Landmark\"\n                      type=\"text\"\n                      helperText = 'Place nearby the main building.'\n                    /> */}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      value={changeData.shipping || \"\"}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"shipping\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Customer Ends */}\n\n            {/* edit order */}\n\n            {form.formType === \"edit_order\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Edit Order\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Edit order details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateOrder);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Order Section */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Order Section\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              value={changeData.order_status || ''}\n                              onChange={handleProductFields}\n                              select\n                              sx={{ mb: 2, mt: 1 }}\n                              name=\"order_status\"\n                              label=\"Order Status\"\n                              multiple\n                              helperText=\"Please select customer type.\"\n                            >\n                              {order_status.map((option) => (\n                                <MenuItem key={option.value} value={option.key}>\n                                  {option.value}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              type = 'number'\n                              //required\n                              id=\"outlined-select\"\n                              name=\"discount\"\n                              value={(changeData.discount >= 1 && changeData.discount < 100 ) && changeData.discount }\n                              onChange={handleProductFields}\n                              label=\"Discount\"\n                            />\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              type = 'number'\n                              //required\n                              id=\"outlined-select\"\n                              name=\"paid\"\n                              value={(changeData.paid >= 1 && changeData.paid <= changeData.total ) && changeData.paid }\n                              onChange={handleProductFields}\n                              label=\"Paid\"\n                            />\n\n                            <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              defaultValue={changeData.note}\n                              initialValue={changeData.note}\n                              onInit={(event, editor) => (editorRef.current = editor)}\n                              init={{\n                                height: 400,\n                                menubar: true,\n                                plugins: \"image code\",\n                              }}\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Order section Ends*/}\n                      {/* // Product Section */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Product Section\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Section\n                            </FormLabel>\n                            <Autocomplete\n                              disablePortal\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              noOptionsText={\"ex : P-01001\"}\n                              autoHighlight\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              isOptionEqualToValue={(option, value) => {\n                                // console.log(value);\n                                return typeof value === \"Array\"\n                                  ? value.isInclude(option)\n                                  : value === option;\n                              }}\n                              value={changeData.quantity}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.quantity}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  quantity: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.quantity.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.quantity.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] > 0 ? changeData[item] : 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Product section Ends*/}\n                      {/* // Customer Section */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Customer Section\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 2}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Customer Section\n                            </FormLabel>\n\n                            <FormControl sx={{ mt: 1 }}>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Classification\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"classification\"\n                                size=\"small\"\n                                value={changeData.classification}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"personal\"\n                                  control={<Radio />}\n                                  label=\"Personal\"\n                                  size=\"small\"\n                                />\n                                <FormControlLabel\n                                  size=\"small\"\n                                  value=\"business\"\n                                  control={<Radio />}\n                                  label=\"Business\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              value={changeData.customer_type}\n                              onChange={handleProductFields}\n                              select\n                              sx={{ mb: 2, mt: 1 }}\n                              name=\"customer_type\"\n                              label=\"Customer Type\"\n                              multiple\n                              helperText=\"Please select customer type.\"\n                            >\n                              {customer_type.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  {option}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              //required\n                              id=\"outlined-select\"\n                              name=\"customer_name\"\n                              value={changeData.customer_name || \"\"}\n                              onChange={handleProductFields}\n                              label=\"Customer Name\"\n                              type=\"text\"\n                            />\n\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              //required\n                              id=\"outlined-select\"\n                              value={changeData.customer_email || \"\"}\n                              onChange={handleProductFields}\n                              name=\"customer_email\"\n                              label=\"Customer Email\"\n                              type=\"email\"\n                            />\n\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              //required\n                              id=\"outlined-select\"\n                              name=\"customer_mobile\"\n                              value={changeData.customer_mobile || \"\"}\n                              onChange={handleProductFields}\n                              label=\"Contact Number\"\n                              type=\"number\"\n                            />\n\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              //required\n                              id=\"outlined-select\"\n                              name=\"country\"\n                              value={changeData.country || \"\"}\n                              onChange={handleProductFields}\n                              label=\"Country\"\n                              type=\"text\"\n                            />\n\n                            <Autocomplete\n                              freeSolo\n                              size=\"small\"\n                              fullWidth\n                              noOptionsText={\"ex : 305001\"}\n                              autoHighlight\n                              id=\"combo-box-demo\"\n                              value={changeData.pincode || \"\"}\n                              options={catalog.pincode.map((row) => {\n                                return row.pincode;\n                              })}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handlePincodeSearch}\n                                  value={changeData.pincode || \"\"}\n                                  {...params}\n                                  label=\"Pincode\"\n                                />\n                              )}\n                              onChange={(e, val) =>\n                                setData((old) => ({\n                                  ...old,\n                                  pincode: val,\n                                }))\n                              }\n                            />\n\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              value={changeData.city}\n                              onChange={handleProductFields}\n                              select\n                              sx={{ mb: 2, mt: 1 }}\n                              name=\"city\"\n                              label=\"City\"\n                              multiple\n                              helperText=\"Please select your city.\"\n                            >\n                              {catalog.city.map((option) => (\n                                <MenuItem key={option.city} value={option.city}>\n                                  {option.city}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n\n                            <TextField\n                              sx={{ pb: 2 }}\n                              size=\"small\"\n                              fullWidth\n                              //required\n                              disabled\n                              id=\"outlined-select\"\n                              name=\"state\"\n                              value={changeData.state || \"\"}\n                              onChange={handleProductFields}\n                              label=\"State\"\n                              type=\"text\"\n                            />\n\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                GST\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"has_GST\"\n                                size=\"small\"\n                                value={changeData.has_GST}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                  size=\"small\"\n                                />\n                                <FormControlLabel\n                                  size=\"small\"\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n\n                            {changeData.has_GST === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                value={changeData.GST}\n                                onChange={handleProductFields}\n                                minRows={5}\n                                maxRows={5}\n                                style={{ width: \"100%\", resize: \"none\" }}\n                                name=\"GST\"\n                                type=\"text\"\n                                label=\"GST Number\"\n                                variant=\"outlined\"\n                              />\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Shipping Address\n                            </FormLabel>\n                            <TextareaAutosize\n                              minRows={4}\n                              placeholder=\"Shipping Address...\"\n                              style={{ mt: 1, width: \"100%\" }}\n                              size=\"small\"\n                              fullWidth\n                              //required\n                              id=\"outlined-select\"\n                              name=\"shipping\"\n                              value={changeData.shipping || \"\"}\n                              onChange={handleProductFields}\n                              label=\"Shipping\"\n                              type=\"text\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Billing Address\n                            </FormLabel>\n                            <TextareaAutosize\n                              minRows={4}\n                              placeholder=\"Billing Address...\"\n                              style={{ marginTop: \"10px\", width: \"100%\" }}\n                              size=\"small\"\n                              fullWidth\n                              //required\n                              id=\"outlined-select\"\n                              name=\"billing\"\n                              value={changeData.billing || \"\"}\n                              onChange={handleProductFields}\n                              label=\"Shipping\"\n                              type=\"text\"\n                            />\n\n                           \n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Customer section Ends*/}\n\n\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Order\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* {edit order} */}\n\n            {/* cancel_order  */}\n\n            {form.formType === \"cancel_order\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Cancel Order\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Cancel order details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateOrder);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n\n<FormGroup>\n\n  {/* /// restock */}\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.restock}\n                                    onChange={handleProductFields}\n                                    name=\"restock\"\n                                  />\n                                }\n                                label=\"Restocking\"\n                              />\n   {changeData.restock && (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"fullWidth\"\n                                    label=\"AWB\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          AWB\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.AWB}\n                                    onChange={handleProductFields}\n                                    name=\"AWB\"\n                                  />\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"fullWidth\"\n                                    label=\"courier_company\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Courier Company Name\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.courier_company}\n                                    onChange={handleProductFields}\n                                    name=\"courier_company\"\n                                  />\n\n                                </>\n                              )}\n\n{/* //  Return */}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.return}\n                                    onChange={handleProductFields}\n                                    name=\"return\"\n                                  />\n                                }\n                                label=\"Return\"\n                              />\n\n{changeData.return && (\n                                <>\n                                <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"return_reason\"\n                                    label=\"Return Reason\"\n                                    multiple\n                                    value={changeData.return_reason}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Return Reason.\"\n                                  >\n                                    {return_reason.map(\n                                      (option) =><MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                    )}\n                                  </TextField>\n\n                                </>\n                              )}\n\n{/* refund */}\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.refund}\n                                    onChange={handleProductFields}\n                                    name=\"refund\"\n                                  />\n                                }\n                                label=\"Refund\"\n                              />\n\n                      \n                              {changeData.refund && (\n                                <>\n                                  \n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"How much needs to refund\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          ₹\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.refund_ammound}\n                                    onChange={handleProductFields}\n                                    name=\"refund_ammound\"\n                                  />\n\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n\n\n          \n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Cancel Order\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* cancel_order end  */}\n\n            {/* add Hardware */}\n\n            {form.formType === \"hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              // fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware Ends */}\n            {/* update Hardware */}\n\n            {form.formType === \"update_hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                  option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews files={files} setFiles={setFiles}\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time || 0}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type=\"number\"\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Hardware Ends */}\n\n            {/* add inward */}\n\n            {form.formType === \"inward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Inward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your inward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleInward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : H-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      noOptionsText={\"ex : SID-01001\"}\n                      autoHighlight\n                      clearOnEscape\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      type=\"text\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"driver_name\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"Number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Inward Ends */}\n\n            {/* add Outward */}\n\n            {form.formType === \"outward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Outward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your outward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleOutward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      autoHighlight\n                      clearOnEscape\n                      noOptionsText={\"ex : SID-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      name=\"driver_name\"\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n\n                    {/* <TextField  \n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Quantity\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"quantity\"\n                    /> */}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add outward Ends */}\n\n            {/* add Transfer */}\n\n            {form.formType === \"transfer\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Transfer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Transfer stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleTransfer);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"warehouse\"\n                      size=\"small\"\n                      required\n                      label=\"From Warehouse\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      required\n                      size=\"small\"\n                      name=\"warehouse_to\"\n                      label=\"To Warehouse\"\n                      value={changeData.warehouse_to || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map(\n                        (option) =>\n                          changeData.warehouse !== option.value && (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.value}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Transfer Ends */}\n\n            {/*  add Polish Material */}\n\n            {form.formType === \"addPolish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews files={files} setFiles={setFiles}\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      value={changeData.polish_type || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      label=\"Polish Finish\"\n                      value={changeData.polish_finish || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add addPolish  Ends */}\n\n            {/*  update Polish Material */}\n\n            {form.formType === \"update_polish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      value={changeData.polish_name || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews files={files} setFiles={setFiles}\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.savedImages.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.savedImages.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.savedImages;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      savedImages: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {/* {console.log(Indoor)} */}\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.indoorSavedImage.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.indoorSavedImage.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.indoorSavedImage;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      indoorSavedImage: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.polish_type || \"\"}\n                      onChange={handleProductFields}\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      multiple\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      value={changeData.polish_finish || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Finish\"\n                      multiple\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      value={changeData.price || 0}\n                      onChange={handleProductFields}\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update addPolish  Ends */}\n\n            {/* add Review */}\n\n            {form.formType === \"review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      freeSolo\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, val) =>\n                        setData((old) => ({\n                          ...old,\n                          product_id: val,\n                        }))\n                      }\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Review Images\n                    </FormLabel>\n                    <ProductsPreviews files={files} setFiles={setFiles}\n                      text={\"Please Drag and Drop the review image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {/* // image Squence  Images */}\n                    {files.length > 0 && (\n                      <ImageSquence\n                        text={\"New Images\"}\n                        image={files}\n                        setImage={setFiles}\n                        savedImage={false}\n                      />\n                    )}\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        // value={reviewData.data.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Name (Name you want to show on review)\"\n                      value={changeData.reviewer_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_name\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Email\"\n                      value={changeData.reviewer_email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_email\"\n                    />\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add REview ends */}\n\n            {/*  update Review */}\n\n            {form.formType === \"update_review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Edit Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Edit review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      disabled\n                      onKeyUpCapture={handleSearch}\n                      size=\"small\"\n                      value={changeData.product_id}\n                      label=\"Product SKU\"\n                    />\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={changeData.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Review  Ends */}\n\n            {/* add Banner */}\n\n            {form.formType === \"add_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Sequence Number\"\n                      size=\"small\"\n                      required\n                      error={sequence.includes(\n                        parseInt(changeData.sequence_no)\n                      )}\n                      helperText={\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      type=\"number\"\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Banner ends */}\n            {/* Update Banner */}\n\n            {form.formType === \"update_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n                    {changeData.web_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img alt=\"web_banner\" src={changeData.web_banner} />\n                        </Box>\n                      </>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n                    {changeData.mobile_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img\n                            alt=\"mobile_banner\"\n                            src={changeData.mobile_banner}\n                          />\n                        </Box>\n                      </>\n                    )}\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      // error={sequence.includes(changeData.sequence_no)}\n                      label={`Sequence Number`}\n                      size=\"small\"\n                      type=\"number\"\n                      required\n                      error={\n                        parseInt(changeData.old_sequence_no) !==\n                        parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no))\n                      }\n                      helperText={\n                        parseInt(changeData.old_sequence_no) !==\n                        parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* Update REview ends */}\n\n            {/* add User */}\n            {form.formType === \"add_user\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add User\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add user details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUser);\n                    }}\n                    id=\"myForm\"\n                    encType=\"application/x-www-form-urlencoded\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Full Name\"\n                      value={changeData.user_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"user_name\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type=\"email\"\n                      label=\"Email Address\"\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"email\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Mobile Number\"\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type={\"password\"}\n                      label=\"Password\"\n                      value={changeData.password}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"password\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the role.\"\n                      name=\"role\"\n                      label=\"Select role...\"\n                      value={changeData.role || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {role.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Autocomplete\n                      sx={{ mt: 1 }}\n                      multiple\n                      id=\"size-small-standard-multi\"\n                      size=\"small\"\n                      options={modules}\n                      value={changeData.access || []}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select Access\"\n                          placeholder=\"Access\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          access: newMember,\n                        }))\n                      }\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add User\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add User ends */}\n\n            {/* update User */}\n            {form.formType === \"update_user\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update User\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update usre details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateUser);\n                    }}\n                    id=\"myForm\"\n                    encType=\"application/x-www-form-urlencoded\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Full Name\"\n                      value={changeData.user_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"user_name\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type=\"email\"\n                      label=\"Email Address\"\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"email\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Mobile Number\"\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the role.\"\n                      name=\"role\"\n                      label=\"Select role...\"\n                      value={changeData.role || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {role.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Autocomplete\n                      sx={{ mt: 1 }}\n                      multiple\n                      id=\"size-small-standard-multi\"\n                      size=\"small\"\n                      options={modules}\n                      value={changeData.access || []}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select Access\"\n                          placeholder=\"Access\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          access: newMember,\n                        }))\n                      }\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update User\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update User ends */}\n\n            {/* add coupon  */}\n            {form.formType === \"add_coupon\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add coupon\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add coupon and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCoupon);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      required\n                      id=\"outlined-select\"\n                      name=\"coupon_code\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      label=\"Coupon Code\"\n                      onChange={handleProductFields}\n                      value={changeData.coupon_code || \"\"}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon code must be unique.\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"times\"\n                      label=\"Useable Up To\"\n                      value={changeData.times}\n                      onChange={handleProductFields}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            Times\n                          </InputAdornment>\n                        ),\n                      }}\n                      helperText=\"How many time we can apply this coupon?\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the coupon type.\"\n                      name=\"coupon_type\"\n                      label=\"Select coupon...\"\n                      value={changeData.coupon_type || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {coupon_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    {changeData.coupon_type === \"FLAT\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        name=\"flat_amount\"\n                        label=\"Flat Amount\"\n                        value={changeData.flat_amount}\n                        onChange={handleProductFields}\n                        type=\"number\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">₹</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter amount for discount.\"\n                      />\n                    )}\n\n                    {changeData.coupon_type === \"OFF(%)\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        type=\"number\"\n                        name=\"off\"\n                        value={changeData.off < 100 ? changeData.off : 0}\n                        onChange={handleProductFields}\n                        inputProps={{ style: { textTransform: \"uppercase\" } }}\n                        label=\"OFF %\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">%</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter % amount for discount.\"\n                      />\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"valid_from\"\n                      value={changeData.valid_from}\n                      onChange={handleProductFields}\n                      label=\"Valid From\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n                    <TextField\n                      sx={{ mt: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"expiry\"\n                      value={changeData.expiry}\n                      onChange={handleProductFields}\n                      label=\"Expiry Date\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Coupon Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"coupon_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.coupon_description}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon description.\"\n                    />\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add coupon\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add coupon */}\n            {/* add coupon  */}\n            {form.formType === \"update_coupon\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update coupon\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update coupon and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCoupon);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      required\n                      id=\"outlined-select\"\n                      name=\"coupon_code\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      label=\"Cupone Code\"\n                      onChange={handleProductFields}\n                      value={changeData.coupon_code || \"\"}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon code must be unique.\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"times\"\n                      label=\"Useable Up To\"\n                      value={changeData.times}\n                      onChange={handleProductFields}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            Times\n                          </InputAdornment>\n                        ),\n                      }}\n                      helperText=\"How many time we can apply this coupon?\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the coupon type.\"\n                      name=\"coupon_type\"\n                      label=\"Select coupon...\"\n                      value={changeData.coupon_type || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {coupon_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    {changeData.coupon_type === \"FLAT\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        name=\"flat_amount\"\n                        label=\"Flat Amount\"\n                        value={changeData.flat_amount}\n                        onChange={handleProductFields}\n                        type=\"number\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">₹</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter amount for discount.\"\n                      />\n                    )}\n\n                    {changeData.coupon_type === \"OFF(%)\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        type=\"number\"\n                        name=\"off\"\n                        value={changeData.off < 100 ? changeData.off : 0}\n                        onChange={handleProductFields}\n                        inputProps={{ style: { textTransform: \"uppercase\" } }}\n                        label=\"OFF %\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">%</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter % amount for discount.\"\n                      />\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"valid_from\"\n                      value={changeData.valid_from}\n                      onChange={handleProductFields}\n                      label=\"Valid From\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n                    <TextField\n                      sx={{ mt: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"expiry\"\n                      value={changeData.expiry}\n                      onChange={handleProductFields}\n                      label=\"Expiry Date\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Coupon Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"coupon_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.coupon_description}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon description.\"\n                    />\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update coupon\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update coupon */}\n          </Box>\n        </Backdrop>\n      </Slide>\n    </>\n  );\n};\n\n// for label the ratting\n\nexport default SideForm;\n\n// outter components ++++++++++++++++++++==================================\n// banner dimension for web 1920*1080\nfunction WebBannerDimension(images, setWebBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    console.log(width, height);\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 1920 && height === 1080 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setWebBanner([...res]));\n}\n\nfunction WebBannerPreviews({ text, webBanner, setWebBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      WebBannerDimension(acceptedFiles, setWebBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (webBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        webBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        webBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [webBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => webBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n// banner dimension for mobile 800*200\nfunction MobileBannerDimension(images, setMobileBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    // console.log(width,height)\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 800 && height === 200 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setMobileBanner([...res]));\n}\n\nfunction MobileBannerPreviews({ text, mobileBanner, setMobileBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      MobileBannerDimension(acceptedFiles, setMobileBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (mobileBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        mobileBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        mobileBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [mobileBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () =>\n      mobileBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n\nfunction AddressForm({ setOpen, open, confirmBox, handleAddress, setOuter }) {\n  const [data, setData] = useState({\n    pincode: \"\",\n    city: \"\",\n    state: \"\",\n  });\n\n  const [catalog, setCatalogs] = useState({\n    city: [],\n    pincode: [],\n  });\n\n  useEffect(() => {\n    handelPincode();\n  }, [data.pincode]);\n\n  const handleValue = (e) => {\n    setData((old) => ({ ...old, [e.target.name]: e.target.value }));\n  };\n\n  async function handleSearch(e) {\n    console.log(e.target.value);\n    let res = await listPincode({\n      page: 1,\n      limit: 10,\n      total: 10,\n      pincode: e.target.value,\n    });\n    if (res.status === 200) {\n      setCatalogs((old) => ({ ...old, pincode: [...res.data.data] }));\n    }\n  }\n\n  async function handelPincode() {\n    if (data.pincode.toString().length === 6) {\n      let res = await getAddress(data.pincode);\n      if (res.status === 200) {\n        let pincode = res.data.results[data.pincode] || [];\n        setCatalogs((old) => ({ ...old, city: pincode }));\n        setData((old) => ({\n          ...old,\n          pincode: data.pincode,\n          state: pincode[0].state,\n        }));\n      }\n    } else {\n      setData((old) => ({ ...old, pincode: data.pincode }));\n    }\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={() => {\n        setOpen(false);\n      }}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>\n          <Typography sx={{ pb: 1 }} variant=\"h6\">\n            Address\n          </Typography>\n          <form\n            className=\"form\"\n            id=\"myForm\"\n            onSubmit={(e) => {\n              confirmBox(e, handleAddress);\n            }}\n            encType=\"multipart/form-data\"\n            method=\"post\"\n          >\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"customer_name\"\n              label=\"Name\"\n              type=\"text\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"mobile\"\n              label=\"Mobile\"\n              type=\"number\"\n            />\n            <Autocomplete\n              freeSolo\n              size=\"small\"\n              fullWidth\n              noOptionsText={\"ex : 305001\"}\n              autoHighlight\n              id=\"combo-box-demo\"\n              options={catalog.pincode.map((row) => {\n                return row.pincode;\n              })}\n              renderInput={(params) => (\n                <TextField\n                  onKeyUpCapture={handleSearch}\n                  type='number'\n                  value={data.pincode || \"\"}\n                  {...params}\n                  label=\"Pincode\"\n                />\n              )}\n              onChange={(e, val) => {\n                setOuter(old => ({ ...old, pincode: val }))\n                setData((old) => ({\n                  ...old,\n                  pincode: val,\n                }));\n              }\n              }\n            />\n\n            <TextField\n              fullWidth\n              id=\"outlined-select\"\n              required\n              select\n              size={\"small\"}\n              helperText=\"Please select the city.\"\n              name=\"city\"\n              label=\"Select city...\"\n              value={data.city || \"\"}\n              onChange={handleValue}\n              multiple\n            >\n              {catalog.city.map((option) => (\n                <MenuItem key={option.city} value={option.city}>\n                  {option.city}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"state\"\n              value={data.state || \"\"}\n              onChange={handleValue}\n              label=\"State\"\n              type=\"text\"\n            />\n\n            <FormLabel id=\"demo-radio-buttons-group-label\">Address</FormLabel>\n\n            <TextareaAutosize\n              fullWidth\n              minRows={5}\n              id=\"outlined-select\"\n              name=\"address\"\n              type=\"text\"\n              placeholder=\"Please enter your address\"\n            />\n\n            <FormLabel id=\"demo-radio-buttons-group-label\">\n              Address Type\n            </FormLabel>\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              id=\"outlined-select\"\n              select\n              name=\"type\"\n              displayEmpty\n              multiple\n              helperText=\"Please select your address type\"\n            >\n              <MenuItem key={\"home\"} value={\"home\"}>\n                Home\n              </MenuItem>\n              <MenuItem key={\"office\"} value={\"office\"}>\n                Office\n              </MenuItem>\n              <MenuItem key={\"none\"} value={\"none\"}>\n                None\n              </MenuItem>\n            </TextField>\n\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n              Add Address\n            </Button>\n          </form>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n\n// function for the filter the image to the basis of ratio 1:1\nfunction Dimension(images, setFiles) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    // console.log(width,height)\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === height ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) =>\n    setFiles((old) => {\n      return [...old, ...res];\n    })\n  );\n}\nfunction ProductsPreviews({ files, setFiles, text }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: true,\n    onDrop: (acceptedFiles) => {\n      Dimension(acceptedFiles, setFiles);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (files) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        files.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        files.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [files]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => files.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}"],"names":["option","labels","confirmable","cancellable","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","style","position","top","left","transform","bgcolor","boxShadow","p","useState","files","setFiles","webBanner","setWebBanner","mobileBanner","setMobileBanner","featured","setFeatured","React","hover","setHover","sequence","setSequence","imageLink","config","confirm","useConfirm","confirmBox","e","action","preventDefault","description","then","catch","err","console","log","Image","setImages","Indoor","setIndoor","open","setOpen","address","setAddress","billing","setBillingAddress","FeaturesPreviews","props","useDropzone","accept","multiple","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","src","alt","onLoad","revokeObjectURL","name","className","text","customer_type","ImagePreviews","IndoorPreviews","acceptedFileItems","setAcceptedFileItems","fileRejectionItems","setFileRejectionItems","Dimension","useMemo","validate","index","useEffect","forEach","polishCatalog","taxRateCatalog","value","label","backStyleCatalog","legCatalog","warehouse","weightCapCatalog","trollyMaterial","role","coupon_type","modules","assemblyLevelCatalog","unitCatalog","purpose","level","useSelector","state","form","mode","dispatch","useDispatch","cat","setCat","discount_limit","MRP","discount","setDiscount","activeStep","setActiveStep","SKU","setSKU","category","setCategory","subCategory","setSubCategory","materialCatalog","setMaterialCatalog","setSKUCatalog","setCustomerCatalog","P_SKU","H_SKU","supplier","productSKU","setProductSKU","hinge","knob","door","handle","fitting","polish","fabric","wheel","ceramic_drawer","ceramic_tiles","pincode","city","dial","catalog","setCatalog","editorRef","useRef","CVW","ACIN","primary_material","product_articles","hardware_articles","category_discount","range","product_array","variation_array","savedImages","specification_image","featured_image","mannequin_image","shipping","product_title","seo_title","seo_description","seo_keyword","product_des","sub_category","length","breadth","selling_points","priMater","priMater_weight","secMater","secMater_weight","selling_price","mrp","discount_cap","polish_time","manufacturing_time","wight_cap","wall_hanging","assembly_required","assembly_leg","assembly_part","silver","weight","selling_point","mirror","joints","tax_rate","seat_width","seat_depth","seat_height","wheel_included","trolly","returnable","returnDays","trolly_mater","top_size_length","top_size_breadth","dial_size","COD","textile","paid_amount","total_amount","customer_name","customer_email","shipping_address","searchCustomer","mobile_store","online_store","continue_selling","ceramic_drawer_included","ceramic_tiles_included","unit","quantity","textile_type","category_id","sub_category_id","product_description","legs","assembly_level","mattress","mattress_length","mattress_breadth","hinge_qty","knob_qty","handle_qty","door_qty","plywood","wheel_qty","cradle_bed","amazon_url","flipkart_url","jiomart_url","cradle_bed_depth","cradle_bed_height","cradle_bed_width","showroom_price","length_main","ceramic_drawer_qty","ceramic_tiles_qty","back_style","weight_capacity","drawer","package_breadth","package_height","package_length","silver_weight","mirror_length","mirror_width","drawer_count","seating_size_width","seating_size_depth","seating_size_height","restocking_time","min_quantity","hardware_polish","warehouse_to","wood_weight","metal_weight","package_weight","polish_name","polish_type","polish_finish","lock","price","indoorSavedImage","status","web_banner_status","mobile_banner_status","marketing","sequence_no","customer_mobile","GST","has_GST","classification","country","note","changeData","setData","getLabelText","getDID","getDraftID","res","data","parseInt","DID","split","setSequenceFunc","getSequence","formType","payload","order","keys","item","old","O","paid","total","order_status","getLastHardware","getPrimaryMaterial","categoryList","hardware","filter","row","category_name","_id","getSubCatagories","title","sub_category_name","hardware_image","bangalore_stock","jodhpur_stock","primary_material_name","getHardwareDropdown","getLastProduct","product_image","warehouse_name","hinge_name","knob_name","handle_name","door_name","fitting_name","fabric_qty","fabric_name","upholstery","trolley","trolley_material","rotating_seats","eatable_oil_polish","no_chemical","straight_back","lean_back","weaving","knife","not_suitable_for_Micro_Dish","tilt_top","inside_compartments","stackable","wheel_name","ceramic_tiles_name","ceramic_drawers_qty","ceramic_drawers","ceramic_drawers_included","ceramic_drawers_name","getLastOrder","OID","getPresentSKUs","customerCatalog","primaryMaterial_name","primaryMaterial_description","customizations","card_image","card_description","parent_SKU","variations","variant_label","CID","register_time","username","mobile","email","password","getLastMergeProduct","M","qty","product_id","stock","supplier_name","gst_no","alt_mobile","specialization","SID","getLastSupplier","outDoor_image","inDoor_image","formattedValue","rating","review","review_title","yourTube_url","uuid","web_banner","web_url","old_sequence_no","mobile_banner","mobile_url","banner_title","user_name","access","customer_ids","coupon_code","flat_amount","times","off","valid_from","expiry","coupon_description","handleNextStep","handleBackStep","handleDiscount","target","handleChangeData","feature","handleProductFields","includes","checked","handleChange","event","handleClose","resetAll","setForm","handleCategory","FD","FormData","append","category_status","addDraft","setAlert","variant","message","handleUpdateCategory","undefined","handleCustomer","JSON","stringify","handleUpdateCustomer","updateCustomer","setRow","set","profile_image","path","document","getElementById","reset","handleProduct","element","secondary_material_weight","dial_name","handleVariation","variation","id","response","handleUpdateProduct","handleMergeProduct","Product_SKU","addMergeProduct","handleUpdateMergeProduct","updateMergeProduct","updates","handlePrimaryMaterial","primaryMaterial_status","handleUpdatePrimaryMaterial","handleSupplier","addSupplier","handleUpdateSupplier","editSupplier","handleApplyDiscount","discount_array","applyDiscount","handleInward","Hardware_SKU","challan_no","vehicle_no","toUpperCase","driver_name","driver_no","addInward","inward_id","order_no","date","handleOutward","cred","trim","reason","addOutward","outward_id","handleTransfer","addTransfer","transfer_id","handleSubCategories","sub_category_status","handleUpdateSubCategories","catName","url","setUrl","handleUpload","uploadImage","handleAddBlog","current","getContent","handleUpdateBlog","handleUpdateOrder","handleHardware","handleUpdateHardware","multiOBJ","handlePolish","handleUpdatePolish","handleUpdateCoupon","handleCoupon","handleReview","reviewer_name","reviewer_email","handleUpdateReview","handleSupplierList","delayDebounceFn","setTimeout","getSupplierDropdown","Suppliers","clearTimeout","handleSearchStockSKU","getStockSKU","search","handleSearch","getArticlesId","handleSearchCategory","getCategoryList","handleBanner","handleUpdateBanner","handleUser","addUser","handleUpdateUser","updateUser","toString","getAddress","results","handlePincodeSearch","listPincode","page","limit","handelPincode","Slide","direction","in","mountOnEnter","unmountOnExit","Backdrop","sx","zIndex","theme","Box","type","IconButton","onClick","color","Cancel","Grid","container","xs","Typography","component","mt","onSubmit","encType","method","Stepper","orientation","Step","StepLabel","cursor","StepContent","Button","size","disabled","TextField","fullWidth","required","select","onChange","helperText","MenuItem","InputProps","startAdornment","InputAdornment","InputLabel","Select","renderValue","selected","join","Checkbox","indexOf","ListItemText","primary","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","mb","ProductsPreviews","spacing","temp","splice","ImageSquence","image","setImage","savedImage","justifyContent","alignItems","FormGroup","Slider","defaultValue","valueLabelDisplay","ml","alignItem","i","maxHeight","overflowY","listStyleType","TextareaAutosize","minRows","placeholder","pattern","Autocomplete","autoHighlight","noOptionsText","options","renderInput","params","onKeyUpCapture","newMember","gap","disablePortal","isOptionEqualToValue","isInclude","maxRows","Modal","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","apiKey","initialValue","onInit","editor","init","menubar","plugins","displayEmpty","AddressForm","setOuter","handleAddress","overflowWrap","borderStyle","mr","Add","key","pb","freeSolo","val","resize","restock","AWB","courier_company","return","return_reason","refund","refund_ammound","clearOnEscape","inputProps","textTransform","vriatn","Rating","precision","newValue","onChangeActive","newHover","emptyIcon","Star","opacity","fontSize","WebBannerPreviews","MobileBannerPreviews","error","getOptionLabel","images","result","Promise","all","WebBannerDimension","MobileBannerDimension","setCatalogs","handleValue"],"sourceRoot":""}