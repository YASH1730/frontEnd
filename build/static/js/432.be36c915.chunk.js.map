{"version":3,"file":"static/js/432.be36c915.chunk.js","mappings":"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AgCoG,UAQxC,IAAMQ,GAAgB,CACpB,eACA,oBACA,gBACA,aACA,iBACA,aACA,kBAGIC,GAAiB,CACrB,CACEC,MAAO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,GACPC,MAAO,IAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,GAET,CACED,MAAO,EACPC,MAAO,IAGLC,GAAmB,CACvB,CACEF,MAAO,YACPC,MAAO,aAET,CACED,MAAO,gBACPC,MAAO,kBAILE,GAAa,CACjB,CACEH,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,iBACPC,MAAO,mBAGLG,GAAY,CAChB,CACEJ,MAAO,wBACPC,MAAO,yBAET,CACED,MAAO,sBACPC,MAAO,wBAILI,GAAmB,CACvB,CACEL,MAAO,QACPC,MAAO,SAET,CACED,MAAO,eACPC,MAAO,gBAET,CACED,MAAO,QACPC,MAAO,UAILK,GAAiB,CACrB,CACEN,MAAO,YACPC,MAAO,aAET,CACED,MAAO,qBACPC,MAAO,sBAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,gBACPC,MAAO,iBAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,kBACPC,MAAO,mBAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,aACPC,MAAO,eAGLM,GAAO,CACX,CACEP,MAAO,YACPC,MAAO,aAGT,CACED,MAAO,QACPC,MAAO,SAGT,CACED,MAAO,0BACPC,MAAO,2BAGT,CACED,MAAO,QACPC,MAAO,SAGT,CACED,MAAO,cACPC,MAAO,gBA8BLO,GAAc,CAAC,OAAQ,UAEvBC,GAAU,CACd,QACA,UACA,WACA,WACA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","sources":["components/dashboard/form/SideForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport {\n  Button,\n  IconButton,\n  MenuItem,\n  Grid,\n  Box,\n  Typography,\n  TextField,\n  Modal,\n  InputAdornment,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Checkbox,\n  FormGroup,\n  Fade,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Slider,\n  Select,\n  TextareaAutosize,\n  ListItemText,\n  InputLabel,\n  Autocomplete,\n  Rating,\n} from \"@mui/material\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport Slide from \"@mui/material/Slide\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport \"../../../assets/custom/css/sideForm.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\n// component\nimport ImageSquence from \"../../Utility/ImageSquence\";\n// service APIS\nimport {\n  getLastProduct,\n  categoryList,\n  getSubCatagories,\n  // addPrimaryMaterial,\n  // editPrimaryMaterial,\n  getPrimaryMaterial,\n  addSupplier,\n  editSupplier,\n  createBlog,\n  updateBlog,\n  getLastHardware,\n  addMergeProduct,\n  updateMergeProduct,\n  getLastMergeProduct,\n  getPresentSKUs,\n  addCustomer,\n  updateCustomer,\n  addOrder,\n  getLastOrder,\n  customerCatalog,\n  variation,\n  getHardwareDropdown,\n  getDraftID,\n  addDraft,\n  getArticlesId,\n  getLastSupplier,\n  getSupplierDropdown,\n  addInward,\n  addOutward,\n  uploadImage,\n  addTransfer,\n  getStockSKU,\n  // addPolish,\n  // editPolish,\n  updateReview,\n  getCategoryList,\n  applyDiscount,\n  addReview,\n  getSequence,\n  getAddress,\n  listPincode,\n  addUser,\n  updateUser,\n} from \"../../../services/service.js\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport { setAlert, setForm } from \"../../../store/action/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport StarIcon from \"@mui/icons-material/Star\";\nimport size from \"react-image-size\";\nimport { fromUnixTime } from \"date-fns/esm\";\n\nimport config from \"../../../config.json\";\n\nconst option = {\n  labels: {\n    confirmable: \"Proceed\",\n    cancellable: \"Cancel\",\n  },\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 50,\n  height: 50,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 3,\n};\n\nconst SideForm = () => {\n  // multiple images\n  const [files, setFiles] = useState([]);\n  const [webBanner, setWebBanner] = useState([]);\n  const [mobileBanner, setMobileBanner] = useState([]);\n  const [featured, setFeatured] = useState([]);\n  const [hover, setHover] = React.useState(-1); // for rating in review\n\n  const [sequence, setSequence] = useState([]);\n  // image link\n  const imageLink = `${config.Official_API_Image}/upload/`;\n\n  const confirm = useConfirm();\n\n  // confirmBox\n  const confirmBox = (e, action) => {\n    e.preventDefault();\n\n    confirm({ description: `Data will listed in Database !!!` }, option)\n      .then(() => action(e))\n      .catch((err) => {\n        console.log(\"Operation cancelled because. \", err);\n      });\n  };\n\n  // single images\n  const [Image, setImages] = useState([]);\n  const [Indoor, setIndoor] = useState([]);\n\n  // modal state\n  const [open, setOpen] = useState(false);\n\n  // address object\n  const [address, setAddress] = useState([]);\n\n  function FeaturesPreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setFeatured(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = featured.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n\n  const labels = {\n    0.5: \"Useless\",\n    1: \"Useless+\",\n    1.5: \"Poor\",\n    2: \"Poor+\",\n    2.5: \"Ok\",\n    3: \"Ok+\",\n    3.5: \"Good\",\n    4: \"Good+\",\n    4.5: \"Excellent\",\n    5: \"Excellent+\",\n  };\n\n  const customer_type = [\"Interior\", \"Architect\", \"VIP\", \"VVIP\"];\n\n  // function for the filter the image to the basis of ratio 1:1\n  function Dimension(images, setFiles) {\n    let result = images.map(async (image) => {\n      let { width, height } = await size(URL.createObjectURL(image));\n      // console.log(width,height)\n      Object.assign(image, {\n        preview: URL.createObjectURL(image),\n        validate: width === height ? true : false,\n      });\n      return image;\n    });\n    Promise.all(result).then((res) =>\n      setFiles((old) => {\n        return [...old, ...res];\n      })\n    );\n  }\n  function ProductsPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setFiles);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (files) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          files.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          files.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [files]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => files.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n  function ImagePreviews(props) {\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: false,\n      onDrop: (acceptedFiles) => {\n        setImages(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n      },\n    });\n\n    const thumbs = Image.map((file) => (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <img\n            src={file.preview}\n            style={img}\n            alt=\"Images\"\n            // Revoke data uri after image is loaded\n            onLoad={() => {\n              URL.revokeObjectURL(file.preview);\n            }}\n          />\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside style={thumbsContainer}>{thumbs}</aside>\n      </section>\n    );\n  }\n  function IndoorPreviews(props) {\n    const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n    const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n    const { getRootProps, getInputProps } = useDropzone({\n      accept: \"image/*\",\n      multiple: true,\n      onDrop: (acceptedFiles) => {\n        Dimension(acceptedFiles, setIndoor);\n      },\n    });\n\n    // for check the file state in done or\n    useMemo(() => {\n      if (Indoor) {\n        // REJECTED FILES\n        setFileRejectionItems(\n          Indoor.map((file) => {\n            return !file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n\n        // accepted\n        setAcceptedFileItems(\n          Indoor.map((file, index) => {\n            return file.validate ? (\n              <div style={thumb} key={file.name}>\n                <div style={thumbInner}>\n                  {/* {console.log(file.validate)} */}\n\n                  <img\n                    src={URL.createObjectURL(file)}\n                    style={img}\n                    alt=\"Images\"\n                    // Revoke data uri after image is loaded\n                    onLoad={() => {\n                      URL.revokeObjectURL(file.preview);\n                    }}\n                  />\n                </div>\n              </div>\n            ) : null;\n          })\n        );\n      }\n    }, [Indoor]);\n\n    useEffect(() => {\n      // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n      return () => Indoor.forEach((file) => URL.revokeObjectURL(file.preview));\n    }, []);\n\n    return (\n      <section className=\"container dorpContainer\">\n        <div {...getRootProps({ className: \"dropzone\" })}>\n          <input {...getInputProps()} />\n          <p>{props.text}</p>\n        </div>\n        <aside>\n          <h4>Accepted files</h4>\n          <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n          <h4>Rejected files</h4>\n          <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n        </aside>\n      </section>\n    );\n  }\n\n  // static catalog\n\n  const polishCatalog = [\n    \"Stain Finish\",\n    \"Distressed Polish\",\n    \"Antique Touch\",\n    \"Duco Paint\",\n    \"Natural Finish\",\n    \"Oil Massge\",\n    \"Powder Coating\",\n  ];\n\n  const taxRateCatalog = [\n    {\n      value: 28,\n      label: 28,\n    },\n    {\n      value: 18,\n      label: 18,\n    },\n    {\n      value: 12,\n      label: 12,\n    },\n    {\n      value: 5,\n      label: 5,\n    },\n    {\n      value: 3,\n      label: 3,\n    },\n    {\n      value: 2,\n      label: 2,\n    },\n    {\n      value: 0,\n      label: 0,\n    },\n  ];\n  const backStyleCatalog = [\n    {\n      value: \"Lean Back\",\n      label: \"Lean Back\",\n    },\n    {\n      value: \"Straight Back\",\n      label: \"Straight Back\",\n    },\n  ];\n\n  const legCatalog = [\n    {\n      value: \"Folding Legs\",\n      label: \"Folding Legs\",\n    },\n    {\n      value: \"Knockdown Legs\",\n      label: \"Knockdown Legs\",\n    },\n  ];\n  const warehouse = [\n    {\n      value: \"Bangalore (Karnataka)\",\n      label: \"Bangalore (Karnataka)\",\n    },\n    {\n      value: \"Jodhpur (Rajasthan)\",\n      label: \"Jodhpur (Rajasthan)\",\n    },\n  ];\n\n  const weightCapCatalog = [\n    {\n      value: \"Child\",\n      label: \"Child\",\n    },\n    {\n      value: \"Light Weight\",\n      label: \"Light Weight\",\n    },\n    {\n      value: \"Adult\",\n      label: \"Adult\",\n    },\n  ];\n\n  const trollyMaterial = [\n    {\n      value: \"Teak Wood\",\n      label: \"Teak Wood\",\n    },\n    {\n      value: \"Natural Solid Wood\",\n      label: \"Natural Solid Wood\",\n    },\n    {\n      value: \"Stone\",\n      label: \"Stone\",\n    },\n    {\n      value: \"Metal\",\n      label: \"Metal\",\n    },\n    {\n      value: \"Brass\",\n      label: \"Brass\",\n    },\n    {\n      value: \"Copper\",\n      label: \"Copper\",\n    },\n    {\n      value: \"Glass\",\n      label: \"Glass\",\n    },\n    {\n      value: \"Mango Wood\",\n      label: \"Mango Wood\",\n    },\n    {\n      value: \"Pine wood\",\n      label: \"Pine wood\",\n    },\n    {\n      value: \"Acacia wood\",\n      label: \"Acacia wood\",\n    },\n    {\n      value: \"Sheesham wood\",\n      label: \"Sheesham wood\",\n    },\n    {\n      value: \"Ceramic\",\n      label: \"Ceramic\",\n    },\n    {\n      value: \"Brass Coated SS\",\n      label: \"Brass Coated SS\",\n    },\n    {\n      value: \"Iron Jali\",\n      label: \"Iron Jali\",\n    },\n    {\n      value: \"Glass Jali\",\n      label: \"Glass Jali\",\n    },\n  ];\n  const role = [\n    {\n      value: \"Marketing\",\n      label: \"Marketing\",\n    },\n\n    {\n      value: \"Sales\",\n      label: \"Sales\",\n    },\n\n    {\n      value: \"Management & Accountant\",\n      label: \"Management & Accountant\",\n    },\n\n    {\n      value: \"Admin\",\n      label: \"Admin\",\n    },\n\n    {\n      value: \"Super Admin\",\n      label: \"Super Admin\",\n    },\n  ];\n  const rangeCatalog = [\n    {\n      value: \"Traditional\",\n      label: \"Traditional\",\n    },\n\n    {\n      value: \"Distressed\",\n      label: \"Distressed\",\n    },\n\n    {\n      value: \"Crackle\",\n      label: \"Crackle\",\n    },\n\n    {\n      value: \"Painting\",\n      label: \"Painting\",\n    },\n\n    {\n      value: \"Antique\",\n      label: \"Antique\",\n    },\n  ];\n\n  const coupon_type = [\"FLAT\", \"OFF(%)\"];\n\n  const modules = [\n    \"Order\",\n    \"Product\",\n    \"Settings\",\n    \"Wishlist\",\n    \"Customer\",\n    \"Reward\",\n    \"Blog\",\n    \"Action Center\",\n    \"Inventory\",\n    \"Profile\",\n    \"Banner\",\n    \"Hardware\",\n    \"Review\",\n  ];\n\n  const assemblyLevelCatalog = [\n    {\n      value: \"Easy Assembly\",\n      label: \"Easy Assembly\",\n    },\n    {\n      value: \"Carpenter Assembly\",\n      label: \"Carpenter Assembly\",\n    },\n  ];\n\n  const unitCatalog = [\n    {\n      value: \"Pcs\",\n      label: \"Pcs\",\n    },\n    {\n      value: \"Kg\",\n      label: \"Kg\",\n    },\n    {\n      value: \"Ft\",\n      label: \"Ft\",\n    },\n    {\n      value: \"Set\",\n      label: \"Set\",\n    },\n    {\n      value: \"Metre\",\n      label: \"Metre\",\n    },\n  ];\n\n  const purpose = [\n    \"Manufacturing\",\n    \"Repairing\",\n    \"Polish\",\n    \"Packing\",\n    \"Shipping\",\n    \"Others\",\n  ];\n  const level = [\n    \"Level 1\",\n    \"Level 2\",\n    \"Level 3\",\n    \"Level 4\",\n    \"Level 5\",\n    \"Level 6\",\n    \"Level 7\",\n    \"Level 8\",\n    \"Level 9\",\n    \"Level 10\",\n  ];\n\n  // redux\n  const { form, mode } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  // states\n  const [cat, setCat] = useState(\"\");\n  const [discount, setDiscount] = useState({ discount_limit: 0, MRP: 0 });\n  // const [showFabric, setShowFabric] = useState(\"No\");\n\n  //  State for stepper\n  const [activeStep, setActiveStep] = useState(0);\n\n  // states for the dynamic rendering\n  const [SKU, setSKU] = useState(\"\");\n  const [category, setCategory] = useState([]);\n  const [subCategory, setSubCategory] = useState([]);\n  const [materialCatalog, setMaterialCatalog] = useState([]);\n  // const [textileCatalog, setTextileCatalog] = useState([]);\n  // const [fabricCatalog, setFabricCatalog] = useState([]);\n  const [SKUCatalog, setSKUCatalog] = useState([]);\n  const [customer, setCustomerCatalog] = useState([]);\n  const [productSKU, setProductSKU] = useState({\n    P_SKU: [],\n    H_SKU: [],\n    supplier: [],\n    category: [],\n  });\n\n  const [catalog, setCatalog] = useState({\n    hinge: [],\n    knob: [],\n    door: [],\n    handle: [],\n    fitting: [],\n    polish: [],\n    fabric: [],\n    wheel: [],\n    ceramic_drawer: [],\n    ceramic_tiles: [],\n    pincode: [],\n    city: [],\n  });\n\n  // ref\n  const editorRef = useRef();\n\n  // pres data\n  const [changeData, setData] = useState({\n    CVW: 0,\n    dial: false,\n    ACIN: \"\",\n    primary_material: [],\n    product_articles: [],\n    hardware_articles: [],\n    category_discount: [],\n    supplier: \"\",\n    range: \"None\",\n    product_array: [],\n    variation_array: [],\n    warehouse: [],\n    savedImages: [],\n    specification_image: \"\",\n    featured_image: \"\",\n    mannequin_image: \"\",\n    shipping: \"\",\n    product_title: \"\",\n    seo_title: \"\",\n    seo_description: \"\",\n    seo_keyword: \"\",\n    product_des: \"\",\n    category: \"\",\n    sub_category: \"\",\n    length: 0,\n    breadth: 0,\n    selling_points: [],\n    height: 0,\n    priMater: \"\",\n    priMater_weight: \"\",\n    secMater: \"\",\n    secMater_weight: \"\",\n    selling_price: 0,\n    mrp: 0,\n    discount_cap: 0,\n    polish_time: 0,\n    manufacturing_time: 0,\n    polish: [],\n    wight_cap: \"\",\n    wall_hanging: \"\",\n    assembly_required: \"\",\n    assembly_leg: \"\",\n    assembly_part: 2,\n    fitting: \"None\",\n    silver: \"\",\n    weight: 0,\n    selling_point: \"\",\n    mirror: \"\",\n    joints: \"\",\n    tax_rate: 18,\n    seat_width: 0,\n    ceramic_drawer: \"None\",\n    ceramic_tiles: \"None\",\n    seat_depth: 0,\n    seat_height: 0,\n    wheel: \"None\",\n    wheel_included: \"no\",\n    trolly: \"\",\n    returnable: false,\n    returnDays: 0,\n    trolly_mater: \"\",\n    top_size_length: 0,\n    top_size_breadth: 0,\n    dial_size: 0,\n    COD: false,\n    textile: \"\",\n    paid_amount: 0,\n    total_amount: 0,\n    customer_name: \"\",\n    customer_email: \"\",\n    shipping_address: \"\",\n    searchCustomer: \"\",\n    mobile_store: true,\n    online_store: true,\n    continue_selling: true,\n    ceramic_drawer_included: false,\n    ceramic_tiles_included: false,\n    unit: \"Pcs\",\n    quantity: 1,\n    textile_type: \"\",\n    category_id: \"\",\n    sub_category_id: \"\",\n    product_description: \"\",\n    legs: \"None\",\n    fabric: \"None\",\n    assembly_level: \"Easy Assembly\",\n    mattress: \"no\",\n    mattress_length: 0,\n    mattress_breadth: 0,\n    hinge: \"None\",\n    hinge_qty: 0,\n    knob: \"None\",\n    knob_qty: 0,\n    handle: \"None\",\n    handle_qty: 0,\n    door: \"None\",\n    door_qty: 0,\n    plywood: \"no\",\n    wheel_qty: 0,\n    cradle_bed: \"no\",\n    amazon_url: \"\",\n    flipkart_url: \"\",\n    jiomart_url: \"\",\n    cradle_bed_depth: 0,\n    cradle_bed_height: 0,\n    cradle_bed_width: 0,\n    showroom_price: 0,\n    discount_limit: 0,\n    length_main: 0,\n    ceramic_drawer_qty: 0,\n    ceramic_tiles_qty: 0,\n    back_style: \"None\",\n    weight_capacity: \"None\",\n    drawer: \"None\",\n    package_breadth: 0,\n    package_height: 0,\n    package_length: 0,\n    silver_weight: 0,\n    mirror_length: 0,\n    mirror_width: 0,\n    drawer_count: 0,\n    seating_size_width: 0,\n    seating_size_depth: 0,\n    seating_size_height: 0,\n    restocking_time: 0,\n    min_quantity: 1,\n    hardware_polish: \"None\",\n    warehouse_to: \"\",\n    wood_weight: 0,\n    metal_weight: 0,\n    package_weight: 0,\n    polish_name: \"\",\n    polish_type: \"None\",\n    polish_finish: \"None\",\n    level: \"None\",\n    lock: false,\n    price: 0,\n    indoorSavedImage: [],\n    status: true,\n    web_banner_status: false,\n    mobile_banner_status: false,\n    marketing: false,\n    sequence_no: \"\",\n    customer_mobile: \"\",\n    city: \"\",\n    state: \"\",\n    GST: \"no\",\n    has_GST: \"\",\n    billing: \"\",\n    classification: \"\",\n    customer_type: \"\",\n    country: \"\",\n    pincode: \"\",\n    note: \"\",\n  });\n\n  function getLabelText(value) {\n    return `${value} Star${value !== 1 ? \"s\" : \"\"}, ${labels[value]}`;\n  }\n\n  // function for generating Merged product  ID\n\n  const getMKU = () => {\n    getLastMergeProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].M.split(\"-\")[1]) + 1;\n\n          setSKU(`M-0${index}`);\n        } else {\n          setSKU(\"M-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product SKU ID\n\n  const getSKU = () => {\n    getLastProduct()\n      .then((res) => {\n        if (res.data.length > 0) {\n          // // //console.log(res.data[0].SKU)\n\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`P-0${index}`);\n        } else {\n          setSKU(\"P-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating hardware  ID\n\n  const getHKU = () => {\n    getLastHardware()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SKU.split(\"-\")[1]) + 1;\n\n          setSKU(`H-0${index}`);\n        } else {\n          setSKU(\"H-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product OID ID\n\n  const getOID = () => {\n    getLastOrder()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].OID.split(\"-\")[1]) + 1;\n\n          setSKU(`OID-0${index}`);\n        } else {\n          setSKU(\"OID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getSID = () => {\n    getLastSupplier()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].SID.split(\"-\")[1]) + 1;\n\n          setSKU(`SID-0${index}`);\n        } else {\n          setSKU(\"SID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n  // function for generating product DID ID\n\n  const getDID = () => {\n    getDraftID()\n      .then((res) => {\n        if (res.data.length > 0) {\n          let index = parseInt(res.data[0].DID.split(\"-\")[1]) + 1;\n\n          setSKU(`DID-0${index}`);\n        } else {\n          setSKU(\"DID-01001\");\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n      });\n  };\n\n  useMemo(() => {\n    switch (form.formType) {\n      case \"edit_order\":\n        getDID();\n\n        console.log(form.payload);\n\n        let quantity = form.payload.order.quantity || {};\n\n        // for product qty\n        Object.keys(quantity).length > 0 &&\n          Object.keys(quantity).map((item) => {\n            setData((old) => ({\n              ...old,\n              [item]: quantity[item] || 1,\n            }));\n          });\n\n        setData((old) => ({\n          ...old,\n          customer_name: form.payload.order.customer_name,\n          customer_email: form.payload.order.customer_email,\n          customer_mobile: form.payload.order.customer_mobile,\n          city: form.payload.order.city,\n          state: form.payload.order.state,\n          shipping: form.payload.order.shipping,\n          GST: form.payload.order.GST,\n          has_GST: form.payload.order.has_GST,\n          billing: form.payload.order.billing,\n          classification: form.payload.order.classification,\n          customer_type: form.payload.order.customer_type,\n          country: form.payload.order.country || \"India\",\n          quantity: Object.keys(quantity) || [],\n          pincode: form.payload.order.pincode,\n          note: form.payload.order.note,\n        }));\n\n        break;\n      case \"hardware\":\n        getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          let hardware = data.data.filter((row) => {\n            return row.category_name === \"Hardware\";\n          });\n\n          setData({\n            ...changeData,\n            category_name: hardware.length > 0 ? hardware[0]._id : \"None\",\n          });\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        // console.log(category,category.filter((row) => { return row.category_name === 'Hardware' }))\n\n        break;\n      case \"update_hardware\":\n        // getHKU();\n        getDID();\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        const row = form.payload.row;\n\n        console.log(row);\n\n        setData({\n          SKU: row.SKU,\n          title: row.title,\n          category_name: row.category_id,\n          category_id: row.category_id,\n          sub_category_name: row.sub_category_id,\n          sub_category_id: row.sub_category_id,\n          hardware_image: row.hardware_image,\n          savedImages: row.hardware_image,\n          featured_image: row.featured_image,\n          mannequin_image: row.mannequin_image,\n          warehouse: row.warehouse || [],\n          bangalore_stock: row.bangalore_stock,\n          discount_limit: row.discount_limit,\n          jodhpur_stock: row.jodhpur_stock,\n          manufacturing_time: row.manufacturing_time,\n          online_store: row.online_store,\n          mobile_store: row.mobile_store,\n          primary_material: row.primary_material,\n          primary_material_name: row.primary_material_name,\n          status: row.status,\n          returnDays: row.returnDays,\n          COD: row.COD,\n          returnable: row.returnable,\n          quantity: row.quantity,\n          package_length: row.package_length,\n          package_height: row.package_height,\n          package_breadth: row.package_breadth,\n          unit: row.unit,\n          selling_price: row.selling_price,\n          showroom_price: row.showroom_price,\n          polish_time: row.polish_time,\n          restocking_time: row.restocking_time,\n          selling_points: row.selling_points || [],\n          seo_title: row.seo_title,\n          seo_description: row.seo_description,\n          seo_keyword: row.seo_keyword,\n          hardware_polish: row.hardware_polish,\n          min_quantity: row.min_quantity,\n          continue_selling: row.continue_selling,\n          tax_rate: row.tax_rate,\n          weight: row.weight,\n          package_weight: row.package_weight,\n        });\n        break;\n      case \"product\":\n        // getSKU();\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        console.log(form);\n\n        if (form.payload) {\n          setData((old) => ({ ...old, ...form.payload }));\n        }\n\n        break;\n      case \"variation\":\n        getSKU();\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          ACIN: form.payload.row.action.ACIN,\n          CVW: form.payload.row.action.CVW,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          dial: form.payload.row.action.dial,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n        break;\n      case \"add_order\":\n        getOID();\n        getPresentSKUs().then((data) => {\n          if (data.data === null) return setSKUCatalog([]);\n\n          return setSKUCatalog(data.data);\n        });\n\n        customerCatalog().then((data) => {\n          //console.log(data);\n          if (data.data === null) return setCustomerCatalog([]);\n\n          return setCustomerCatalog(data.data);\n        });\n\n        break;\n      case \"category\":\n        getDID();\n        break;\n      case \"update_category\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n        setData({\n          _id: form.payload.row.action,\n          category: form.payload.row.category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        getDID();\n        console.log(form.payload.row);\n        setData({\n          primaryMaterial_name: form.payload.row.primaryMaterial_name,\n          primaryMaterial_description:\n            form.payload.row.primaryMaterial_description,\n          customizations: form.payload.row.customizations,\n        });\n        break;\n      case \"subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        // setCat(form.payload.row.category_id);\n        break;\n      case \"update_Subcategory\":\n        getDID();\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n        setCat(form.payload.row.category_id);\n        setData({\n          _id: form.payload.row.action,\n          sub_category_name: form.payload.row.sub_category_name,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n          product_description: form.payload.row.product_description,\n        });\n        break;\n      case \"update_blog\":\n        getDID();\n        setData({\n          title: form.payload.value.title,\n          card_image: form.payload.value.card_image,\n          seo_title: form.payload.value.seo_title,\n          seo_description: form.payload.value.seo_description,\n          card_description: form.payload.value.card_description,\n          description: form.payload.value.description,\n        });\n        break;\n      case \"update_product\":\n        getDID();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          _id: form.payload.value._id || form.payload.row.action._id,\n          SKU: form.payload.row.action.SKU,\n          CVW: form.payload.row.action.CVW,\n          parent_SKU: form.payload.row.parent_SKU,\n          variations: form.payload.row.variations,\n          variant_label: form.payload.row.variant_label,\n          product_title: form.payload.row.action.product_title,\n          category_name: form.payload.row.action.category_id,\n          category_id: form.payload.row.action.category_id,\n          sub_category_name: form.payload.row.action.sub_category_id,\n          sub_category_id: form.payload.row.action.sub_category_id,\n          product_description: form.payload.row.action.product_description,\n          seo_title: form.payload.row.action.seo_title,\n          seo_description: form.payload.row.action.seo_description,\n          seo_keyword: form.payload.row.action.seo_keyword,\n          product_image: form.payload.row.action.product_image,\n          savedImages: form.payload.row.action.product_image,\n          featured_image: form.payload.row.action.featured_image,\n          mannequin_image: form.payload.row.action.mannequin_image,\n          specification_image: form.payload.row.action.specification_image,\n          primary_material: form.payload.row.action.primary_material,\n          dial: form.payload.row.action.dial,\n          primary_material_name: form.payload.row.action.primary_material_name,\n          warehouse: form.payload.row.action.warehouse,\n          warehouse_name: form.payload.row.action.warehouse_name,\n          length_main: form.payload.row.action.length_main,\n          breadth: form.payload.row.action.breadth,\n          height: form.payload.row.action.height,\n          bangalore_stock: form.payload.row.action.bangalore_stock,\n          jodhpur_stock: form.payload.row.action.jodhpur_stock,\n          weight: form.payload.row.action.weight,\n          polish: form.payload.row.action.polish,\n          polish_name: form.payload.row.action.polish_name,\n          hinge: form.payload.row.action.hinge,\n          hinge_qty: form.payload.row.action.hinge_qty,\n          hinge_name: form.payload.row.action.hinge_name,\n          knob: form.payload.row.action.knob,\n          knob_qty: form.payload.row.action.knob_qty,\n          knob_name: form.payload.row.action.knob_name,\n          handle: form.payload.row.action.handle,\n          handle_qty: form.payload.row.action.handle_qty,\n          handle_name: form.payload.row.action.handle_name,\n          door: form.payload.row.action.door,\n          door_qty: form.payload.row.action.door_qty,\n          door_name: form.payload.row.action.door_name,\n          fitting: form.payload.row.action.fitting,\n          fitting_name: form.payload.row.action.fitting_name,\n          selling_points: form.payload.row.action.selling_points,\n          dial_size: form.payload.row.action.dial_size,\n          seating_size_width: form.payload.row.action.seating_size_width,\n          seating_size_depth: form.payload.row.action.seating_size_depth,\n          seating_size_height: form.payload.row.action.seating_size_height,\n          weight_capacity: form.payload.row.action.weight_capacity,\n          fabric: form.payload.row.action.fabric,\n          fabric_qty: form.payload.row.action.fabric_qty,\n          fabric_name: form.payload.row.action.fabric_name,\n          wall_hanging: form.payload.row.action.wall_hanging,\n          assembly_required: form.payload.row.action.assembly_required,\n          assembly_part: form.payload.row.action.assembly_part,\n          legs: form.payload.row.action.legs,\n          mirror: form.payload.row.action.mirror,\n          mirror_length: form.payload.row.action.mirror_length,\n          mirror_width: form.payload.row.action.mirror_width,\n          silver: form.payload.row.action.silver,\n          silver_weight: form.payload.row.action.silver_weight,\n          joints: form.payload.row.action.joints,\n          upholstery: form.payload.row.action.upholstery,\n          trolley: form.payload.row.action.trolley,\n          trolley_material: form.payload.row.action.trolley_material,\n          rotating_seats: form.payload.row.action.rotating_seats,\n          eatable_oil_polish: form.payload.row.action.eatable_oil_polish,\n          no_chemical: form.payload.row.action.no_chemical,\n          straight_back: form.payload.row.action.straight_back,\n          lean_back: form.payload.row.action.lean_back,\n          weaving: form.payload.row.action.weaving,\n          knife: form.payload.row.action.knife,\n          not_suitable_for_Micro_Dish:\n            form.payload.row.action.not_suitable_for_Micro_Dish,\n          tilt_top: form.payload.row.action.tilt_top,\n          inside_compartments: form.payload.row.action.inside_compartments,\n          stackable: form.payload.row.action.stackable,\n          MRP: form.payload.row.action.MRP,\n          tax_rate: form.payload.row.action.tax_rate,\n          selling_price: form.payload.row.action.selling_price,\n          showroom_price: form.payload.row.action.showroom_price,\n          discount_limit: form.payload.row.action.discount_limit,\n          polish_time: form.payload.row.action.polish_time,\n          manufacturing_time: form.payload.row.action.manufacturing_time,\n          status: form.payload.row.action.status,\n          returnDays: form.payload.row.action.returnDays,\n          COD: form.payload.row.action.COD,\n          returnable: form.payload.row.action.returnable,\n          drawer: form.payload.row.action.drawer,\n          drawer_count: form.payload.row.action.drawer_count,\n          mobile_store: form.payload.row.action.mobile_store,\n          online_store: form.payload.row.action.online_store,\n          range: form.payload.row.action.range,\n          back_style: form.payload.row.action.back_style,\n          package_length: form.payload.row.action.package_length,\n          package_height: form.payload.row.action.package_height,\n          package_breadth: form.payload.row.action.package_breadth,\n          quantity: form.payload.row.action.quantity,\n          unit: form.payload.row.action.unit,\n          variation_array: form.payload.row.action.variation_array,\n          assembly_level: form.payload.row.action.assembly_level,\n          continue_selling: form.payload.row.action.continue_selling,\n          wheel: form.payload.row.action.wheel,\n          wheel_included: form.payload.row.action.wheel_included,\n          wheel_qty: form.payload.row.action.wheel_qty,\n          wheel_name: form.payload.row.action.wheel_name,\n          ceramic_tiles: form.payload.row.action.ceramic_tiles,\n          ceramic_tiles_qty: form.payload.row.action.ceramic_tiles_qty,\n          ceramic_tiles_included:\n            form.payload.row.action.ceramic_tiles_included,\n          ceramic_tiles_name: form.payload.row.action.ceramic_tiles_name,\n          ceramic_drawers_qty: form.payload.row.action.ceramic_drawers_qty,\n          ceramic_drawers: form.payload.row.action.ceramic_drawers,\n          ceramic_drawers_included:\n            form.payload.row.action.ceramic_drawers_included,\n          ceramic_drawers_name: form.payload.row.action.ceramic_drawers_name,\n          mattress: form.payload.row.action.mattress,\n          mattress_length: form.payload.row.action.mattress_length,\n          mattress_breadth: form.payload.row.action.mattress_breadth,\n          plywood: form.payload.row.action.plywood,\n          top_size_breadth: form.payload.row.action.top_size_breadth,\n          top_size_length: form.payload.row.action.top_size_length,\n          amazon_url: form.payload.row.action.amazon_url,\n          flipkart_url: form.payload.row.action.flipkart_url,\n          jiomart_url: form.payload.row.action.jiomart_url,\n          wood_weight: form.payload.row.action.wood_weight,\n          package_weight: form.payload.row.action.package_weight,\n          metal_weight: form.payload.row.action.metal_weight,\n        });\n\n        setCat(form.payload.row.action.category_id);\n\n        break;\n      case \"update_customer\":\n        //console.log(form.payload);\n        setData({\n          CID: form.payload.row.CID,\n          register_time: form.payload.row.register_time,\n          username: form.payload.row.username,\n          mobile: form.payload.row.mobile,\n          email: form.payload.row.email,\n          password: form.payload.row.password,\n          city: form.payload.row.city,\n          state: form.payload.row.state,\n          shipping: form.payload.row.shipping,\n        });\n        break;\n      case \"merge_product\":\n        getMKU();\n\n        getHardwareDropdown().then((data) => {\n          if (data.data !== null)\n            return setCatalog((old) => ({ ...old, ...data.data }));\n        });\n\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n\n          return setSubCategory(data.data);\n        });\n\n        getPrimaryMaterial().then((data) => {\n          if (data.data === null) return setMaterialCatalog([]);\n\n          return setMaterialCatalog(data.data);\n        });\n\n        setData({\n          ...changeData,\n        });\n\n        break;\n      case \"update_merge\":\n        categoryList().then((data) => {\n          if (data.data === null) return setCategory([]);\n          return setCategory(data.data);\n        });\n\n        getSubCatagories().then((data) => {\n          if (data.data === null) return setSubCategory([]);\n          return setSubCategory(data.data);\n        });\n\n        console.log(form.payload.row.product_articles);\n\n        // for product qty\n        form.payload.row.product_articles.length > 0 &&\n          form.payload.row.product_articles.map((item) => {\n            setData((old) => ({\n              ...old,\n              [item.SKU]: item.qty,\n            }));\n          });\n\n        setData((old) => ({\n          ...old,\n          M: form.payload.row.M,\n          product_articles:\n            form.payload.row.product_articles.map((item) => item.SKU) || [],\n          product_title: form.payload.row.product_title,\n          category_name: form.payload.row.category_id,\n          category_id: form.payload.row.category_id,\n          sub_category_name: form.payload.row.sub_category_id,\n          sub_category_id: form.payload.row.sub_category_id,\n          warehouse: form.payload.row.warehouse,\n          warehouse_name: form.payload.row.warehouse_name,\n          bangalore_stock: form.payload.row.bangalore_stock,\n          jodhpur_stock: form.payload.row.jodhpur_stock,\n          product_description: form.payload.row.product_description,\n          product_image: form.payload.row.product_image,\n          savedImages: form.payload.row.product_image,\n          featured_image: form.payload.row.featured_image,\n          mannequin_image: form.payload.row.mannequin_image,\n          specification_image: form.payload.row.specification_image,\n          selling_points: form.payload.row.selling_points,\n          selling_price: form.payload.row.selling_price,\n          showroom_price: form.payload.row.showroom_price,\n          discount_limit: form.payload.row.discount_limit,\n          mobile_store: form.payload.row.mobile_store,\n          online_store: form.payload.row.online_store,\n          continue_selling: form.payload.row.continue_selling,\n          COD: form.payload.row.COD,\n          returnDays: form.payload.row.returnDays,\n          returnable: form.payload.row.returnable,\n          polish_time: form.payload.row.polish_time,\n          manufacturing_time: form.payload.row.manufacturing_time,\n          package_length: form.payload.row.package_length,\n          package_height: form.payload.row.package_height,\n          package_breadth: form.payload.row.package_breadth,\n          seo_title: form.payload.row.seo_title,\n          seo_description: form.payload.row.seo_description,\n          seo_keyword: form.payload.row.seo_keyword,\n        }));\n\n        break;\n      case \"update_Stock\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          product_id: form.payload.row.product_id,\n          stock: form.payload.row.stock,\n          warehouse: form.payload.row.warehouse,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          _id: form.payload.row._id,\n          supplier_name: form.payload.row.supplier_name,\n          mobile: form.payload.row.mobile,\n          gst_no: form.payload.row.gst_no,\n          alt_mobile: form.payload.row.alt_mobile,\n          specialization: form.payload.row.specialization,\n          SID: form.payload.row.SID,\n          address: form.payload.row.address,\n        });\n        break;\n      case \"add_supplier\":\n        getSID();\n        break;\n      case \"update_polish\":\n        // console.log(form.payload.row)\n        getDID();\n        setData({\n          ...changeData,\n          _id: form.payload.row.action._id,\n          polish_name: form.payload.row.action.polish_name,\n          polish_type: form.payload.row.action.polish_type,\n          level: form.payload.row.action.level,\n          polish_finish: form.payload.row.action.polish_finish,\n          outDoor_image: form.payload.row.action.outDoor_image,\n          savedImages: form.payload.row.action.outDoor_image,\n          inDoor_image: form.payload.row.action.inDoor_image,\n          indoorSavedImage: form.payload.row.action.inDoor_image,\n          lock: form.payload.row.action.lock,\n          price: form.payload.row.action.price,\n        });\n        break;\n      case \"primaryMaterial\":\n        getDID();\n        break;\n      case \"addPolish\":\n        getDID();\n        break;\n      case \"addBlog\":\n        getDID();\n        break;\n      case \"update_review\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          product_id: form.payload.row.product_id,\n          rating: parseInt(form.payload.row.rating),\n          review: form.payload.row.review,\n          review_title: form.payload.row.review_title,\n          yourTube_url: form.payload.row.yourTube_url,\n          action: form.payload.row.action,\n        }));\n        break;\n      case \"add_banner\":\n        getDID();\n        setSequenceFunc();\n        break;\n      case \"update_banner\":\n        setSequenceFunc();\n        getDID();\n        console.log(form.payload);\n        setData({\n          uuid: form.payload.value.uuid,\n          web_banner: form.payload.value.web_banner,\n          web_url: form.payload.value.web_url,\n          sequence_no: form.payload.value.sequence_no,\n          old_sequence_no: form.payload.value.sequence_no,\n          mobile_banner: form.payload.value.mobile_banner,\n          mobile_url: form.payload.value.mobile_url,\n          banner_title: form.payload.value.banner_title,\n          web_banner_status: form.payload.value.web_banner_status,\n          mobile_banner_status: form.payload.value.mobile_banner_status,\n        });\n        break;\n      case \"update_user\":\n        console.log(form.payload);\n        setData((old) => ({\n          ...old,\n          _id: form.payload.formattedValue._id,\n          user_name: form.payload.formattedValue.user_name,\n          email: form.payload.formattedValue.email,\n          mobile: form.payload.formattedValue.mobile,\n          role: form.payload.formattedValue.role,\n          access:\n            form.payload.row.access[0] !== \"No Permissions Alloted\"\n              ? form.payload.row.access\n              : [],\n          action: form.payload.row.action,\n        }));\n        break;\n      case \"add_coupon\":\n        getDID();\n        break;\n      case \"update_coupon\":\n        getDID();\n        // console.log(form.payload.formattedValue.expiry);\n        setData((old) => ({\n          _id: form.payload.formattedValue._id,\n          customer_ids: form.payload.formattedValue.customer_ids,\n          coupon_code: form.payload.formattedValue.coupon_code,\n          coupon_type: form.payload.formattedValue.coupon_type,\n          flat_amount: form.payload.formattedValue.flat_amount,\n          times: form.payload.formattedValue.times,\n          off: form.payload.formattedValue.off,\n          valid_from: form.payload.formattedValue.valid_from.split(\"T\")[0],\n          expiry: form.payload.formattedValue.expiry.split(\"T\")[0],\n          coupon_description: form.payload.formattedValue.coupon_description,\n        }));\n        break;\n      default:\n        break;\n    }\n  }, [form.formType, form.state]);\n\n  async function setSequenceFunc() {\n    const data = await getSequence();\n    console.log(data);\n    if (data.status === 200) {\n      return setSequence([...data.data]);\n    }\n  }\n\n  // stepper button\n  const handleNextStep = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  // stepper button\n  const handleBackStep = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleDiscount = (e) => {\n    if (e.target.name === \"discount_limit\") {\n      if (e.target.value > 25) e.target.value = 25;\n    }\n    setDiscount({\n      ...discount,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // for update\n  const handleChangeData = (e) => {\n    switch (form.formType) {\n      case \"update_category\":\n        setData({\n          ...changeData,\n          category: e.target.value,\n        });\n        break;\n      case \"update_PrimaryMaterial\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_polish\":\n        setData({\n          ...changeData,\n          polish: e.target.value,\n        });\n        break;\n      case \"update_knob\":\n        setData({\n          ...changeData,\n          knob: e.target.value,\n        });\n        break;\n      case \"update_fitting\":\n        setData({\n          ...changeData,\n          fitting: e.target.value,\n        });\n        break;\n      case \"update_hinge\":\n        setData({\n          ...changeData,\n          hinge: e.target.value,\n        });\n        break;\n      case \"update_supplier\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_handle\":\n        setData({\n          ...changeData,\n          handle: e.target.value,\n        });\n        break;\n      case \"update_secondaryMaterial\":\n        setData({\n          ...changeData,\n          secMater: e.target.value,\n        });\n        break;\n      case \"update_product\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_blog\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_fabric\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"update_textile\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case \"inward\":\n        setData({\n          ...changeData,\n          [e.target.name]: e.target.value,\n        });\n        break;\n\n      default:\n      // //console.log(\"\");\n    }\n  };\n\n  const feature = [\n    \"web_banner_status\",\n    \"mobile_banner_status\",\n    \"rotating_seats\",\n    \"eatable_oil_polish\",\n    \"no_chemical\",\n    \"lean_back\",\n    \"straight_back\",\n    \"weaving\",\n    \"not_suitable_for_Micro_Dish\",\n    \"tilt_top\",\n    \"inside_compartments\",\n    \"stackable\",\n    \"knife\",\n    \"wall_hanging\",\n    \"COD\",\n    \"returnable\",\n    \"mobile_store\",\n    \"online_store\",\n    \"continue_selling\",\n    \"ceramic_drawer_included\",\n    \"ceramic_tiles_included\",\n    \"status\",\n    \"lock\",\n    \"customizations\",\n    \"marketing\",\n    \"dial\",\n  ];\n\n  //  for product felids\n  const handleProductFields = (e) => {\n    if (feature.includes(e.target.name)) {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.checked,\n      });\n    } else {\n      setData({\n        ...changeData,\n        [e.target.name]: e.target.value,\n      });\n    }\n    // //console.log(changeData);\n  };\n\n  const handleChange = (event) => {\n    // //console.log(event.target.name);\n    setCat(event.target.value);\n  };\n\n  const handleClose = () => {\n    resetAll();\n    dispatch(setForm({ state: false, formType: null, payload: null }));\n  };\n\n  // function for handling category\n  const handleCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"insertCategory\");\n\n    FD.append(\"category_image\", Image[0]);\n    FD.append(\"category_name\", e.target.category_name.value);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"category_status\", e.target.category_status.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_name: data.data.response.category_name,\n          //     category_status: data.data.response.category_status,\n          //     category_image: data.data.response.category_image,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [...old, data.data.response.category_status]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling update category\n  const handleUpdateCategory = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Category\");\n    FD.append(\"operation\", \"updateCategory\");\n\n    FD.append(\"_id\", changeData._id);\n\n    Image[0] !== undefined && FD.append(\"category_image\", Image[0]);\n    // console.log(Image[0])\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    e.target.category_name.value !== undefined\n      ? FD.append(\"category_name\", e.target.category_name.value)\n      : console.log();\n\n    const res = addDraft(FD);\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.category_name = e.target.category_name.value;\n          //       Image[0] !== undefined\n          //         ? (set.category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function for handling Customer\n  const handleCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"username\", e.target.username.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"email\", e.target.email.value);\n    FD.append(\"password\", e.target.password.value);\n    FD.append(\"shipping\", JSON.stringify(address));\n    FD.append(\"marketing\", changeData.marketing);\n    FD.append(\"classification\", changeData.classification);\n    FD.append(\"customer_type\", changeData.customer_type);\n\n    const res = addCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              CID: data.data.response.CID,\n              register_time: data.data.response.register_time,\n              profile_image: data.data.response.profile_image,\n              username: data.data.response.username,\n              mobile: data.data.response.mobile,\n              email: data.data.response.email,\n              password: data.data.response.password,\n              shipping: data.data.response.shipping,\n              action: data.data.response,\n            },\n          ]);\n          setAddress([]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  // function for handling Customer\n  const handleUpdateCustomer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image[0] !== undefined && FD.append(\"profile_image\", Image[0]);\n\n    FD.append(\"CID\", changeData.CID);\n    FD.append(\"username\", changeData.username);\n    FD.append(\"mobile\", changeData.mobile);\n    FD.append(\"email\", changeData.email);\n    FD.append(\"password\", changeData.password);\n    FD.append(\"city\", changeData.city);\n    // FD.append(\"pincode\", changeData.pincode);\n    FD.append(\"state\", changeData.state);\n    // FD.append(\"landmark\", changeData.landmark);\n    FD.append(\"shipping\", changeData.shipping);\n\n    const res = updateCustomer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.CID = changeData.CID;\n                set.register_time = changeData.register_time;\n                set.profile_image =\n                  Image[0] !== undefined\n                    ? `${imageLink}${Image[0].path}`\n                    : console.log();\n                set.username = changeData.username;\n                set.mobile = changeData.mobile;\n                set.email = changeData.email;\n                set.password = changeData.password;\n                set.city = changeData.city;\n                set.state = changeData.state;\n                set.shipping = changeData.shipping;\n              }\n              return set;\n            })\n          );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  // function fo resting the values\n\n  const resetAll = () => {\n    setProductSKU({\n      P_SKU: [],\n      H_SKU: [],\n      supplier: [],\n      category: [],\n    });\n    setWebBanner([]);\n    setMobileBanner([]);\n    setImages([]);\n    setFeatured([]);\n    setFiles([]);\n    setActiveStep(0);\n    setData({\n      CVW: 0,\n      ACIN: \"\",\n      web_banner_status: false,\n      mobile_banner_status: false,\n      warehouse_to: \"\",\n      sequence_no: \"\",\n      marketing: false,\n      dial: false,\n      primary_material: [],\n      product_articles: [],\n      hardware_articles: [],\n      category_discount: [],\n      supplier: \"\",\n      range: \"None\",\n      product_array: [],\n      variation_array: [],\n      warehouse: [],\n      savedImages: [],\n      shipping: \"\",\n      product_title: \"\",\n      amazon_url: \"\",\n      status: true,\n      flipkart_url: \"\",\n      jiomart_url: \"\",\n      seo_title: \"\",\n      seo_description: \"\",\n      specification_image: \"\",\n      featured_image: \"\",\n      mannequin_image: \"\",\n      seo_keyword: \"\",\n      product_des: \"\",\n      category: \"\",\n      sub_category: \"\",\n      length: 0,\n      breadth: 0,\n      selling_points: [],\n      height: 0,\n      priMater: \"\",\n      priMater_weight: \"\",\n      secMater: \"\",\n      secMater_weight: \"\",\n      selling_price: 0,\n      mrp: 0,\n      discount_cap: 0,\n      polish_time: 0,\n      manufacturing_time: 0,\n      polish: [],\n      wight_cap: \"\",\n      wall_hanging: \"\",\n      assembly_required: \"\",\n      assembly_leg: \"\",\n      assembly_part: 2,\n      fitting: \"None\",\n      silver: \"\",\n      selling_point: \"\",\n      mirror: \"\",\n      joints: \"\",\n      tax_rate: 18,\n      seat_width: 0,\n      ceramic_drawer: \"None\",\n      ceramic_tiles: \"None\",\n      seat_depth: 0,\n      seat_height: 0,\n      wheel: \"None\",\n      wheel_included: \"no\",\n      trolly: \"\",\n      returnable: false,\n      returnDays: 0,\n      trolly_mater: \"\",\n      top_size_length: 0,\n      top_size_breadth: 0,\n      dial_size: 0,\n      COD: false,\n      textile: \"\",\n      paid_amount: 0,\n      total_amount: 0,\n      customer_name: \"\",\n      customer_email: \"\",\n      shipping_address: \"\",\n      searchCustomer: \"\",\n      mobile_store: true,\n      online_store: true,\n      continue_selling: true,\n      ceramic_drawer_included: false,\n      ceramic_tiles_included: false,\n      unit: \"Pcs\",\n      quantity: 1,\n      textile_type: \"\",\n      category_id: \"\",\n      sub_category_id: \"\",\n      product_description: \"\",\n      legs: \"None\",\n      fabric: \"None\",\n      assembly_level: \"Easy Assembly\",\n      mattress: \"no\",\n      mattress_length: 0,\n      mattress_breadth: 0,\n      hinge: \"None\",\n      hinge_qty: 0,\n      knob: \"None\",\n      knob_qty: 0,\n      handle: \"None\",\n      handle_qty: 0,\n      door: \"None\",\n      door_qty: 0,\n      plywood: \"no\",\n      wheel_qty: 0,\n      cradle_bed: \"no\",\n      cradle_bed_depth: 0,\n      cradle_bed_height: 0,\n      cradle_bed_width: 0,\n      showroom_price: 0,\n      discount_limit: 0,\n      length_main: 0,\n      weight: 0,\n      ceramic_drawer_qty: 0,\n      ceramic_tiles_qty: 0,\n      back_style: \"None\",\n      weight_capacity: \"None\",\n      drawer: \"None\",\n      package_breadth: 0,\n      package_height: 0,\n      package_length: 0,\n      silver_weight: 0,\n      mirror_length: 0,\n      mirror_width: 0,\n      drawer_count: 0,\n      seating_size_width: 0,\n      seating_size_depth: 0,\n      seating_size_height: 0,\n      restocking_time: 0,\n      min_quantity: 1,\n      hardware_polish: \"None\",\n      wood_weight: 0,\n      metal_weight: 0,\n      package_weight: 0,\n      polish_type: \"None\",\n      polish_finish: \"None\",\n      level: \"None\",\n      lock: false,\n      price: 0,\n      indoorSavedImage: [],\n      pincode: \"\",\n    });\n    document.getElementById(\"myForm\").reset();\n  };\n\n  const handleProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"insertProduct\");\n\n    FD.append(\"SKU\", \"Not Assigned \" + SKU);\n    FD.append(\"status\", false);\n\n    FD.append(\"CVW\", changeData.CVW);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n    FD.append(\"primary_material\", changeData.primary_material);\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n\n    FD.append(\"dial\", changeData.dial);\n    changeData.dial && FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleVariation = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"status\", true);\n    FD.append(\"parent_SKU\", changeData.SKU);\n\n    FD.append(\"SKU\", SKU);\n    FD.append(\"ACIN\", changeData.ACIN);\n\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial\", changeData.dial);\n    changeData.dial && FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = variation(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                SKU: data.data.response.SKU,\n                CVW: data.data.response.CVW,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_name: data.data.response.sub_category_name,\n                sub_category_id: data.data.response.sub_category_id,\n                product_description: data.data.response.product_description,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                primary_material: data.data.response.primary_material,\n                primary_material_name: data.data.response.primary_material_name,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                length_main: data.data.response.length_main,\n                breadth: data.data.response.breadth,\n                height: data.data.response.height,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                weight: data.data.response.weight,\n                polish: data.data.response.polish,\n                polish_name: data.data.response.polish_name,\n                hinge: data.data.response.hinge,\n                hinge_qty: data.data.response.hinge_qty,\n                hinge_name: data.data.response.hinge_name,\n                knob: data.data.response.knob,\n                knob_qty: data.data.response.knob_qty,\n                knob_name: data.data.response.knob_name,\n                handle: data.data.response.handle,\n                handle_qty: data.data.response.handle_qty,\n                handle_name: data.data.response.handle_name,\n                door: data.data.response.door,\n                door_qty: data.data.response.door_qty,\n                door_name: data.data.response.door_name,\n                fitting: data.data.response.fitting,\n                fitting_name: data.data.response.fitting_name,\n                selling_points: data.data.response.selling_points,\n                dial_size: data.data.response.dial_size,\n                seating_size_width: data.data.response.seating_size_width,\n                seating_size_depth: data.data.response.seating_size_depth,\n                seating_size_height: data.data.response.seating_size_height,\n                weight_capacity: data.data.response.weight_capacity,\n                fabric: data.data.response.fabric,\n                fabric_qty: data.data.response.fabric_qty,\n                fabric_name: data.data.response.fabric_name,\n                wall_hanging: data.data.response.wall_hanging,\n                assembly_required: data.data.response.assembly_required,\n                assembly_part: data.data.response.assembly_part,\n                legs: data.data.response.legs,\n                mirror: data.data.response.mirror,\n                mirror_length: data.data.response.mirror_length,\n                mirror_width: data.data.response.mirror_width,\n                silver: data.data.response.silver,\n                silver_weight: data.data.response.silver_weight,\n                joints: data.data.response.joints,\n                upholstery: data.data.response.upholstery,\n                trolley: data.data.response.trolley,\n                trolley_material: data.data.response.trolley_material,\n                rotating_seats: data.data.response.rotating_seats,\n                eatable_oil_polish: data.data.response.eatable_oil_polish,\n                no_chemical: data.data.response.no_chemical,\n                straight_back: data.data.response.straight_back,\n                lean_back: data.data.response.lean_back,\n                weaving: data.data.response.weaving,\n                knife: data.data.response.knife,\n                not_suitable_for_Micro_Dish:\n                  data.data.response.not_suitable_for_Micro_Dish,\n                tilt_top: data.data.response.tilt_top,\n                inside_compartments: data.data.response.inside_compartments,\n                stackable: data.data.response.stackable,\n                MRP: data.data.response.MRP,\n                tax_rate: data.data.response.tax_rate,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                status: data.data.response.status,\n                returnDays: data.data.response.returnDays,\n                COD: data.data.response.COD,\n                returnable: data.data.response.returnable,\n                drawer: data.data.response.drawer,\n                drawer_count: data.data.response.drawer_count,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                range: data.data.response.range,\n                back_style: data.data.response.back_style,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                quantity: data.data.response.quantity,\n                unit: data.data.response.unit,\n                assembly_level: data.data.response.assembly_level,\n                continue_selling: data.data.response.continue_selling,\n                wheel: data.data.response.wheel,\n                wheel_included: data.data.response.wheel_included,\n                wheel_qty: data.data.response.wheel_qty,\n                wheel_name: data.data.response.wheel_name,\n                ceramic_tiles: data.data.response.ceramic_tiles,\n                ceramic_tiles_qty: data.data.response.ceramic_tiles_qty,\n                ceramic_tiles_included:\n                  data.data.response.ceramic_tiles_included,\n                ceramic_tiles_name: data.data.response.ceramic_tiles_name,\n                ceramic_drawers: data.data.response.ceramic_drawers,\n                ceramic_drawers_included:\n                  data.data.response.ceramic_drawers_included,\n                ceramic_drawers_name: data.data.response.ceramic_drawers_name,\n                mattress: data.data.response.mattress,\n                mattress_length: data.data.response.mattress_length,\n                mattress_breadth: data.data.response.mattress_breadth,\n                plywood: data.data.response.plywood,\n                top_size_breadth: data.data.response.top_size_breadth,\n                top_size_length: data.data.response.top_size_length,\n                ceramic_drawers_qty: data.data.response.ceramic_drawers_qty,\n                variations: data.data.response.variations,\n                variant_label: data.data.response.variant_label,\n                parent_SKU: data.data.response.parent_SKU,\n                amazon_url: data.data.response.amazon_url,\n                flipkart_url: data.data.response.flipkart_url,\n                jiomart_url: data.data.response.jiomart_url,\n\n                action: data.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.SKU);\n    FD.append(\"type\", \"Product\");\n    FD.append(\"operation\", \"updateProduct\");\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"variations\", changeData.variations);\n    FD.append(\"variant_label\", changeData.variant_label);\n    FD.append(\"amazon_url\", changeData.amazon_url);\n    FD.append(\"flipkart_url\", changeData.flipkart_url);\n    FD.append(\"jiomart_url\", changeData.jiomart_url);\n    FD.append(\"wood_weight\", changeData.wood_weight);\n    FD.append(\"metal_weight\", changeData.metal_weight);\n    FD.append(\"package_weight\", changeData.package_weight);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"specification_image\", changeData.specification_image);\n    FD.append(\"featured_image\", changeData.featured_image);\n    FD.append(\"mannequin_image\", changeData.mannequin_image);\n\n    console.log(changeData.primary_material);\n\n    FD.append(\n      \"primary_material_name\",\n      JSON.stringify(changeData.primary_material)\n    );\n\n    FD.append(\"warehouse_name\", JSON.stringify(changeData.warehouse));\n    FD.append(\"polish_name\", JSON.stringify(changeData.polish));\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    catalog.hinge.map((item) => {\n      return (\n        item.SKU === changeData.hinge && FD.append(\"hinge_name\", item.title)\n      );\n    });\n    catalog.fitting.map((item) => {\n      return (\n        item.SKU === changeData.fitting && FD.append(\"fitting_name\", item.title)\n      );\n    });\n    catalog.knob.map((item) => {\n      return item.SKU === changeData.knob && FD.append(\"knob_name\", item.title);\n    });\n    catalog.door.map((item) => {\n      return item.SKU === changeData.door && FD.append(\"door_name\", item.title);\n    });\n    catalog.wheel.map((item) => {\n      return (\n        item.SKU === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n    catalog.handle.map((item) => {\n      return (\n        item.SKU === changeData.handle && FD.append(\"handle_name\", item.title)\n      );\n    });\n    catalog.ceramic_tiles.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_tiles &&\n        FD.append(\"ceramic_tiles_name\", item.title)\n      );\n    });\n    catalog.ceramic_drawer.map((item) => {\n      return (\n        item.SKU === changeData.ceramic_drawer &&\n        FD.append(\"ceramic_drawer_name\", item.title)\n      );\n    });\n\n    catalog.fabric.map((item) => {\n      return (\n        item.fabric === changeData.fabric &&\n        FD.append(\"fabric_name\", item.title)\n      );\n    });\n\n    catalog.wheel.map((item) => {\n      return (\n        item.wheel === changeData.wheel && FD.append(\"wheel_name\", item.title)\n      );\n    });\n\n    FD.append(\"parentProduct\", changeData.SKU);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"polish\", changeData.polish);\n    FD.append(\"hinge\", changeData.hinge);\n    FD.append(\"knob\", changeData.knob);\n    FD.append(\"handle\", changeData.handle);\n    FD.append(\"door\", changeData.door);\n    FD.append(\"fitting\", changeData.fitting);\n\n    FD.append(\"cradle_bed\", changeData.cradle_bed);\n    if (changeData.cradle_bed) {\n      FD.append(\"cradle_bed_depth\", changeData.cradle_bed_depth);\n      FD.append(\"cradle_bed_height\", changeData.cradle_bed_height);\n      FD.append(\"cradle_bed_width\", changeData.cradle_bed_width);\n    }\n\n    FD.append(\"wheel_included\", changeData.wheel_included);\n\n    if (changeData.wheel_included) {\n      FD.append(\"wheel_qty\", changeData.wheel_qty);\n      FD.append(\"wheel\", changeData.wheel);\n    }\n    if (changeData.handle !== \"None\") {\n      FD.append(\"handle_qty\", changeData.handle_qty);\n    }\n    if (changeData.hinge !== \"None\") {\n      FD.append(\"hinge_qty\", changeData.hinge_qty);\n    }\n    if (changeData.door !== \"None\") {\n      FD.append(\"door_qty\", changeData.door_qty);\n    }\n    if (changeData.knob !== \"None\") {\n      FD.append(\"knob_qty\", changeData.knob_qty);\n    }\n    if (changeData.fabric !== \"None\") {\n      FD.append(\"fabric_qty\", changeData.fabric_qty);\n    }\n\n    FD.append(\"ceramic_drawer_included\", changeData.ceramic_drawer_included);\n\n    if (changeData.ceramic_drawer_included) {\n      FD.append(\"ceramic_drawer\", changeData.ceramic_drawer);\n      FD.append(\"ceramic_drawer_qty\", changeData.ceramic_drawer_qty);\n    }\n\n    FD.append(\"ceramic_tiles_included\", changeData.ceramic_tiles_included);\n\n    if (changeData.ceramic_tiles_included) {\n      FD.append(\"ceramic_tiles\", changeData.ceramic_tiles);\n      FD.append(\"ceramic_tiles_qty\", changeData.ceramic_tiles_qty);\n    }\n\n    FD.append(\"mattress\", changeData.mattress);\n    FD.append(\"mattress_length\", changeData.mattress_length);\n    FD.append(\"mattress_breadth\", changeData.mattress_breadth);\n    FD.append(\"plywood\", changeData.plywood);\n\n    FD.append(\"range\", changeData.range);\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"back_style\", changeData.back_style);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n    FD.append(\"MRP\", changeData.MRP ? changeData.MRP : 0);\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"discount_limit\", changeData.discount_limit || 0);\n    FD.append(\"selling_price\", changeData.selling_price);\n    FD.append(\"primary_material\", changeData.primary_material);\n    FD.append(\"warehouse\", changeData.warehouse);\n    // FD.append(\"polish\", changeData.polish);\n    FD.append(\"fabric\", changeData.fabric);\n    FD.append(\"CVW\", changeData.CVW);\n\n    FD.append(\"drawer\", changeData.drawer);\n\n    FD.append(\"unit\", changeData.unit);\n    FD.append(\"quantity\", changeData.quantity ? changeData.quantity : 1);\n\n    if (changeData.drawer !== undefined || changeData.drawer !== \"none\")\n      FD.append(\n        \"drawer_count\",\n        changeData.drawer_count ? changeData.drawer_count : 0\n      );\n\n    //  // //console.log(secMaterial)\n    if (changeData.secondary_material_weight !== undefined)\n      FD.append(\n        \"secondary_material_weight\",\n        changeData.secondary_material_weight\n      );\n    FD.append(\n      \"length_main\",\n      changeData.length_main ? changeData.length_main : 0\n    );\n    FD.append(\"assembly_level\", changeData.assembly_level);\n\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n\n    FD.append(\"breadth\", changeData.breadth ? changeData.breadth : 0);\n    FD.append(\"height\", changeData.height ? changeData.height : 0);\n    FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n    FD.append(\"top_size_length\", changeData.top_size_length);\n    FD.append(\"top_size_breadth\", changeData.top_size_breadth);\n    FD.append(\"dial\", changeData.dial);\n    changeData.dial && FD.append(\"dial_size\", changeData.dial_size);\n    FD.append(\n      \"seating_size_width\",\n      changeData.seating_size_width ? changeData.seating_size_width : 0\n    );\n    FD.append(\n      \"seating_size_depth\",\n      changeData.seating_size_depth ? changeData.seating_size_depth : 0\n    );\n    FD.append(\n      \"seating_size_height\",\n      changeData.seating_size_height ? changeData.seating_size_height : 0\n    );\n    FD.append(\"weight_capacity\", changeData.weight_capacity);\n    FD.append(\"assembly_required\", changeData.assembly_required);\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    if (changeData.assembly_required === \"shipping\")\n      FD.append(\"assembly_part\", changeData.assembly_part);\n    if (changeData.assembly_required === \"yes\")\n      FD.append(\"legs\", changeData.legs);\n\n    if (changeData.silver === \"yes\")\n      FD.append(\n        \"silver_weight\",\n        changeData.silver_weight ? changeData.silver_weight : 0\n      );\n\n    if (changeData.trolley === \"yes\")\n      FD.append(\"trolley_material\", changeData.trolley_material);\n\n    if (changeData.upholstery === \"Yes\") FD.append(\"fabric\", changeData.fabric);\n\n    FD.append(\"mirror\", changeData.mirror);\n\n    if (changeData.mirror === \"yes\") {\n      FD.append(\n        \"mirror_length\",\n        changeData.mirror_length ? changeData.mirror_length : 0\n      );\n      FD.append(\n        \"mirror_width\",\n        changeData.mirror_width ? changeData.mirror_width : 0\n      );\n    }\n    FD.append(\"joints\", changeData.joints ? changeData.joints : \"\");\n    FD.append(\n      \"upholstery\",\n      changeData.upholstery ? changeData.upholstery : \"no\"\n    );\n    FD.append(\"trolley\", changeData.trolley ? changeData.trolley : \"no\");\n    FD.append(\"silver\", changeData.silver ? changeData.silver : \"no\");\n    FD.append(\n      \"rotating_seats\",\n      changeData.rotating_seats ? changeData.rotating_seats : false\n    );\n    FD.append(\n      \"eatable_oil_polish\",\n      changeData.eatable_oil_polish ? changeData.eatable_oil_polish : false\n    );\n    FD.append(\n      \"no_chemical\",\n      changeData.no_chemical ? changeData.no_chemical : false\n    );\n    FD.append(\"weaving\", changeData.weaving ? changeData.weaving : false);\n    FD.append(\"knife\", changeData.knife ? changeData.knife : false);\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    FD.append(\n      \"wall_hanging\",\n      changeData.wall_hanging ? changeData.wall_hanging : false\n    );\n\n    FD.append(\n      \"not_suitable_for_Micro_Dish\",\n      changeData.not_suitable_for_Micro_Dish\n        ? changeData.not_suitable_for_Micro_Dish\n        : false\n    );\n\n    FD.append(\"tilt_top\", changeData.tilt_top ? changeData.tilt_top : false);\n    FD.append(\n      \"inside_compartments\",\n      changeData.inside_compartments ? changeData.inside_compartments : false\n    );\n    FD.append(\"stackable\", changeData.stackable ? changeData.stackable : false);\n    FD.append(\"tax_rate\", changeData.tax_rate);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 1,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n    FD.append(\"M\", SKU);\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = addMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            total: old.total + 1,\n            data: [\n              ...form.row,\n              {\n                id: form.row.length + 1,\n                M: data.data.response.M,\n                product_articles: data.data.response.product_articles,\n                product_title: data.data.response.product_title,\n                category_name: data.data.response.category_name,\n                sub_category_name: data.data.response.category_name,\n                category_id: data.data.response.category_id,\n                sub_category_id: data.data.response.category_id,\n                warehouse: data.data.response.warehouse,\n                warehouse_name: data.data.response.warehouse_name,\n                bangalore_stock: data.data.response.bangalore_stock,\n                jodhpur_stock: data.data.response.jodhpur_stock,\n                product_description: data.data.response.product_description,\n                product_image: data.data.response.product_image,\n                featured_image: data.data.response.featured_image,\n                mannequin_image: data.data.response.mannequin_image,\n                specification_image: data.data.response.specification_image,\n                selling_points: data.data.response.selling_points,\n                selling_price: data.data.response.selling_price,\n                showroom_price: data.data.response.showroom_price,\n                discount_limit: data.data.response.discount_limit,\n                mobile_store: data.data.response.mobile_store,\n                online_store: data.data.response.online_store,\n                continue_selling: data.data.response.continue_selling,\n                COD: data.data.response.COD,\n                returnDays: data.data.response.returnDays,\n                returnable: data.data.response.returnable,\n                polish_time: data.data.response.polish_time,\n                manufacturing_time: data.data.response.manufacturing_time,\n                package_length: data.data.response.package_length,\n                package_height: data.data.response.package_height,\n                package_breadth: data.data.response.package_breadth,\n                seo_title: data.data.response.seo_title,\n                seo_description: data.data.response.seo_description,\n                seo_keyword: data.data.response.seo_keyword,\n                action: data.data.response._id,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateMergeProduct = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"product_image\", element);\n    });\n\n    FD.append(\"specification_image\", changeData.specification_image || \"\");\n    FD.append(\"featured_image\", changeData.featured_image || \"\");\n    FD.append(\"mannequin_image\", changeData.mannequin_image || \"\");\n\n    category.map((item) => {\n      return (\n        item._id === changeData.category_name &&\n        FD.append(\"category_name\", item.category_name)\n      );\n    });\n\n    subCategory.map((item) => {\n      return (\n        item._id === changeData.sub_category_name &&\n        FD.append(\"sub_category_name\", item.sub_category_name)\n      );\n    });\n\n    let Product_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        SKU: SKU,\n        qty: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n\n    FD.append(\"product_description\", changeData.product_description);\n    FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n\n    if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n      FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n    if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n      FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n    FD.append(\"category_id\", changeData.category_name);\n    FD.append(\"sub_category_id\", changeData.sub_category_name);\n    FD.append(\"product_title\", changeData.product_title);\n    FD.append(\"COD\", changeData.COD);\n    FD.append(\"returnDays\", changeData.returnable ? changeData.returnDays : 0);\n    FD.append(\"returnable\", changeData.returnable);\n\n    FD.append(\"polish_time\", changeData.polish_time);\n    FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n    FD.append(\n      \"package_length\",\n      changeData.package_length ? changeData.package_length : 0\n    );\n    FD.append(\n      \"package_height\",\n      changeData.package_height ? changeData.package_height : 0\n    );\n    FD.append(\n      \"package_breadth\",\n      changeData.package_breadth ? changeData.package_breadth : 0\n    );\n    FD.append(\"warehouse\", changeData.warehouse);\n\n    FD.append(\n      \"showroom_price\",\n      changeData.showroom_price ? changeData.showroom_price : 0\n    );\n\n    FD.append(\"discount_limit\", changeData.discount_limit);\n    FD.append(\"selling_price\", changeData.selling_price);\n\n    FD.append(\n      \"mobile_store\",\n      changeData.mobile_store ? changeData.mobile_store : true\n    );\n    FD.append(\n      \"online_store\",\n      changeData.online_store ? changeData.online_store : true\n    );\n    FD.append(\n      \"continue_selling\",\n      changeData.continue_selling ? changeData.continue_selling : true\n    );\n\n    const res = updateMergeProduct(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          console.log(data.data.updates.product_articles);\n          form.setRow((old) => ({\n            ...old,\n            data: form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.product_title = changeData.product_title;\n                set.product_articles = data.data.updates.product_articles;\n                set.category_name = data.data.updates.category_name;\n                set.category_id = data.data.updates.category_id;\n                set.sub_category_name = data.data.updates.sub_category_name;\n                set.sub_category_id = data.data.updates.sub_category_id;\n                set.featured_image = data.data.updates.featured_image;\n                set.mannequin_image = data.data.updates.mannequin_image;\n                set.specification_image = data.data.updates.specification_image;\n                set.warehouse = data.data.updates.warehouse;\n                set.warehouse_name = data.data.updates.warehouse_name;\n                set.bangalore_stock = data.data.updates.bangalore_stock;\n                set.jodhpur_stock = data.data.updates.jodhpur_stock;\n                set.product_description = data.data.updates.product_description;\n                set.product_image = data.data.updates.product_image;\n                set.selling_points = data.data.updates.selling_points;\n                set.selling_price = data.data.updates.selling_price;\n                set.showroom_price = data.data.updates.showroom_price;\n                set.discount_limit = data.data.updates.discount_limit;\n                set.mobile_store = data.data.updates.mobile_store;\n                set.online_store = data.data.updates.online_store;\n                set.continue_selling = data.data.updates.continue_selling;\n                set.COD = data.data.updates.COD;\n                set.returnDays = data.data.updates.returnDays;\n                set.returnable = data.data.updates.returnable;\n                set.polish_time = data.data.updates.polish_time;\n                set.manufacturing_time = data.data.updates.manufacturing_time;\n                set.package_length = data.data.updates.package_length;\n                set.package_height = data.data.updates.package_height;\n                set.package_breadth = data.data.updates.package_breadth;\n                set.seo_title = data.data.updates.seo_title;\n                set.seo_description = data.data.updates.seo_description;\n                set.seo_keyword = data.data.updates.seo_keyword;\n                return set;\n              } else return set;\n            }),\n          }));\n\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handlePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Matrial\");\n    FD.append(\"operation\", \"insertMaterial\");\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n    FD.append(\n      \"primaryMaterial_status\",\n      e.target.primaryMaterial_status.checked\n    );\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    // const res = addPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     primaryMaterial_name: data.data.response.primaryMaterial_name,\n          //     primaryMaterial_description:\n          //       data.data.response.primaryMaterial_description,\n          //     primaryMaterial_image: data.data.response.primaryMaterial_image,\n          //     primaryMaterial_status: data.data.response.primaryMaterial_status,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.primaryMaterial_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdatePrimaryMaterial = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.row.action);\n    FD.append(\"type\", \"Material\");\n    FD.append(\"operation\", \"updateMaterial\");\n\n    FD.append(\"_id\", form.payload.row.action);\n\n    Image.map((element) => {\n      return FD.append(\"primaryMaterial_image\", element);\n    });\n    FD.append(\n      \"primaryMaterial_description\",\n      e.target.primaryMaterial_description.value\n    );\n\n    e.target.primaryMaterial_name.value !== \"\" &&\n      FD.append(\"primaryMaterial_name\", e.target.primaryMaterial_name.value);\n\n    FD.append(\"customizations\", e.target.customizations.checked);\n\n    // const res = editPrimaryMaterial(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.primaryMaterial_description =\n          //         e.target.primaryMaterial_description.value;\n          //       set.primaryMaterial_name = e.target.primaryMaterial_name.value;\n          //       set.customizations = changeData.customizations;\n          //       set.primaryMaterial_image =\n          //         Image[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.primaryMaterial_image;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = addSupplier(FD);\n\n    res\n      .then((data) => {\n        //console.log(data.status);\n\n        if (data.status === 200) {\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              supplier_name: data.data.response.supplier_name,\n              mobile: data.data.response.mobile,\n              gst_no: data.data.response.gst_no,\n              alt_mobile: data.data.response.alt_mobile,\n              specialization: data.data.response.specialization,\n              SID: data.data.response.SID,\n              address: data.data.response.address,\n              action: data.data.response._id,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateSupplier = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    FD.append(\"_id\", form.payload.row.action);\n\n    FD.append(\"supplier_name\", e.target.supplier_name.value);\n    FD.append(\"mobile\", e.target.mobile.value);\n    FD.append(\"gst_no\", e.target.gst_no.value);\n    FD.append(\"alt_mobile\", e.target.alt_mobile.value);\n    FD.append(\"specialization\", e.target.specialization.value);\n    FD.append(\"SID\", e.target.SID.value);\n    FD.append(\"address\", e.target.address.value);\n\n    const res = editSupplier(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          form.setRow(\n            form.row.map((set) => {\n              if (set.action === form.payload.row.action) {\n                set.supplier_name = e.target.supplier_name.value;\n                set.mobile = e.target.mobile.value;\n                set.gst_no = e.target.gst_no.value;\n                set.alt_mobile = e.target.alt_mobile.value;\n                set.specialization = e.target.specialization.value;\n                set.SID = e.target.SID.value;\n                set.address = e.target.address.value;\n              }\n              return set;\n            })\n          );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleApplyDiscount = async (e) => {\n    e.preventDefault();\n\n    try {\n      const FD = new FormData();\n\n      console.log(changeData.category_discount);\n      // merge the discount with category name\n\n      let discount_array = [];\n\n      if (changeData.category_discount.length > 0)\n        discount_array = changeData.category_discount.map((name) => ({\n          name: name,\n          discount: changeData[name] || 0,\n        }));\n\n      FD.append(\"discount_array\", JSON.stringify(discount_array));\n\n      const res = await applyDiscount(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        setProductSKU({\n          P_SKU: [],\n          H_SKU: [],\n          supplier: [],\n          category: [],\n        });\n\n        form.setRow(\n          form.row.map((set) => {\n            let response = changeData.category_discount.filter((name) => {\n              return name === set.category_name;\n            });\n            console.log(response);\n            if (response.length > 0)\n              set.discount_limit = changeData[set.category_name];\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  };\n  const handleInward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => ({\n        [SKU]: changeData[SKU] || 0,\n      }));\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n    FD.append(\"purpose\", changeData.purpose);\n\n    const res = addInward(FD);\n\n    res\n      .then((data) => {\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n            category: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              inward_id: data.data.response.inward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleOutward = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n    console.log(changeData);\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"supplier\", changeData.supplier);\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"challan_no\", e.target.challan_no.value);\n    FD.append(\"vehicle_no\", e.target.vehicle_no.value.toUpperCase());\n    FD.append(\"driver_name\", e.target.driver_name.value);\n    FD.append(\"driver_no\", e.target.driver_no.value);\n\n    const res = addOutward(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              outward_id: data.data.response.outward_id,\n              order_no: data.data.response.order_no,\n              driver_name: data.data.response.driver_name,\n              driver_no: data.data.response.driver_no,\n              vehicle_no: data.data.response.vehicle_no,\n              supplier: data.data.response.supplier,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              warehouse: data.data.response.warehouse,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleTransfer = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    // merge the Quantities with product SKU number\n\n    let Product_SKU = [];\n    let Hardware_SKU = [];\n\n    if (changeData.product_articles.length > 0)\n      Product_SKU = changeData.product_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n    if (changeData.hardware_articles.length > 0)\n      Hardware_SKU = changeData.hardware_articles.map((SKU) => {\n        let cred = SKU.split(\"Stock :\");\n        return { [cred[0].trim()]: changeData[SKU] || parseInt(cred[1]) };\n      });\n\n    FD.append(\"product_articles\", JSON.stringify(Product_SKU));\n    FD.append(\"hardware_articles\", JSON.stringify(Hardware_SKU));\n    FD.append(\"purpose\", changeData.purpose);\n    FD.append(\"reason\", e.target.reason.value);\n    FD.append(\"warehouse\", changeData.warehouse);\n    FD.append(\"warehouse_to\", changeData.warehouse_to);\n\n    const res = addTransfer(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setProductSKU({\n            P_SKU: [],\n            H_SKU: [],\n            supplier: [],\n          });\n          form.setRow([\n            ...form.row,\n            {\n              id: form.row.length + 1,\n              transfer_id: data.data.response.transfer_id,\n              order_no: data.data.response.order_no,\n              warehouse: data.data.response.warehouse,\n              product_articles: data.data.response.product_articles,\n              hardware_articles: data.data.response.hardware_articles,\n              quantity: data.data.response.quantity,\n              purpose: data.data.response.purpose,\n              reason: data.data.response.reason,\n              date: data.data.response.date,\n            },\n          ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"insertSubCategory\");\n\n    category.map((item) => {\n      item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", item.category_name);\n    });\n\n    FD.append(\"sub_category_image\", Image[0]);\n    FD.append(\"category_id\", e.target.category_id.value);\n    FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n    FD.append(\"sub_category_status\", e.target.sub_category_status.checked);\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     category_id: data.data.response.category_id,\n          //     category_name: data.data.response.category_name,\n          //     sub_category_image: data.data.response.sub_category_image,\n          //     sub_category_name: data.data.response.sub_category_name,\n          //     sub_category_status: data.data.response.sub_category_status,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     seo_keyword: data.data.response.seo_keyword,\n          //     product_description: data.data.response.product_description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          // form.setCheck((old) => [\n          //   ...old,\n          //   data.data.response.sub_category_status,\n          // ]);\n          setImages([]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdateSubCategories = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n    let catName = \"\";\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Sub Category\");\n    FD.append(\"operation\", \"updateSubCategory\");\n\n    // //console.log(form.payload);\n    Image[0] !== undefined && FD.append(\"sub_category_image\", Image[0]);\n\n    FD.append(\"_id\", changeData._id);\n\n    category.map((item) => {\n      if (item._id === e.target.category_id.value) catName = item.category_name;\n      return (\n        item._id === e.target.category_id.value &&\n        FD.append(\"category_name\", catName)\n      );\n    });\n\n    e.target.category_id.value !== \"\" &&\n      FD.append(\"category_id\", e.target.category_id.value);\n    e.target.sub_category_name.value !== \"\" &&\n      FD.append(\"sub_category_name\", e.target.sub_category_name.value);\n\n    FD.append(\"seo_title\", changeData.seo_title);\n    FD.append(\"seo_description\", changeData.seo_description);\n    FD.append(\"seo_keyword\", changeData.seo_keyword);\n    FD.append(\"product_description\", changeData.product_description);\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.sub_category_name = e.target.sub_category_name.value;\n          //       set.category_name = catName;\n          //       Image[0] !== undefined\n          //         ? (set.sub_category_image = `https://admin.woodshala.in/upload/${Image[0].path}`)\n          //         : console.log();\n          //       set.seo_title = changeData.seo_title;\n          //       set.seo_description = changeData.seo_description;\n          //       set.seo_keyword = changeData.seo_keyword;\n          //       set.product_description = changeData.product_description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const [url, setUrl] = useState(\"\");\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    Image.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    const res = uploadImage(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          setImages([]);\n          setUrl(data.data.url);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleAddBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"insertBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    // const res = createBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     uuid: data.data.response.uuid,\n          //     seo_title: data.data.response.seo_title,\n          //     seo_description: data.data.response.seo_description,\n          //     title: data.data.response.title,\n          //     card_image: data.data.response.card_image,\n          //     card_description: data.data.response.card_description,\n          //     description: data.data.response.description,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateBlog = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", form.payload.value._id);\n    FD.append(\"type\", \"Blog\");\n    FD.append(\"operation\", \"updateBlog\");\n\n    featured.map((element) => {\n      return FD.append(\"banner_image\", element);\n    });\n\n    FD.append(\"_id\", form.payload.value._id);\n\n    FD.append(\"description\", editorRef.current.getContent());\n    FD.append(\"title\", e.target.title.value);\n    FD.append(\"seo_title\", e.target.seo_title.value);\n    FD.append(\"seo_description\", e.target.seo_description.value);\n    FD.append(\"card_description\", e.target.card_description.value);\n\n    // const res = updateBlog(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          setImages([]);\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.seo_title = e.target.seo_title.value;\n          //       set.seo_description = e.target.seo_description.value;\n          //       set.title = e.target.title.value;\n          //       set.card_image =\n          //         featured[0] !== undefined\n          //           ? `${imageLink}${Image[0].path}`\n          //           : changeData.card_image;\n          //       set.card_description = e.target.card_description.value;\n          //       set.description =\n          //         editorRef.current.getContent() || set.description;\n          //     }\n          //     return set;\n          //   })\n          // );\n          setImages([]);\n          setUrl(data.data.url);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        // //console.log(err);\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateOrder = (e) => {\n    e.preventDefault();\n\n    console.log(changeData.quantity);\n\n    const FD = new FormData();\n    // editorRef.current.getContent() for note\n    let Product_SKU = {};\n\n    if (changeData.quantity.length > 0)\n      changeData.quantity.map(\n        (SKU) => (Product_SKU = { ...Product_SKU, [SKU]: changeData[SKU] || 1 })\n      );\n\n    FD.append(\"customer_name\", changeData.customer_name);\n    FD.append(\"customer_name\", changeData.customer_name);\n    FD.append(\"customer_email\", changeData.customer_email);\n    FD.append(\"customer_mobile\", changeData.customer_mobile);\n    FD.append(\"country\", changeData.country);\n    FD.append(\"city\", changeData.city);\n    FD.append(\"state\", changeData.state);\n    FD.append(\"shipping\", changeData.shipping);\n    FD.append(\"billing\", changeData.billing);\n    FD.append(\"quantity\", Product_SKU);\n    FD.append(\"pincode\", changeData.pincode);\n    FD.append(\"GST\", changeData.GST);\n    FD.append(\"has_GST\", changeData.has_GST);\n    FD.append(\"note\", changeData.note);\n    FD.append(\"classification\", changeData.classification);\n    FD.append(\"customer_type\", changeData.customer_type);\n\n    // const res = addOrder(FD);\n\n    // res\n    //   .then((data) => {\n    //     if (data.status !== 200) {\n    //       // setImages([]);\n    //       dispatch(\n    //         setAlert({\n    //           open: true,\n    //           variant: \"error\",\n    //           message: data.data.message || \"Something Went Wrong !!!\",\n    //         })\n    //       );\n    //     } else {\n    //       // setImages([]);\n    //       // setUrl(data.data.url);\n    //       handleClose();\n    //       dispatch(\n    //         setAlert({\n    //           open: true,\n    //           variant: \"success\",\n    //           message: data.data.message,\n    //         })\n    //       );\n    //     }\n    //   })\n    //   .catch((err) => {\n    //     // //console.log(err);\n    //     setImages([]);\n    //     dispatch(\n    //       setAlert({\n    //         open: true,\n    //         variant: \"error\",\n    //         message: \"Something Went Wrong !!!\",\n    //       })\n    //     );\n    //   });\n  };\n\n  const handleAddress = (e) => {\n    e.preventDefault();\n    setAddress([\n      ...address,\n      {\n        name: e.target.customer_name.value,\n        mobile: e.target.mobile.value,\n        pincode: e.target.pincode.value,\n        city: e.target.city.value,\n        state: e.target.state.value,\n        shipping: e.target.address.value,\n        type: e.target.type.value,\n      },\n    ]);\n    console.log(address);\n  };\n\n  async function handleHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"insertHardware\");\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n\n      FD.append(\"specification_image\", changeData.specification_image || \"\");\n      FD.append(\"featured_image\", changeData.featured_image || \"\");\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      category.map((item) => {\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     SKU: data.data.response.SKU,\n        //     title: data.data.response.title,\n        //     category_name: data.data.response.category_name,\n        //     category_id: data.data.response.category_id,\n        //     sub_category_name: data.data.response.sub_category_name,\n        //     sub_category_id: data.data.response.sub_category_id,\n        //     hardware_image: data.data.response.hardware_image,\n        //     warehouse: data.data.response.warehouse,\n        //     bangalore_stock: data.data.response.bangalore_stock,\n        //     jodhpur_stock: data.data.response.jodhpur_stock,\n        //     manufacturing_time: data.data.response.manufacturing_time,\n        //     status: data.data.response.status,\n        //     returnDays: data.data.response.returnDays,\n        //     COD: data.data.response.COD,\n        //     returnable: data.data.response.returnable,\n        //     quantity: data.data.response.quantity,\n        //     package_length: data.data.response.package_length,\n        //     package_height: data.data.response.package_height,\n        //     package_breadth: data.data.response.package_breadth,\n        //     unit: data.data.response.unit,\n        //     range: data.data.response.range,\n        //     action: data.data.response._id,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  async function handleUpdateHardware(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.SKU);\n      FD.append(\"type\", \"Hardware\");\n      FD.append(\"operation\", \"updateHardware\");\n\n      // console.log(form.payload.row.action);\n\n      FD.append(\"_id\", form.payload.row.action);\n\n      files.map((element) => {\n        if (element.validate) return FD.append(\"hardware_image\", element);\n      });\n      FD.append(\"savedImages\", JSON.stringify(changeData.savedImages));\n\n      FD.append(\"specification_image\", changeData.specification_image);\n      FD.append(\"featured_image\", changeData.featured_image);\n\n      FD.append(\"status\", changeData.status);\n      FD.append(\"online_store\", changeData.online_store);\n      FD.append(\"mobile_store\", changeData.mobile_store);\n\n      FD.append(\n        \"primary_material_name\",\n        JSON.stringify(changeData.primary_material)\n      );\n      FD.append(\"primary_material\", changeData.primary_material);\n\n      let multiOBJ = {};\n\n      category.map((item) => {\n        if (item._id === changeData.category_name)\n          multiOBJ = { ...multiOBJ, category_name: item.category_name };\n\n        return (\n          item._id === changeData.category_name &&\n          FD.append(\"category_name\", item.category_name)\n        );\n      });\n\n      subCategory.map((item) => {\n        if (item._id === changeData.sub_category_name)\n          multiOBJ = { ...multiOBJ, sub_category_name: item.sub_category_name };\n\n        return (\n          item._id === changeData.sub_category_name &&\n          FD.append(\"sub_category_name\", item.sub_category_name)\n        );\n      });\n      FD.append(\"discount_limit\", changeData.discount_limit || 0);\n      FD.append(\"tax_rate\", changeData.tax_rate);\n      FD.append(\"restocking_time\", changeData.restocking_time || 0);\n      FD.append(\"selling_points\", JSON.stringify(changeData.selling_points));\n      FD.append(\"seo_title\", changeData.seo_title);\n      FD.append(\"seo_description\", changeData.seo_description);\n      FD.append(\"seo_keyword\", changeData.seo_keyword);\n      FD.append(\"hardware_polish\", changeData.hardware_polish);\n      FD.append(\"min_quantity\", changeData.min_quantity);\n      FD.append(\n        \"continue_selling\",\n        changeData.continue_selling ? changeData.continue_selling : true\n      );\n\n      FD.append(\n        \"returnDays\",\n        changeData.returnable ? changeData.returnDays : 0\n      );\n      FD.append(\"returnable\", changeData.returnable);\n      FD.append(\"COD\", changeData.COD);\n\n      FD.append(\"category_id\", changeData.category_name);\n      FD.append(\"sub_category_id\", changeData.sub_category_name);\n      FD.append(\"polish_time\", changeData.polish_time);\n      FD.append(\"manufacturing_time\", changeData.manufacturing_time);\n      FD.append(\"title\", changeData.title);\n\n      FD.append(\"SKU\", changeData.SKU);\n\n      FD.append(\n        \"showroom_price\",\n        changeData.showroom_price ? changeData.showroom_price : 0\n      );\n      FD.append(\"selling_price\", changeData.selling_price);\n      FD.append(\"warehouse\", changeData.warehouse);\n\n      FD.append(\"unit\", changeData.unit);\n      FD.append(\"quantity\", changeData.quantity);\n\n      FD.append(\"weight\", changeData.weight ? changeData.weight : 0);\n\n      FD.append(\n        \"package_weight\",\n        changeData.package_weight ? changeData.package_weight : 0\n      );\n      FD.append(\n        \"package_length\",\n        changeData.package_length ? changeData.package_length : 0\n      );\n      FD.append(\n        \"package_height\",\n        changeData.package_height ? changeData.package_height : 0\n      );\n      FD.append(\n        \"package_breadth\",\n        changeData.package_breadth ? changeData.package_breadth : 0\n      );\n\n      if (changeData.jodhpur_stock && changeData.jodhpur_stock > 0)\n        FD.append(\"jodhpur_stock\", changeData.jodhpur_stock);\n\n      if (changeData.bangalore_stock && changeData.bangalore_stock > 0)\n        FD.append(\"bangalore_stock\", changeData.bangalore_stock);\n\n      const res = await addDraft(FD);\n\n      if (res) {\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.title = changeData.title;\n          //       set.category_name = multiOBJ.category_name;\n          //       set.category_id = changeData.category_id;\n          //       set.sub_category_name = multiOBJ.sub_category_name;\n          //       set.sub_category_id = changeData.sub_category_id;\n          //       set.hardware_image = changeData.hardware_image;\n          //       set.warehouse = changeData.warehouse.join(\",\");\n          //       set.bangalore_stock = changeData.bangalore_stock;\n          //       set.jodhpur_stock = changeData.jodhpur_stock;\n          //       set.manufacturing_time = changeData.manufacturing_time;\n          //       set.status = changeData.status;\n          //       set.returnDays = changeData.returnDays;\n          //       set.COD = changeData.COD;\n          //       set.returnable = changeData.returnable;\n          //       set.quantity = changeData.quantity;\n          //       set.package_length = changeData.package_length;\n          //       set.package_height = changeData.package_height;\n          //       set.package_breadth = changeData.package_breadth;\n          //       set.unit = changeData.unit;\n          //       set.range = changeData.range;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(\"error>>\", err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  const handlePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"insertPolish\");\n\n    FD.append(\"polish_name\", e.target.polish_name.value);\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"lock\", e.target.lock.checked);\n    FD.append(\"price\", e.target.price.value);\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow([\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleUpdatePolish = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData._id);\n    FD.append(\"type\", \"Polish\");\n    FD.append(\"operation\", \"updatePolish\");\n\n    FD.append(\"_id\", changeData._id);\n\n    FD.append(\"polish_type\", changeData.polish_type);\n    FD.append(\"polish_finish\", changeData.polish_finish);\n    FD.append(\"level\", changeData.level);\n    FD.append(\"polish_name\", changeData.polish_name);\n    FD.append(\"lock\", changeData.lock);\n    FD.append(\"price\", changeData.price);\n    FD.append(\"savedOutDoor\", JSON.stringify(changeData.savedImages));\n    FD.append(\"savedIndoor\", JSON.stringify(changeData.indoorSavedImage));\n\n    files.map((element) => {\n      if (element.validate) return FD.append(\"outDoor_image\", element);\n    });\n    Indoor.map((element) => {\n      if (element.validate) return FD.append(\"inDoor_image\", element);\n    });\n\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          // form.setRow(\n          //   form.row.map((set) => {\n          //     if (set.action === form.payload.row.action) {\n          //       set.polish_name = changeData.polish_name;\n          //       set.polish_type = changeData.polish_type;\n          //       set.polish_finish = changeData.polish_finish;\n          //       set.level = changeData.level;\n          //       set.outDoor_image = changeData.outDoor_image;\n          //       set.inDoor_image = changeData.inDoor_image;\n          //       set.lock = changeData.lock;\n          //       set.price = changeData.price;\n          //     }\n          //     return set;\n          //   })\n          // );\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err);\n        setImages([]);\n        setIndoor([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  const handleUpdateCoupon = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", changeData.coupon_code);\n    FD.append(\"type\", \"Coupon\");\n    FD.append(\"operation\", \"updateCoupon\");\n    FD.append(\"times\", changeData.times);\n    FD.append(\"coupon_code\", changeData.coupon_code);\n    FD.append(\"coupon_type\", changeData.coupon_type);\n    changeData.coupon_type === \"FLAT\" &&\n      FD.append(\"flat_amount\", changeData.flat_amount);\n    changeData.coupon_type === \"OFF(%)\" && FD.append(\"off\", changeData.off);\n    FD.append(\"valid_from\", changeData.valid_from);\n    FD.append(\"expiry\", changeData.expiry);\n    FD.append(\"coupon_description\", changeData.coupon_description);\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n  const handleCoupon = (e) => {\n    e.preventDefault();\n\n    const FD = new FormData();\n\n    FD.append(\"DID\", SKU);\n    FD.append(\"AID\", \"Not Assigned \" + SKU);\n    FD.append(\"type\", \"Coupon\");\n    FD.append(\"operation\", \"addCoupon\");\n    FD.append(\"times\", changeData.times);\n    FD.append(\"coupon_code\", changeData.coupon_code);\n    FD.append(\"coupon_type\", changeData.coupon_type);\n    changeData.coupon_type === \"FLAT\" &&\n      FD.append(\"flat_amount\", changeData.flat_amount);\n    changeData.coupon_type === \"OFF(%)\" && FD.append(\"off\", changeData.off);\n    FD.append(\"valid_from\", changeData.valid_from);\n    FD.append(\"expiry\", changeData.expiry);\n    FD.append(\"coupon_description\", changeData.coupon_description);\n\n    // const res = addPolish(FD);\n    const res = addDraft(FD);\n\n    res\n      .then((data) => {\n        // //console.log(data.status);\n\n        if (data.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: data.data.message,\n            })\n          );\n        } else {\n          //   ...form.row,\n          //   {\n          //     id: form.row.length + 1,\n          //     polish_name: data.data.response.polish_name,\n          //     polish_type: data.data.response.polish_type,\n          //     polish_finish: data.data.response.polish_finish,\n          //     outDoor_image: data.data.response.outDoor_image,\n          //     inDoor_image: data.data.response.inDoor_image,\n          //     lock: data.data.response.lock,\n          //     price: data.data.response.price,\n          //     action: data.data.response,\n          //   },\n          // ]);\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: data.data.message,\n            })\n          );\n        }\n      })\n      .catch((err) => {\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n          })\n        );\n      });\n  };\n\n  async function handleReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n\n      FD.append(\"product_id\", changeData.product_id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      FD.append(\"reviewer_name\", changeData.reviewer_name);\n      FD.append(\"reviewer_email\", changeData.reviewer_email);\n      files.map((element) => {\n        if (element.validate) return FD.append(\"review_images\", element);\n      });\n      const res = await addReview(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setCheck((old) => [...old, true]);\n          form.setRow((old) => ({\n            ...old,\n            data: [\n              ...old.data,\n              {\n                id: old.data.length + 1,\n                CID: res.data.response.CID,\n                product_id: res.data.response.product_id,\n                rating: res.data.response.rating,\n                review: res.data.response.review,\n                admin_reply: res.data.response.admin_reply,\n                review_title: res.data.response.review_title,\n                review_images: res.data.response.review_images,\n                review_videos: res.data.response.review_videos,\n                yourTube_url: res.data.response.yourTube_url,\n                reviewer_name: res.data.response.reviewer_name,\n                reviewer_email: res.data.response.reviewer_email,\n                hide: res.data.response.hide,\n                date: res.data.response.date,\n                action: res.data.response,\n              },\n            ],\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      //console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateReview(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      console.log(changeData);\n\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"rating\", changeData.rating);\n      FD.append(\"review\", changeData.review);\n      FD.append(\"review_title\", changeData.review_title);\n      FD.append(\"yourTube_url\", changeData.yourTube_url);\n      const res = await updateReview(FD);\n      if (res) {\n        //console.log(data.status);\n\n        if (res.status === 203) {\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"error\",\n              message: res.data.message,\n            })\n          );\n        } else {\n          form.setRow((old) => ({\n            ...old,\n            data: old.data.map((row, index) => {\n              console.log(row);\n              if (row.action._id === changeData._id) {\n                row.rating = changeData.rating;\n                row.review = changeData.review;\n                row.review_title = changeData.review_title;\n                row.yourTube_url = changeData.yourTube_url;\n              }\n              return row;\n            }),\n          }));\n          handleClose();\n          dispatch(\n            setAlert({\n              open: true,\n              variant: \"success\",\n              message: res.data.message,\n            })\n          );\n        }\n      }\n    } catch (err) {\n      console.log(err);\n      setImages([]);\n      setIndoor([]);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  // load new searchList\n  const handleSupplierList = async (e) => {\n    const delayDebounceFn = setTimeout(() => {\n      getSupplierDropdown(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: res.data.Suppliers,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            supplier: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  };\n  async function handleSearchStockSKU(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getStockSKU({ search: e.target.value, warehouse: changeData.warehouse })\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearch(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getArticlesId(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: res.data.P_SKU,\n            H_SKU: res.data.H_SKU,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            P_SKU: [],\n            H_SKU: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n  async function handleSearchCategory(e) {\n    const delayDebounceFn = setTimeout(() => {\n      getCategoryList(e.target.value)\n        .then((res) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: res.data,\n          }));\n        })\n        .catch((err) => {\n          setProductSKU((old) => ({\n            ...old,\n            category: [],\n          }));\n        });\n    }, 1000);\n    return () => clearTimeout(delayDebounceFn);\n  }\n\n  // function for handling banner\n  async function handleBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", \"Not Assigned \" + SKU);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"addBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      FD.append(\"web_banner\", webBanner[0]);\n      FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     user_name : res.data.response.user_name,\n        //     email : res.data.response.email,\n        //     mobile : res.data.response.mobile,\n        //     role : res.data.response.role,\n        //     access : res.data.response.access,\n        //     action: res.data.response,\n        //   },\n        // ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateBanner(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"DID\", SKU);\n      FD.append(\"AID\", changeData.uuid);\n      FD.append(\"type\", \"Banner\");\n      FD.append(\"operation\", \"updateBanner\");\n      FD.append(\"banner_title\", changeData.banner_title);\n      webBanner.length > 0 && FD.append(\"web_banner\", webBanner[0]);\n      mobileBanner.length > 0 && FD.append(\"mobile_banner\", mobileBanner[0]);\n      FD.append(\"mobile_url\", changeData.mobile_url);\n      FD.append(\"web_url\", changeData.web_url);\n      FD.append(\"web_banner_status\", changeData.web_banner_status);\n      FD.append(\"mobile_banner_status\", changeData.mobile_banner_status);\n      FD.append(\"sequence_no\", changeData.sequence_no);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addDraft(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        // form.setRow([\n        //   ...form.row,\n        //   {\n        //     id: form.row.length + 1,\n        //     category_name: data.data.response.category_name,\n        //     category_status: data.data.response.category_status,\n        //     category_image: data.data.response.category_image,\n        //     seo_title: data.data.response.seo_title,\n        //     seo_description: data.data.response.seo_description,\n        //     seo_keyword: data.data.response.seo_keyword,\n        //     product_description: data.data.response.product_description,\n        //     action: data.data.response,\n        //   },\n        // ]);\n        // form.setCheck((old) => [...old, data.data.response.category_status]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUser(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"user_name\", changeData.user_name);\n      FD.append(\"password\", changeData.password);\n      FD.append(\"email\", changeData.email);\n      FD.append(\"mobile\", changeData.mobile);\n      FD.append(\"role\", changeData.role);\n      FD.append(\"access\", changeData.access);\n\n      // // //console.log(acceptedFiles[0].name, e.target.category_name.value)\n\n      const res = await addUser(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        form.setRow([\n          ...form.row,\n          {\n            id: form.row.length + 1,\n            user_name: res.data.response.user_name,\n            email: res.data.response.email,\n            mobile: res.data.response.mobile,\n            role: res.data.response.role,\n            access: res.data.response.access,\n            action: res.data.response,\n          },\n        ]);\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n  async function handleUpdateUser(e) {\n    try {\n      e.preventDefault();\n\n      const FD = new FormData();\n\n      FD.append(\"_id\", changeData._id);\n      FD.append(\"user_name\", changeData.user_name);\n      FD.append(\"email\", changeData.email);\n      FD.append(\"mobile\", changeData.mobile);\n      FD.append(\"role\", changeData.role);\n      FD.append(\"access\", changeData.access);\n\n      const res = await updateUser(FD);\n\n      if (res.status === 203) {\n        setImages([]);\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"error\",\n            message: res.data.message,\n          })\n        );\n      } else {\n        console.log(changeData.access);\n        form.setRow(\n          form.row.map((set) => {\n            if (set.action === form.payload.row.action) {\n              set.user_name = changeData.user_name;\n              set.email = changeData.email;\n              set.mobile = changeData.mobile;\n              set.role = changeData.role;\n              set.access = changeData.access;\n              set.action = changeData.action;\n            }\n            return set;\n          })\n        );\n        handleClose();\n        dispatch(\n          setAlert({\n            open: true,\n            variant: \"success\",\n            message: res.data.message,\n          })\n        );\n      }\n    } catch (err) {\n      console.log(err);\n      dispatch(\n        setAlert({\n          open: true,\n          variant: \"error\",\n          message: \"Something Went Wrong !!!\",\n        })\n      );\n    }\n  }\n\n  useEffect(() => {\n    handelPincode();\n  }, [changeData.pincode]);\n\n  async function handelPincode() {\n    // console.log(changeData.pincode);\n    if (changeData.pincode.toString().length === 6) {\n      let res = await getAddress(changeData.pincode);\n      if (res.status === 200) {\n        let pincode = res.data.results[changeData.pincode] || [];\n        setCatalog((old) => ({ ...old, city: pincode }));\n        setData((old) => ({\n          ...old,\n          state: pincode[0].state,\n        }));\n      }\n    } else {\n      setData((old) => ({ ...old, pincode: changeData.pincode }));\n    }\n  }\n\n  async function handlePincodeSearch(e) {\n    console.log(e.target.value);\n    let res = await listPincode({\n      page: 1,\n      limit: 10,\n      total: 10,\n      pincode: e.target.value,\n    });\n    if (res.status === 200) {\n      setCatalog((old) => ({ ...old, pincode: [...res.data.data] }));\n    }\n  }\n\n  return (\n    <>\n      <Slide direction=\"left\" in={form.state} mountOnEnter unmountOnExit>\n        <Backdrop\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open={form.state}\n        >\n          <Box\n            className={\n              mode.type === true ? \"mainDarkContainer\" : \"mainContainer\"\n            }\n            sx={\n              form.formType === \"product\" || form.formType === \"update_product\"\n                ? { width: \"100vw !important\", padding: \"0 5% !important\" }\n                : {}\n            }\n          >\n            <IconButton\n              onClick={handleClose}\n              color=\"primary\"\n              className=\"crossButton\"\n            >\n              <CancelIcon />\n            </IconButton>\n\n            {/* add Products */}\n\n            {form.formType === \"product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* \n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <Grid xs={12}>\n                                  <Typography variant=\"h6\">\n                                    Uploaded Images\n                                  </Typography>\n                                </Grid>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.dial}\n                                    onChange={handleProductFields}\n                                    name=\"dial\"\n                                  />\n                                }\n                                label=\"Dial\"\n                              />\n\n                              {changeData.dial && (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Inch\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.dial_size}\n                                    onChange={handleProductFields}\n                                    name=\"dial_size\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Products Ends */}\n            {/* Update Products */}\n\n            {form.formType === \"update_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.SKU || \"\"}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.dial}\n                                    onChange={handleProductFields}\n                                    name=\"dial\"\n                                  />\n                                }\n                                label=\"Dial\"\n                              />\n\n                              {changeData.dial && (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Inch\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.dial_size}\n                                    onChange={handleProductFields}\n                                    name=\"dial_size\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url || \"\"}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url || \"\"}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url || \"\"}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Products Ends */}\n            {/* Variation Products */}\n\n            {form.formType === \"variation\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Create Variation\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add variation of product and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleVariation);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              required\n                              label=\"ACIN Number\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"ACIN\"\n                              value={changeData.ACIN}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Length\"\n                              type=\"number\"\n                              value={changeData.length_main}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"length_main\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"breadth\"\n                              value={changeData.breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"height\"\n                              value={changeData.height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"range\"\n                              label=\"Range\"\n                              multiple\n                              value={changeData.range || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select the range.\"\n                            >\n                              {rangeCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Polish\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.polish || []}\n                              name=\"polish\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option, index) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    <Checkbox\n                                      checked={\n                                        changeData.polish.indexOf(\n                                          option.polish_name\n                                        ) > -1\n                                      }\n                                    />\n                                    <ListItemText\n                                      primary={option.polish_name}\n                                    />\n                                  </MenuItem>\n                                ))}\n                            </Select>\n                            {/* <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"polish\"\n                              label=\"Polish\"\n                              value={changeData.polish || \"\"}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your Polish.\"\n                            >\n                              {polishCatalog.map(\n                                (option) =>\n                                  option.polish_status && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.polish_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Assembly\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"assembly_required\"\n                                value={changeData.assembly_required || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"shipping\"\n                                  control={<Radio />}\n                                  label=\"Shipping In Part\"\n                                />\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.assembly_required === \"shipping\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Assemble Part\"\n                                  type=\"number\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        No. of parts\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"assembly_part\"\n                                  value={\n                                    changeData.assembly_part > -1 &&\n                                    changeData.assembly_part < 3\n                                      ? changeData.assembly_part\n                                      : 0\n                                  }\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            {changeData.assembly_required === \"yes\" && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 1, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"legs\"\n                                  label=\"Table Legs\"\n                                  value={changeData.legs || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your leg \"\n                                >\n                                  {legCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // required\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"assembly_level\"\n                                  label=\"Assembly Level\"\n                                  value={changeData.assembly_level || \"\"}\n                                  onChange={handleProductFields}\n                                  multiple\n                                  helperText=\"Please select your assembly level \"\n                                >\n                                  {assemblyLevelCatalog.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                              </>\n                            )}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                            {/*                            \n                             <TextField sx = {{mb : 2}}\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"MRP\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"MRP\"\n                              onChange={handleProductFields}\n                              value={changeData.MRP}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Features */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Features\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.rotating_seats}\n                                    onChange={handleProductFields}\n                                    name=\"rotating_seats\"\n                                  />\n                                }\n                                label=\"Rotating Seats\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.eatable_oil_polish}\n                                    onChange={handleProductFields}\n                                    name=\"eatable_oil_polish\"\n                                  />\n                                }\n                                label=\"Eatable Oil Polished\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.no_chemical}\n                                    onChange={handleProductFields}\n                                    name=\"no_chemical\"\n                                  />\n                                }\n                                label=\"No Chemical Used\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.weaving}\n                                    onChange={handleProductFields}\n                                    name=\"weaving\"\n                                  />\n                                }\n                                label=\"Weaving\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={\n                                      changeData.not_suitable_for_Micro_Dish\n                                    }\n                                    onChange={handleProductFields}\n                                    name=\"not_suitable_for_Micro_Dish\"\n                                  />\n                                }\n                                label=\"Not Suitable For Microwave/Dishwasher\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.tilt_top}\n                                    onChange={handleProductFields}\n                                    name=\"tilt_top\"\n                                  />\n                                }\n                                label=\"Tilt Top\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.inside_compartments}\n                                    onChange={handleProductFields}\n                                    name=\"inside_compartments\"\n                                  />\n                                }\n                                label=\"Inside Compartments\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.stackable}\n                                    onChange={handleProductFields}\n                                    name=\"stackable\"\n                                  />\n                                }\n                                label=\"Stackable\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.knife}\n                                    onChange={handleProductFields}\n                                    name=\"knife\"\n                                  />\n                                }\n                                label=\"Knife Friendly Surface\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.wall_hanging}\n                                    onChange={handleProductFields}\n                                    name=\"wall_hanging\"\n                                  />\n                                }\n                                label=\"Wall Hanging\"\n                              />\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.dial}\n                                    onChange={handleProductFields}\n                                    name=\"dial\"\n                                  />\n                                }\n                                label=\"Dial\"\n                              />\n\n                              {changeData.dial && (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    // autoComplete={false}\n                                    id=\"fullWidth\"\n                                    label=\"Dial Size (Only Applicable on Clock And Clock Containing Items )\"\n                                    type=\"number\"\n                                    InputProps={{\n                                      startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                          Inch\n                                        </InputAdornment>\n                                      ),\n                                    }}\n                                    variant=\"outlined\"\n                                    value={changeData.dial_size}\n                                    onChange={handleProductFields}\n                                    name=\"dial_size\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_drawer_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_drawer_included\"\n                                  />\n                                }\n                                label=\"Ceramic Drawers\"\n                              />\n\n                              {changeData.ceramic_drawer_included && (\n                                <>\n                                  <TextField\n                                    sx={{ mt: 2, mb: 1 }}\n                                    size=\"small\"\n                                    fullWidth\n                                    id=\"outlined-select\"\n                                    select\n                                    name=\"ceramic_drawer\"\n                                    label=\"Ceramic Drawer\"\n                                    multiple\n                                    value={changeData.ceramic_drawer}\n                                    onChange={handleProductFields}\n                                    helperText=\"Please select your Ceramic Tiles.\"\n                                  >\n                                    {catalog.ceramic_drawer.map(\n                                      (option) =>\n                                        option.status && (\n                                          <MenuItem\n                                            key={option.SKU}\n                                            value={option.SKU}\n                                          >\n                                            {option.title}\n                                          </MenuItem>\n                                        )\n                                    )}\n                                    <MenuItem key={\"none\"} value=\"None\">\n                                      {\"None\"}\n                                    </MenuItem>\n                                  </TextField>\n                                  <TextField\n                                    value={changeData.ceramic_drawer_qty}\n                                    onChange={handleProductFields}\n                                    size={\"small\"}\n                                    fullWidth\n                                    label=\"Ceramic Drawer Quantity\"\n                                    type=\"number\"\n                                    helperText=\"Enter the number of ceramic drawer included.\"\n                                    name=\"ceramic_drawer_qty\"\n                                  />\n                                </>\n                              )}\n\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.ceramic_tiles_included}\n                                    onChange={handleProductFields}\n                                    name=\"ceramic_tiles_included\"\n                                  />\n                                }\n                                label=\"Ceramic Tiles\"\n                              />\n                            </FormGroup>\n                            {changeData.ceramic_tiles_included && (\n                              <>\n                                <TextField\n                                  sx={{ mt: 2, mb: 1 }}\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"ceramic_tiles\"\n                                  label=\"Ceramic Tiles\"\n                                  multiple\n                                  value={changeData.ceramic_tiles}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Ceramic Tiles.\"\n                                >\n                                  {catalog.ceramic_tiles.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.ceramic_tiles_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Ceramic Tiles Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of ceramic tiles included.\"\n                                  name=\"ceramic_tiles_qty\"\n                                />\n                              </>\n                            )}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Features ends */}\n\n                      {/* Miscellaneous */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          Miscellaneous\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"back_style\"\n                              label=\"Back Style\"\n                              multiple\n                              value={changeData.back_style || \"\"}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Back Style.\"\n                            >\n                              {backStyleCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"weight_capacity\"\n                              label=\"Weight Capacity\"\n                              multiple\n                              value={changeData.weight_capacity}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Weight Capacity.\"\n                            >\n                              {weightCapCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Drawer\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.drawer || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"drawer\"\n                              >\n                                <FormControlLabel\n                                  value=\"mechanical\"\n                                  control={<Radio />}\n                                  label=\"Mechanical\"\n                                />\n                                <FormControlLabel\n                                  value=\"wooden\"\n                                  control={<Radio />}\n                                  label=\"Wooden\"\n                                />\n                                <FormControlLabel\n                                  value=\"none\"\n                                  control={<Radio />}\n                                  label=\"None\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {(changeData.drawer === \"mechanical\" ||\n                              changeData.drawer === \"wooden\") && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                type=\"number\"\n                                id=\"outlined-select\"\n                                name=\"drawer_count\"\n                                label=\"Drawer Count\"\n                                value={changeData.drawer_count}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Joints ((Useful in products where info about\n                                joints are shown))\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"joints\"\n                                value={changeData.joints}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"single\"\n                                  control={<Radio />}\n                                  label=\"Single\"\n                                />\n                                <FormControlLabel\n                                  value=\"multi\"\n                                  control={<Radio />}\n                                  label=\"Multiple\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Miscellaneous ends */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"90%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1, width: \"10%\" }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(5)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra-details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(6)}\n                        >\n                          Extra-Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              type=\"number\"\n                              name=\"CVW\"\n                              label=\"CVW Number\"\n                              value={changeData.CVW || \"\"}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Wood Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"wood_weight\"\n                              value={changeData.wood_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\" Metallic Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"metal_weight\"\n                              value={changeData.metal_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Silver\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.silver || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"silver\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.silver === \"yes\" && (\n                              <TextField\n                                size=\"small\"\n                                fullWidth\n                                // autoComplete={false}\n                                id=\"fullWidth\"\n                                label=\"Sliver Weight\"\n                                type=\"text\"\n                                InputProps={{\n                                  startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                      Gram\n                                    </InputAdornment>\n                                  ),\n                                }}\n                                variant=\"outlined\"\n                                name=\"silver_weight\"\n                                value={changeData.silver_weight}\n                                onChange={handleProductFields}\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"hinge\"\n                              label=\"Hinge\"\n                              multiple\n                              value={changeData.hinge}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your hinge.\"\n                            >\n                              {catalog.hinge.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.hinge !== \"None\" && (\n                              <TextField\n                                value={changeData.hinge_qty}\n                                size={\"small\"}\n                                helperText=\"Enter the number of hinges pieces .\"\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Hinge Quantity\"\n                                type=\"number\"\n                                name=\"hinge_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"knob\"\n                              label=\"Knob\"\n                              multiple\n                              value={changeData.knob}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your knob.\"\n                            >\n                              {console.log(catalog)}\n                              {catalog.knob.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.knob !== \"None\" && (\n                              <TextField\n                                size={\"small\"}\n                                fullWidth\n                                helperText=\"Enter the number of knob pieces .\"\n                                value={changeData.knob_qty}\n                                onChange={handleProductFields}\n                                label=\"Knob Quantity\"\n                                type=\"number\"\n                                name=\"knob_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"door\"\n                              label=\"Door\"\n                              multiple\n                              value={changeData.door}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your door.\"\n                            >\n                              {catalog.door.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.door !== \"None\" && (\n                              <TextField\n                                value={changeData.door_qty}\n                                helperText=\"Enter the number of doors.\"\n                                size={\"small\"}\n                                fullWidth\n                                onChange={handleProductFields}\n                                label=\"Door Quantity\"\n                                type=\"number\"\n                                name=\"door_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"handle\"\n                              label=\"Handle\"\n                              multiple\n                              value={changeData.handle}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your handle.\"\n                            >\n                              {catalog.handle.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {changeData.handle !== \"None\" && (\n                              <TextField\n                                value={changeData.handle_qty}\n                                helperText=\"Enter the number of handles.\"\n                                onChange={handleProductFields}\n                                size={\"small\"}\n                                fullWidth\n                                label=\"Handle Quantity\"\n                                type=\"number\"\n                                name=\"handle_qty\"\n                              />\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              label=\"Fitting\"\n                              name=\"fitting\"\n                              multiple\n                              value={changeData.fitting}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your fitting.\"\n                            >\n                              {catalog.fitting.map(\n                                (option) =>\n                                  option.status && (\n                                    <MenuItem\n                                      key={option.SKU}\n                                      value={option.SKU}\n                                    >\n                                      {option.title}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mirror\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"mirror\"\n                                value={changeData.mirror || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mirror === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Length\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  value={changeData.mirror_length}\n                                  onChange={handleProductFields}\n                                  name=\"mirror_length\"\n                                />\n\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  // autoComplete={false}\n                                  id=\"fullWidth\"\n                                  label=\"Mirror Width\"\n                                  type=\"text\"\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        Inch\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  variant=\"outlined\"\n                                  name=\"mirror_width\"\n                                  value={changeData.mirror_width}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Length\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_length\"\n                              value={changeData.top_size_length}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Top Size Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"top_size_breadth\"\n                              value={changeData.top_size_breadth}\n                              onChange={handleProductFields}\n                            />\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Wheel Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"wheel_included\"\n                                value={changeData.wheel_included || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.wheel_included === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"wheel\"\n                                  label=\"Wheel\"\n                                  multiple\n                                  value={changeData.wheel}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your wheel.\"\n                                >\n                                  {catalog.wheel.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n                                <TextField\n                                  value={changeData.wheel_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Wheel Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the number of wheel included.\"\n                                  name=\"wheel_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Trolley\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                name=\"trolley\"\n                                value={changeData.trolley || \"no\"}\n                                onChange={handleProductFields}\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.trolley === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"trolley_material\"\n                                  label=\"Trolly Material\"\n                                  multiple\n                                  value={changeData.trolley_material}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your Trolly Material \"\n                                >\n                                  {trollyMaterial.map((option) => (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option.value}\n                                    >\n                                      {option.label}\n                                    </MenuItem>\n                                  ))}\n                                </TextField>\n                              </>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_width\"\n                              value={changeData.seating_size_width}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Width Depth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_depth\"\n                              value={changeData.seating_size_depth}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Seating Size Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"seating_size_height\"\n                              value={changeData.seating_size_height}\n                              onChange={handleProductFields}\n                            />\n                            {/* \n                          <FormControl>\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Textile\n                            </FormLabel>\n                            <RadioGroup\n                              sx={{ mb : 1 }}\n\n                              aria-labelledby=\"demo-radio-buttons-group-label\"\n                              value={changeData.textile || \"no\"}\n                              onChange={handleProductFields}\n                              name=\"textile\"\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n\n\n                          {changeData.textile === \"yes\" && (\n                            <TextField sx={{ mb : 1 }}\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"textile_type\"\n                              label=\"Textile\"\n                              value={changeData.textile_type}\n                              onChange={handleProductFields}\n                              multiple\n                              helperText=\"Please select your textile.\"\n                            >\n                              {catalog.textile.map(\n                                (option) => option.status && <MenuItem\n                                  key={option.SKU}\n                                  value={option.SKU}\n                                >\n                                  {option.title}\n                                </MenuItem>\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          )}\n\n                            */}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Plywood Included\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.plywood || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"plywood\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Mattress\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.mattress || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"mattress\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.mattress === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"mattress_length\"\n                                  label=\"Mattress Length\"\n                                  value={changeData.mattress_length}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"mattress_breadth\"\n                                  label=\"Mattress Breadth\"\n                                  value={changeData.mattress_breadth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Cradle Bed\n                              </FormLabel>\n                              <RadioGroup\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                value={changeData.cradle_bed || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"cradle_bed\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.cradle_bed === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  type=\"number\"\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_height\"\n                                  label=\"Cradle Bed Height\"\n                                  value={changeData.cradle_bed_height}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_width\"\n                                  label=\"Cradle Bed Width\"\n                                  value={changeData.cradle_bed_width}\n                                  onChange={handleProductFields}\n                                />\n                                <TextField\n                                  size=\"small\"\n                                  type=\"number\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  name=\"cradle_bed_depth\"\n                                  label=\"Cradle Bed Depth\"\n                                  value={changeData.cradle_bed_depth}\n                                  onChange={handleProductFields}\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Upholstery\n                              </FormLabel>\n                              <RadioGroup\n                                defaultValue=\"no\"\n                                aria-labelledby=\"demo-radio-buttons-group-label\"\n                                // onChange={(e) => {\n                                //   setShowFabric(e.target.value);\n                                // }}\n\n                                value={changeData.upholstery || \"no\"}\n                                onChange={handleProductFields}\n                                name=\"upholstery\"\n                              >\n                                <FormControlLabel\n                                  value=\"yes\"\n                                  control={<Radio />}\n                                  label=\"Yes\"\n                                />\n                                <FormControlLabel\n                                  value=\"no\"\n                                  control={<Radio />}\n                                  label=\"No\"\n                                />\n                              </RadioGroup>\n                            </FormControl>\n                            {changeData.upholstery === \"yes\" && (\n                              <>\n                                <TextField\n                                  size=\"small\"\n                                  fullWidth\n                                  id=\"outlined-select\"\n                                  select\n                                  name=\"fabric\"\n                                  label=\"Fabric\"\n                                  multiple\n                                  value={changeData.fabric}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your fabric.\"\n                                >\n                                  {catalog.fabric.map(\n                                    (option) =>\n                                      option.status && (\n                                        <MenuItem\n                                          key={option.SKU}\n                                          value={option.SKU}\n                                        >\n                                          {option.title}\n                                        </MenuItem>\n                                      )\n                                  )}\n                                  <MenuItem key={\"none\"} value=\"None\">\n                                    {\"None\"}\n                                  </MenuItem>\n                                </TextField>\n\n                                <TextField\n                                  value={changeData.fabric_qty}\n                                  onChange={handleProductFields}\n                                  size={\"small\"}\n                                  fullWidth\n                                  label=\"Fabric Quantity\"\n                                  type=\"number\"\n                                  helperText=\"Enter the fabric quantity in meter.\"\n                                  name=\"fabric_qty\"\n                                />\n                              </>\n                            )}\n                            <FormControl>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Vendor URLs\n                              </FormLabel>\n                            </FormControl>\n                            <TextField\n                              type=\"url\"\n                              fullWidth\n                              size=\"small\"\n                              name=\"amazon_url\"\n                              label=\"Amazon\"\n                              onChange={handleProductFields}\n                              value={changeData.amazon_url}\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"flipkart_url\"\n                              label=\"Flipkart\"\n                              onChange={handleProductFields}\n                              value={changeData.flipkart_url}\n                            />\n                            <TextField\n                              type=\"url\"\n                              size=\"small\"\n                              fullWidth\n                              placeholder=\"https://example.com\"\n                              pattern=\"https://.*\"\n                              name=\"jiomart_url\"\n                              label=\"Jio Mart\"\n                              onChange={handleProductFields}\n                              value={changeData.jiomart_url}\n                            />\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra-details End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Create Variation\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Variation Products Ends */}\n\n            {/* merge Products */}\n\n            {form.formType === \"merge_product\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Merge your products and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={SKU}\n                              disabled\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              autoHighlight\n                              noOptionsText={\"ex : P-01001\"}\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles || \"\"}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* merge Products Ends */}\n\n            {/* update merge Products */}\n\n            {form.formType === \"update_merge\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Merge Product\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update Merge your products and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateMergeProduct);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // // required\n                              disabled\n                              label=\"SKU\"\n                              type=\"text\"\n                              value={changeData.M}\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                            />\n                            <Autocomplete\n                              disablePortal\n                              size=\"small\"\n                              fullWidth\n                              multiple\n                              noOptionsText={\"ex : P-01001\"}\n                              autoHighlight\n                              id=\"combo-box-demo\"\n                              options={productSKU.P_SKU.map((row) => {\n                                return row.SKU;\n                              })}\n                              isOptionEqualToValue={(option, value) => {\n                                // console.log(value);\n                                return typeof value === \"Array\"\n                                  ? value.isInclude(option)\n                                  : value === option;\n                              }}\n                              value={changeData.product_articles}\n                              renderInput={(params) => (\n                                <TextField\n                                  onKeyUpCapture={handleSearch}\n                                  value={changeData.product_articles}\n                                  {...params}\n                                  label=\"Product SKU\"\n                                />\n                              )}\n                              onChange={(e, newMember) =>\n                                setData((old) => ({\n                                  ...old,\n                                  product_articles: newMember,\n                                }))\n                              }\n                            />\n                            {changeData.product_articles.length > 0 && (\n                              <Box mt={1}>\n                                <Typography component={\"span\"} variant=\"body1\">\n                                  Product Quantities\n                                </Typography>\n                                <Box\n                                  p={1}\n                                  sx={{\n                                    display: \"flex\",\n                                    gap: \"5px\",\n                                    flexDirection: \"column\",\n                                    maxHeight: 150,\n                                    overflow: \"scroll\",\n                                  }}\n                                >\n                                  {changeData.product_articles.map((item) => (\n                                    <TextField\n                                      name={item}\n                                      fullWidth\n                                      size=\"small\"\n                                      type=\"number\"\n                                      InputProps={{\n                                        startAdornment: (\n                                          <InputAdornment position=\"start\">\n                                            {item}\n                                          </InputAdornment>\n                                        ),\n                                      }}\n                                      placeholder={item}\n                                      onChange={handleProductFields}\n                                      value={changeData[item] || 1}\n                                    />\n                                  ))}\n                                </Box>\n                              </Box>\n                            )}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"product_title\"\n                              value={changeData.product_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Availability\n                            </FormLabel>\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                  helperText=\"Check it if want it on mobile.\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                  helperText=\"Check it if want it on online store.\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.continue_selling}\n                                  onChange={handleProductFields}\n                                  name=\"continue_selling\"\n                                  helperText=\"Check it if want it to sell when out of Inventory.\"\n                                />\n                              }\n                              label=\"Continue Selling\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // Mannequin images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"mannequin_image\"\n                              label=\"Mannequin Image\"\n                              value={changeData.mannequin_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Mannequin Image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Polish in {changeData.polish_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"polish_time\"\n                              value={changeData.polish_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your polish time\"\n                            />\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Manufactured in {\n                                changeData.manufacturing_time\n                              }{\" \"}\n                              Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"Construction Days\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"manufacturing_time\"\n                              value={changeData.manufacturing_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your manufacturing time\"\n                            />\n                            {/* <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })} */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n                    </Stepper>\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Merge Product\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update merge Products Ends */}\n\n            {/*  add Category */}\n\n            {form.formType === \"category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your product category and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCategory);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"category_name\"\n                      label=\"Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Category Ends */}\n\n            {/*  update Category */}\n\n            {form.formType === \"update_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your product category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCategory);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Category image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      onChange={handleChangeData}\n                      value={changeData.category}\n                      name=\"category_name\"\n                      label=\"Category\"\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Category Ends */}\n\n            {/*  discount Category */}\n\n            {form.formType === \"discount_category\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Discount\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add discount on product category from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleApplyDiscount);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : Chair\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.category.map((row) => {\n                        return row.category_name;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchCategory}\n                          value={changeData.category_discount || \"\"}\n                          {...params}\n                          label=\"Select Category\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          category_discount: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.category_discount.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Discount Limit\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.category_discount.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] < 100 && changeData[item]\n                                  ? changeData[item]\n                                  : 0\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Apply Discount\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* discount Category Ends */}\n\n            {/*  add primaryMateriel */}\n\n            {form.formType === \"primaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePrimaryMaterial);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      defaultValue={\"Material Description\"}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"customizations\" />}\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"primaryMaterial_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add primaryMaterial Ends */}\n\n            {/*  update primaryMaterial */}\n\n            {form.formType === \"update_PrimaryMaterial\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Material\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Material and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePrimaryMaterial);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Material image\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_name\"\n                      label=\"Material\"\n                      value={changeData.primaryMaterial_name}\n                      helperText=\"Please enter the update\"\n                    />\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"primaryMaterial_description\"\n                      onChange={handleChangeData}\n                      defaultValue={changeData.primaryMaterial_description}\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.customizations}\n                            name=\"customizations\"\n                            onChange={handleProductFields}\n                          />\n                        }\n                        label=\"Can Be Customised\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Material\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update primaryMaterial Ends */}\n\n            {/*  add Supplier */}\n\n            {form.formType === \"add_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add Supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      disabled\n                      value={SKU || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Suppliers  Ends */}\n\n            {/*  update Suppliers  */}\n\n            {form.formType === \"update_supplier\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Supplier\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update supplier and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSupplier);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      id=\"outlined-select\"\n                      name=\"SID\"\n                      value={changeData.SID || \"\"}\n                      onChange={handleChangeData}\n                      label=\"Supplier ID\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.supplier_name || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"supplier_name\"\n                      label=\"Supplier Name\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Mobile\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.alt_mobile || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"alt_mobile\"\n                      label=\"Alternate Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.specialization || \"\"}\n                      onChange={handleChangeData}\n                      name=\"specialization\"\n                      label=\"Specialization\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      value={changeData.gst_no || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"gst_no\"\n                      label=\"GST Number\"\n                      type=\"text\"\n                    />\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      placeholder=\"Address\"\n                      minRows={5}\n                      maxRows={5}\n                      value={changeData.address || \"\"}\n                      onChange={handleChangeData}\n                      id=\"outlined-select\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Supplier\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update suppliers Ends */}\n\n            {/*  update blog  */}\n\n            {form.formType === \"update_blog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                      value={changeData.seo_title}\n                      onChange={handleChangeData}\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                      value={changeData.seo_description}\n                      onChange={handleChangeData}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.card_description}\n                      onChange={handleChangeData}\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      value={changeData.title}\n                      onChange={handleChangeData}\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue={`${changeData.description}`}\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add update blog  Ends */}\n\n            {/*   Add BLog */}\n\n            {form.formType === \"addBlog\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Blog\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your blog and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={open}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                      timeout: 500,\n                    }}\n                  >\n                    <Fade in={open}>\n                      <Box sx={style}>\n                        <form\n                          className=\"form\"\n                          id=\"myForm\"\n                          onSubmit={(e) => {\n                            confirmBox(e, handleUpload);\n                          }}\n                          encType=\"multipart/form-data\"\n                          method=\"post\"\n                        >\n                          <FormLabel id=\"demo-radio-buttons-group-label\">\n                            Get Image Url\n                          </FormLabel>\n\n                          <ImagePreviews\n                            text={\"Please Drag and Drop the Image \"}\n                          >\n                            {\" \"}\n                          </ImagePreviews>\n\n                          <TextField\n                            size=\"small\"\n                            fullWidth\n                            disabled\n                            id=\"outlined-select\"\n                            label=\"Image URL\"\n                            value={url || \"\"}\n                          />\n\n                          <Button\n                            color=\"primary\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                          >\n                            Get Url\n                          </Button>\n                        </form>\n                      </Box>\n                    </Fade>\n                  </Modal>\n\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleAddBlog);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Add Blog Description\n                    </FormLabel>\n\n                    <FeaturesPreviews\n                      text={\"Please Drag and Drop the Card Image \"}\n                    >\n                      {\" \"}\n                    </FeaturesPreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_title\"\n                      label=\"SEO Title\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"seo_description\"\n                      label=\"SEO Description\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"card_description\"\n                      label=\"Card Description\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"title\"\n                      label=\"Blog Title\"\n                    />\n                    {/* product description  */}\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue=\"<p>Write Blog Here!!!</p>\"\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <div className=\"getLinkButton\">\n                      <TextField\n                        size=\"small\"\n                        disabled\n                        fullWidth\n                        id=\"outlined-select\"\n                        label=\"Image URL\"\n                        value={url}\n                      />\n                      <Button\n                        color=\"primary\"\n                        onClick={() => {\n                          setOpen(true);\n                        }}\n                        variant=\"contained\"\n                      >\n                        Upload\n                      </Button>\n                    </div>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Blog\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* Add Blog Ends */}\n\n            {/*  add subCategory */}\n\n            {form.formType === \"subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your sub category and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\n                        \"Please Drag and Drop a image for sub Category image\"\n                      }\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      label=\"Category\"\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={<Checkbox name=\"sub_category_status\" />}\n                        label=\"Status (On/Off)\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add sebCategory Ends */}\n\n            {/*update subCategory */}\n\n            {form.formType === \"update_Subcategory\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Sub Category\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your update sub category and necessary information\n                      from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateSubCategories);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop a image for Sub Category.\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Category\n                    </FormLabel>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"category_id\"\n                      displayEmpty\n                      value={cat}\n                      multiple\n                      onChange={handleChange}\n                      helperText=\"Please select your category\"\n                    >\n                      {category.map(\n                        (option) =>\n                          option.category_status && (\n                            <MenuItem key={option._id} value={option._id}>\n                              {option.category_name}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      name=\"sub_category_name\"\n                      label=\"Sub Category\"\n                      value={changeData.sub_category_name || \"\"}\n                      onChange={handleProductFields}\n                      type=\"text\"\n                      helperText=\"Please enter your sub category\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Title\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_title\"\n                      value={changeData.seo_title}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Description\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_description\"\n                      value={changeData.seo_description}\n                      onChange={handleProductFields}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      // autoComplete={false}\n                      id=\"fullWidth\"\n                      label=\"SEO Keyword\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"seo_keyword\"\n                      value={changeData.seo_keyword}\n                      onChange={handleProductFields}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"product_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.product_description}\n                      type=\"text\"\n                      helperText=\"Please enter your product description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Sub Category\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update sebCategory Ends */}\n\n            {/*  add Customer */}\n\n            {form.formType === \"add_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add customer details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n                {/* addres form */}\n                <AddressForm\n                  setOpen={setOpen}\n                  open={open}\n                  confirmBox={confirmBox}\n                  handleAddress={handleAddress}\n                />\n                {/* addres form */}\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <FormControl>\n                      <FormLabel id=\"demo-radio-buttons-group-label\">\n                        Classification\n                      </FormLabel>\n                      <RadioGroup\n                        aria-labelledby=\"demo-radio-buttons-group-label\"\n                        name=\"classification\"\n                        size=\"small\"\n                        value={changeData.classification}\n                        onChange={handleProductFields}\n                      >\n                        <FormControlLabel\n                          value=\"personal\"\n                          control={<Radio />}\n                          label=\"Personal\"\n                          size=\"small\"\n                        />\n                        <FormControlLabel\n                          size=\"small\"\n                          value=\"business\"\n                          control={<Radio />}\n                          label=\"Business\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.customer_type}\n                      onChange={handleProductFields}\n                      select\n                      sx={{ mb: 2, mt: 1 }}\n                      name=\"customer_type\"\n                      label=\"Customer Type\"\n                      multiple\n                      helperText=\"Please select customer type.\"\n                    >\n                      {customer_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n                    <Grid container>\n                      {address &&\n                        address.map((item) => {\n                          return (\n                            <Grid item xs={3}>\n                              <Box\n                                sx={{\n                                  overflowWrap: \"break-word\",\n                                  border: \"2px solid #a52a2a80\",\n                                  borderStyle: \"dashed\",\n                                  p: 1,\n                                  ml: 1,\n                                  mr: 1,\n                                  width: \"130px\",\n                                  height: \"150px\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                <Typography variant=\"caption\">\n                                  {item.shipping}\n                                </Typography>\n                              </Box>\n                            </Grid>\n                          );\n                        })}\n                      <Grid item xs={3}>\n                        <Button\n                          variant=\"outlined\"\n                          sx={{ width: \"20%\" }}\n                          onClick={() => {\n                            setOpen(true);\n                          }}\n                        >\n                          <AddIcon />\n                        </Button>\n                      </Grid>\n                    </Grid>\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.marketing}\n                            onChange={handleProductFields}\n                            name=\"marketing\"\n                          />\n                        }\n                        label=\"Marketing\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Customer Ends */}\n            {/*  update Customer */}\n\n            {form.formType === \"update_customer\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Customer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update customer details and necessary information from\n                      here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCustomer);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <ImagePreviews\n                      text={\"Please Drag and Drop the Profile Picture\"}\n                    >\n                      {\" \"}\n                    </ImagePreviews>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.username}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"username\"\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"email\"\n                      label=\"Customer Email\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"mobile\"\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.pincode}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"pincode\"\n                      label=\"Pin-Code\"\n                      type=\"number\"\n                    /> */}\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.city}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"city\"\n                      label=\"City\"\n                      type=\"text\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      value={changeData.state}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"state\"\n                      label=\"state\"\n                      type=\"text\"\n                    />\n                    {/*  <TextField sx = {{mb : 2}} size=\"small\"\n                      fullWidth\n                      value={changeData.landmark}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"landmark\"\n                      label=\"Landmark\"\n                      type=\"text\"\n                      helperText = 'Place nearby the main building.'\n                    /> */}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      value={changeData.shipping || \"\"}\n                      onChange={handleProductFields}\n                      id=\"outlined-select\"\n                      name=\"shipping\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material description\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Customer\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Customer Ends */}\n\n            {/* add order */}\n\n            {form.formType === \"edit_order\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Edit Order\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Edit order details and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateOrder);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Product Section\n                    </FormLabel>\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      noOptionsText={\"ex : P-01001\"}\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      isOptionEqualToValue={(option, value) => {\n                        // console.log(value);\n                        return typeof value === \"Array\"\n                          ? value.isInclude(option)\n                          : value === option;\n                      }}\n                      value={changeData.quantity}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.quantity}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          quantity: newMember,\n                        }))\n                      }\n                    />\n                    {changeData.quantity.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.quantity.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 1}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Customer Section\n                    </FormLabel>\n\n                    <FormControl sx={{ mt: 1 }}>\n                      <FormLabel id=\"demo-radio-buttons-group-label\">\n                        Classification\n                      </FormLabel>\n                      <RadioGroup\n                        aria-labelledby=\"demo-radio-buttons-group-label\"\n                        name=\"classification\"\n                        size=\"small\"\n                        value={changeData.classification}\n                        onChange={handleProductFields}\n                      >\n                        <FormControlLabel\n                          value=\"personal\"\n                          control={<Radio />}\n                          label=\"Personal\"\n                          size=\"small\"\n                        />\n                        <FormControlLabel\n                          size=\"small\"\n                          value=\"business\"\n                          control={<Radio />}\n                          label=\"Business\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.customer_type}\n                      onChange={handleProductFields}\n                      select\n                      sx={{ mb: 2, mt: 1 }}\n                      name=\"customer_type\"\n                      label=\"Customer Type\"\n                      multiple\n                      helperText=\"Please select customer type.\"\n                    >\n                      {customer_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      sx={{ pb: 2 }}\n                      size=\"small\"\n                      fullWidth\n                      //required\n                      id=\"outlined-select\"\n                      name=\"customer_name\"\n                      value={changeData.customer_name || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Customer Name\"\n                      type=\"text\"\n                    />\n\n                    <TextField\n                      sx={{ pb: 2 }}\n                      size=\"small\"\n                      fullWidth\n                      //required\n                      id=\"outlined-select\"\n                      value={changeData.customer_email || \"\"}\n                      onChange={handleProductFields}\n                      name=\"customer_email\"\n                      label=\"Customer Email\"\n                      type=\"email\"\n                    />\n\n                    <TextField\n                      sx={{ pb: 2 }}\n                      size=\"small\"\n                      fullWidth\n                      //required\n                      id=\"outlined-select\"\n                      name=\"customer_mobile\"\n                      value={changeData.customer_mobile || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Contact Number\"\n                      type=\"number\"\n                    />\n\n                    <TextField\n                      sx={{ pb: 2 }}\n                      size=\"small\"\n                      fullWidth\n                      disabled\n                      //required\n                      id=\"outlined-select\"\n                      name=\"country\"\n                      value={changeData.country || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Country\"\n                      type=\"text\"\n                    />\n\n                    <Autocomplete\n                      freeSolo\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : 305001\"}\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      value={changeData.pincode || \"\"}\n                      options={catalog.pincode.map((row) => {\n                        return row.pincode;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handlePincodeSearch}\n                          value={changeData.pincode || \"\"}\n                          {...params}\n                          label=\"Pincode\"\n                        />\n                      )}\n                      onChange={(e, val) =>\n                        setData((old) => ({\n                          ...old,\n                          pincode: val,\n                        }))\n                      }\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.city}\n                      onChange={handleProductFields}\n                      select\n                      sx={{ mb: 2, mt: 1 }}\n                      name=\"city\"\n                      label=\"City\"\n                      multiple\n                      helperText=\"Please select your city.\"\n                    >\n                      {catalog.city.map((option) => (\n                        <MenuItem key={option.city} value={option.city}>\n                          {option.city}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      sx={{ pb: 2 }}\n                      size=\"small\"\n                      fullWidth\n                      //required\n                      disabled\n                      id=\"outlined-select\"\n                      name=\"state\"\n                      value={changeData.state || \"\"}\n                      onChange={handleProductFields}\n                      label=\"State\"\n                      type=\"text\"\n                    />\n\n                    <FormControl>\n                      <FormLabel id=\"demo-radio-buttons-group-label\">\n                        GST\n                      </FormLabel>\n                      <RadioGroup\n                        aria-labelledby=\"demo-radio-buttons-group-label\"\n                        name=\"has_GST\"\n                        size=\"small\"\n                        value={changeData.has_GST}\n                        onChange={handleProductFields}\n                      >\n                        <FormControlLabel\n                          value=\"yes\"\n                          control={<Radio />}\n                          label=\"Yes\"\n                          size=\"small\"\n                        />\n                        <FormControlLabel\n                          size=\"small\"\n                          value=\"no\"\n                          control={<Radio />}\n                          label=\"No\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n\n                    {changeData.has_GST === \"yes\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        value={changeData.GST}\n                        onChange={handleProductFields}\n                        minRows={5}\n                        maxRows={5}\n                        style={{ width: \"100%\", resize: \"none\" }}\n                        name=\"GST\"\n                        type=\"text\"\n                        label=\"GST Number\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Shipping Address\n                    </FormLabel>\n                    <TextareaAutosize\n                      minRows={4}\n                      placeholder=\"Shipping Address...\"\n                      style={{ mt: 1, width: \"100%\" }}\n                      size=\"small\"\n                      fullWidth\n                      //required\n                      id=\"outlined-select\"\n                      name=\"shipping\"\n                      value={changeData.shipping || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Shipping\"\n                      type=\"text\"\n                    />\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Billing Address\n                    </FormLabel>\n                    <TextareaAutosize\n                      minRows={4}\n                      placeholder=\"Billing Address...\"\n                      style={{ marginTop: \"10px\", width: \"100%\" }}\n                      size=\"small\"\n                      fullWidth\n                      //required\n                      id=\"outlined-select\"\n                      name=\"billing\"\n                      value={changeData.billing || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Shipping\"\n                      type=\"text\"\n                    />\n\n                    <Editor\n                      apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                      initialValue={changeData.note}\n                      onInit={(event, editor) => (editorRef.current = editor)}\n                      init={{\n                        height: 400,\n                        menubar: true,\n                        plugins: \"image code\",\n                      }}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Edit Order\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware */}\n\n            {form.formType === \"hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              // fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\n                                \"Make Sure the picture ratio should be in 1:1.\"\n                              }\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Hardware Ends */}\n            {/* update Hardware */}\n\n            {form.formType === \"update_hardware\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Hardware\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your hardware and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateHardware);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Stepper\n                      className=\"stepper\"\n                      activeStep={activeStep}\n                      orientation=\"vertical\"\n                    >\n                      {/* // Specification */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(0)}\n                        >\n                          Specifications\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              disabled\n                              id=\"fullWidth\"\n                              label=\"SKU\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"SKU\"\n                              value={SKU || \"\"}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"title\"\n                              value={changeData.title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              disabled\n                              name=\"category_name\"\n                              label=\"Category\"\n                              value={changeData.category_name || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your category\"\n                            >\n                              {category.map(\n                                (option) =>\n                                  option.category_status && (\n                                    <MenuItem\n                                      key={option._id}\n                                      value={option._id}\n                                    >\n                                      {option.category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              required\n                              id=\"outlined-select\"\n                              select\n                              name=\"sub_category_name\"\n                              label=\"Sub Category\"\n                              multiple\n                              value={changeData.sub_category_name}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your sub category\"\n                            >\n                              {subCategory.map(\n                                (option) =>\n                                  changeData.category_name ===\n                                    option.category_id && (\n                                    <MenuItem\n                                      key={option.value}\n                                      value={option._id}\n                                    >\n                                      {option.sub_category_name}\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem> */}\n                            </TextField>\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Material\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.primary_material || []}\n                              name=\"primary_material\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                              // MenuProps={MenuProps}\n                            >\n                              {materialCatalog.map((option) => (\n                                <MenuItem\n                                  key={option._id}\n                                  value={option.primaryMaterial_name}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.primary_material.indexOf(\n                                        option.primaryMaterial_name\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText\n                                    primary={option.primaryMaterial_name}\n                                  />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              // required\n                              label=\"Showroom Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"showroom_price\"\n                              value={changeData.showroom_price}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // disabled\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Selling Price\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    ₹\n                                  </InputAdornment>\n                                ),\n                              }}\n                              value={\n                                // changeData.MRP > 0 &&\n                                //   changeData.discount_limit > 0\n                                //   ? (changeData.selling_price =\n                                //     changeData.MRP -\n                                //     (changeData.MRP / 100) *\n                                //     changeData.discount_limit)\n                                //   : 0\n                                changeData.selling_price\n                              }\n                              onChange={handleProductFields}\n                              variant=\"outlined\"\n                              name=\"selling_price\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"fullWidth\"\n                              onChange={(e) => {\n                                handleDiscount(e);\n                                handleProductFields(e);\n                              }}\n                              label=\"Discount Limit\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"discount_limit\"\n                              value={changeData.discount_limit}\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.online_store}\n                                  onChange={handleProductFields}\n                                  name=\"online_store\"\n                                />\n                              }\n                              label=\"Online Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.mobile_store}\n                                  onChange={handleProductFields}\n                                  name=\"mobile_store\"\n                                />\n                              }\n                              label=\"Mobile Store\"\n                            />\n                            <FormControlLabel\n                              control={\n                                <Checkbox\n                                  checked={changeData.status}\n                                  onChange={handleProductFields}\n                                  name=\"status\"\n                                />\n                              }\n                              label=\"Status\"\n                            />\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* // Specification Ends*/}\n\n                      {/* Images */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(1)}\n                        >\n                          Images\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 6}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <AcceptMaxFiles className=\"dorpContainer\"/> */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Images\n                            </FormLabel>\n                            <ProductsPreviews\n                              text={\"Please Drag and Drop the product images\"}\n                            ></ProductsPreviews>\n                            {/* // image selection  */}\n                            {files.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                {files.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = files;\n                                            console.log(\">>>>>>\", temp, files);\n                                            temp.splice(index, 1);\n                                            setFiles([...temp]);\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={URL.createObjectURL(img)}\n                                          alt={img.name}\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence  Images */}\n                            {files.length > 0 && (\n                              <ImageSquence\n                                text={\"New Images\"}\n                                image={files}\n                                setImage={setFiles}\n                                savedImage={false}\n                              />\n                            )}\n                            {/* saved Image */}\n                            {changeData.savedImages.length > 0 && (\n                              <Grid sx={{ p: 2 }} spacing={2} container>\n                                <FormLabel id=\"demo-radio-buttons-group-label\">\n                                  Saved Images\n                                </FormLabel>\n                                {changeData.savedImages.map((img, index) => {\n                                  return (\n                                    <>\n                                      <Grid\n                                        item\n                                        xs={1.5}\n                                        sx={{ position: \"relative\" }}\n                                      >\n                                        <CancelIcon\n                                          onClick={() => {\n                                            // this function is for removing the image from savedImage array\n                                            let temp = changeData.savedImages;\n                                            temp.splice(index, 1);\n                                            setData({\n                                              ...changeData,\n                                              savedImages: temp,\n                                            });\n                                          }}\n                                          className=\"imageCross\"\n                                          color=\"primary\"\n                                        />\n                                        <img\n                                          style={{ width: \"100%\" }}\n                                          src={img}\n                                          alt=\"productImage\"\n                                        />\n                                      </Grid>\n                                    </>\n                                  );\n                                })}\n                              </Grid>\n                            )}\n                            {/* // image Squence saved Images */}\n                            {changeData.savedImages.length > 0 && (\n                              <ImageSquence\n                                text={\"Saved Images\"}\n                                image={changeData.savedImages}\n                                setImage={setData}\n                                savedImage={true}\n                              />\n                            )}\n                            {/* // featured images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"featured_image\"\n                              label=\"Feature Image\"\n                              value={changeData.featured_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Featured Image\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n                              {/* {console.log(changeData.savedImages)} */}\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                            {/* // specification images */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"specification_image\"\n                              label=\"Specification Image\"\n                              value={changeData.specification_image}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your specification image.\"\n                            >\n                              {files.map(\n                                (option) =>\n                                  option.validate && (\n                                    <MenuItem key={option} value={option}>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          justifyContent: \"space-between\",\n                                          alignItems: \"center\",\n                                        }}\n                                      >\n                                        <img\n                                          style={{ width: \"60px\" }}\n                                          src={URL.createObjectURL(option)}\n                                          alt={\"product\"}\n                                        />\n                                        <h6>{option.name}</h6>\n                                      </Box>\n                                    </MenuItem>\n                                  )\n                              )}\n\n                              {changeData.savedImages.map((option) => (\n                                <MenuItem key={option} value={option}>\n                                  <Box\n                                    sx={{\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: \"center\",\n                                    }}\n                                  >\n                                    <img\n                                      style={{ width: \"60px\" }}\n                                      src={option}\n                                      alt={\"product\"}\n                                    />\n                                    {/* <h6>{option.name}</h6> */}\n                                  </Box>\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 6}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Images End */}\n\n                      {/* Inventory & Shipping */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(2)}\n                        >\n                          Inventory & Shipping\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 3}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <FormGroup>\n                              <FormLabel id=\"demo-radio-buttons-group-label\">\n                                Return & Payment Policy\n                              </FormLabel>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.COD}\n                                    onChange={handleProductFields}\n                                    name=\"COD\"\n                                  />\n                                }\n                                label=\"COD Available\"\n                              />\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.returnable}\n                                    onChange={handleProductFields}\n                                    name=\"returnable\"\n                                  />\n                                }\n                                label=\"Return Item\"\n                              />\n                            </FormGroup>\n                            {changeData.returnable && (\n                              <>\n                                <Typography\n                                  component={\"span\"}\n                                  variant=\"Caption\"\n                                >\n                                  {\" \"}\n                                  Return in {changeData.returnDays} Days\n                                </Typography>\n                                <Slider\n                                  aria-label=\"Return Days\"\n                                  defaultValue={0}\n                                  size=\"small\"\n                                  name=\"returnDays\"\n                                  value={changeData.returnDays}\n                                  onChange={handleProductFields}\n                                  helperText=\"Please select your return days\"\n                                  valueLabelDisplay=\"auto\"\n                                />\n                              </>\n                            )}\n                            <Typography component={\"span\"} variant=\"Caption\">\n                              {\" \"}\n                              Restocking in {changeData.restocking_time} Days\n                            </Typography>\n                            <Slider\n                              aria-label=\"restocking time\"\n                              defaultValue={0}\n                              size=\"small\"\n                              valueLabelDisplay=\"auto\"\n                              name=\"restocking_time\"\n                              value={changeData.restocking_time || 0}\n                              onChange={handleProductFields}\n                              helperText=\"Please select your restocking time.\"\n                            />\n                            <InputLabel id=\"demo-multiple-checkbox-label\">\n                              Stock Warehouse\n                            </InputLabel>\n                            <Select\n                              multiple\n                              fullWidth\n                              value={changeData.warehouse}\n                              name=\"warehouse\"\n                              onChange={handleProductFields}\n                              renderValue={(selected) => selected.join(\", \")}\n                            >\n                              {warehouse.map((option) => (\n                                <MenuItem\n                                  key={option.label}\n                                  value={option.value}\n                                >\n                                  <Checkbox\n                                    checked={\n                                      changeData.warehouse.indexOf(\n                                        option.value\n                                      ) > -1\n                                    }\n                                  />\n                                  <ListItemText primary={option.value} />\n                                </MenuItem>\n                              ))}\n                            </Select>\n                            {changeData.warehouse.map((row) => {\n                              let stock;\n                              row === \"Jodhpur (Rajasthan)\"\n                                ? (stock = \"jodhpur_stock\")\n                                : (stock = \"bangalore_stock\");\n                              return (\n                                <>\n                                  <TextField\n                                    size=\"small\"\n                                    fullWidth\n                                    name={stock}\n                                    label={row + \" Stock\"}\n                                    type=\"number\"\n                                    value={changeData[stock] || \"\"}\n                                    onChange={handleProductFields}\n                                  />\n                                </>\n                              );\n                            })}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Packaging Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_weight\"\n                              value={changeData.package_weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Length\"\n                              type=\"number\"\n                              value={changeData.package_length}\n                              onChange={handleProductFields}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_length\"\n                              helperText=\"From left to right\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Breadth\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_breadth\"\n                              value={changeData.package_breadth}\n                              onChange={handleProductFields}\n                              helperText=\"From front to back\"\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Package Height\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Inch\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"package_height\"\n                              value={changeData.package_height}\n                              onChange={handleProductFields}\n                              helperText=\"From bottom to top\"\n                            />\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Quantity\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"quantity\"\n                                value={changeData.quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <Box sx={{ display: \"flex\", mb: 1 }}>\n                              <TextField\n                                size=\"small\"\n                                sx={{ width: \"85%\" }}\n                                id=\"fullWidth\"\n                                label=\"Minimum Quantity For Sell\"\n                                type=\"Number\"\n                                variant=\"outlined\"\n                                name=\"min_quantity\"\n                                value={changeData.min_quantity}\n                                onChange={handleProductFields}\n                              />\n\n                              <TextField\n                                id=\"outlined-select-currency\"\n                                select\n                                sx={{ ml: 1 }}\n                                size=\"small\"\n                                label=\"Unit\"\n                                name=\"unit\"\n                                value={changeData.unit || \"\"}\n                                onChange={handleProductFields}\n                              >\n                                {unitCatalog.map((option) => (\n                                  <MenuItem\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Box>\n                            <FormGroup>\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    checked={changeData.continue_selling}\n                                    onChange={handleProductFields}\n                                    name=\"continue_selling\"\n                                  />\n                                }\n                                label=\"Continue Selling\"\n                              />\n                            </FormGroup>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 3}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Inventory & Shipping End */}\n\n                      {/* SEO */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(3)}\n                        >\n                          SEO\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Title\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_title\"\n                              value={changeData.seo_title}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Description\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_description\"\n                              value={changeData.seo_description}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"SEO Keyword\"\n                              type=\"text\"\n                              variant=\"outlined\"\n                              name=\"seo_keyword\"\n                              value={changeData.seo_keyword}\n                              onChange={handleProductFields}\n                            />\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n                            <Grid container sx={{ mt: 1 }}>\n                              <Grid item xs={12}>\n                                <Grid\n                                  container\n                                  sx={{\n                                    display: \"flex\",\n                                    alignItem: \"center\",\n                                    justifyContent: \"space-between\",\n                                  }}\n                                >\n                                  <Grid item xs={11}>\n                                    <TextField\n                                      fullWidth\n                                      value={changeData.item || \"\"}\n                                      size={\"small\"}\n                                      type=\"text\"\n                                      name=\"item\"\n                                      onChange={handleProductFields}\n                                      label=\"Write a point...\"\n                                    />\n                                  </Grid>\n                                  <Grid item xs={0.8}>\n                                    {changeData.select === undefined ? (\n                                      <Button\n                                        fullWidth\n                                        onClick={() => {\n                                          changeData.item !== \"\" &&\n                                            setData({\n                                              ...changeData,\n                                              selling_points: [\n                                                ...changeData.selling_points,\n                                                changeData.item,\n                                              ],\n                                              item: \"\",\n                                            });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Add\n                                      </Button>\n                                    ) : (\n                                      <Button\n                                        onClick={() => {\n                                          setData({\n                                            ...changeData,\n                                            selling_points:\n                                              changeData.selling_points.filter(\n                                                (row, i) => {\n                                                  return (\n                                                    i !== changeData.select\n                                                  );\n                                                }\n                                              ),\n                                            select: undefined,\n                                          });\n                                        }}\n                                        variant=\"outlined\"\n                                      >\n                                        Remove\n                                      </Button>\n                                    )}\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                              {changeData.selling_points.length > 0 && (\n                                <Grid\n                                  sx={{\n                                    maxHeight: \"100px\",\n                                    overflowY: \"scroll\",\n                                    mb: 1,\n                                    border: \"2px solid #91441f\",\n                                    padding: \"7px\",\n                                  }}\n                                  item\n                                  xs={12}\n                                >\n                                  <ul style={{ listStyleType: \"square\" }}>\n                                    {changeData.selling_points &&\n                                      changeData.selling_points.map(\n                                        (item, index) => {\n                                          return (\n                                            <li>\n                                              <Typography\n                                                sx={{ cursor: \"pointer\" }}\n                                                onClick={() => {\n                                                  setData({\n                                                    ...changeData,\n                                                    select: index,\n                                                    item: item,\n                                                  });\n                                                }}\n                                                variant=\"body\"\n                                              >\n                                                {index + 1 + \". \"}\n                                                {item}\n                                              </Typography>\n                                            </li>\n                                          );\n                                        }\n                                      )}\n                                  </ul>\n                                </Grid>\n                              )}\n                            </Grid>\n                            {/* product description  */}\n                            <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Product Description\n                            </FormLabel>\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"product_description\"\n                              onChange={handleProductFields}\n                              defaultValue={changeData.product_description}\n                              type=\"text\"\n                              helperText=\"Please enter your product description\"\n                            />\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (editorRef.current = editor)\n                              }\n                              init={{\n                                height: 300,\n                                menubar: true,\n                              }}\n                            /> */}\n                            {/* selling points  */}\n                            {/* <FormLabel id=\"demo-radio-buttons-group-label\">\n                              Selling Points{\" \"}\n                            </FormLabel>\n\n                            <TextareaAutosize\n                              fullWidth\n                              minRows={5}\n                              id=\"outlined-select\"\n                              name=\"selling_points\"\n                              defaultValue={\"Selling Points\" || changeData.selling_points}\n                              type=\"text\"\n                              helperText=\"Please enter your selling points.\"\n                            /> */}\n                            {/* <Editor\n                              apiKey=\"nrxcqobhboeugucjonpg61xo1m65hn8qjxwayuhvqfjzb6j4\"\n                              onInit={(event, editor) =>\n                                (sellingRef.current = editor)\n                              }\n                              init={{\n                                height: 400,\n                                menubar: true,\n                              }}\n                            /> */}\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* SEO End */}\n\n                      {/* Extra details */}\n                      <Step>\n                        <StepLabel\n                          sx={{ cursor: \"pointer !important\" }}\n                          onClick={() => setActiveStep(4)}\n                        >\n                          Extra Details\n                        </StepLabel>\n                        <StepContent className=\"stepContent\">\n                          <Box className=\"fields\">\n                            {\" \"}\n                            <Box className=\"stepAction\">\n                              <Button\n                                variant=\"outlined\"\n                                size=\"small\"\n                                disabled={activeStep === 0}\n                                onClick={handleBackStep}\n                              >\n                                Back\n                              </Button>\n                              <Button\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={activeStep === 4}\n                                onClick={handleNextStep}\n                              >\n                                Continue\n                              </Button>\n                            </Box>\n                            {/* <TextField\n                              size=\"small\"\n                              fullWidth\n                              // required\n                              id=\"outlined-select\"\n                              select\n                              name=\"hardware_polish\"\n                              label=\"Hardware Polish\"\n                              value={changeData.hardware_polish || \"\"}\n                              multiple\n                              onChange={handleProductFields}\n                              helperText=\"Please select your Hardware Polish\"\n                            >\n                              {catalog.polish.length > 0 &&\n                                catalog.polish.map((option) => (\n                                  <MenuItem\n                                    key={option.polish_name}\n                                    value={option.polish_name}\n                                  >\n                                    {option.polish_name}\n                                  </MenuItem>\n                                ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField> */}\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              // autoComplete={false}\n                              id=\"fullWidth\"\n                              label=\"Product Weight\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    Kg\n                                  </InputAdornment>\n                                ),\n                              }}\n                              variant=\"outlined\"\n                              name=\"weight\"\n                              value={changeData.weight}\n                              onChange={handleProductFields}\n                            />\n                            <TextField\n                              size=\"small\"\n                              fullWidth\n                              id=\"outlined-select\"\n                              select\n                              name=\"tax_rate\"\n                              label=\"Tax Rate\"\n                              value={changeData.tax_rate}\n                              type=\"number\"\n                              onChange={handleProductFields}\n                              helperText=\"Please select your tax rate.\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    %\n                                  </InputAdornment>\n                                ),\n                              }}\n                            >\n                              {taxRateCatalog.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                              <MenuItem key={\"none\"} value=\"None\">\n                                {\"None\"}\n                              </MenuItem>\n                            </TextField>\n                          </Box>\n                          <Box className=\"stepAction\">\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              disabled={activeStep === 0}\n                              onClick={handleBackStep}\n                            >\n                              Back\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              size=\"small\"\n                              disabled={activeStep === 4}\n                              onClick={handleNextStep}\n                            >\n                              Continue\n                            </Button>\n                          </Box>\n                        </StepContent>\n                      </Step>\n                      {/* Extra details */}\n                    </Stepper>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Hardware\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update Hardware Ends */}\n\n            {/* add inward */}\n\n            {form.formType === \"inward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Inward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your inward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleInward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : H-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={changeData[item] || 0}\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      noOptionsText={\"ex : SID-01001\"}\n                      autoHighlight\n                      clearOnEscape\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      type=\"text\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"driver_name\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"Number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Inward Ends */}\n\n            {/* add Outward */}\n\n            {form.formType === \"outward\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Outward\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your outward stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleOutward);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the wearhouse for this operation.\"\n                      name=\"warehouse\"\n                      label=\"Select Warehouse...\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                      {/* <MenuItem key={\"none\"} value=\"None\">\n                        {\"None\"}\n                      </MenuItem> */}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      required\n                      autoHighlight\n                      clearOnEscape\n                      noOptionsText={\"ex : SID-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.supplier.map((row) => {\n                        return row.SID;\n                      })}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({ ...old, supplier: newMember }))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSupplierList}\n                          value={changeData.supplier || \"\"}\n                          name=\"supplier\"\n                          {...params}\n                          label=\"Supplier\"\n                        />\n                      )}\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      name=\"driver_name\"\n                      id=\"fullWidth\"\n                      label=\"Driver Name\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Driver Number\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"driver_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Vehicle No.\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"vehicle_no\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Challan No.\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"challan_no\"\n                    />\n\n                    {/* <TextField  \n                      size=\"small\"\n                      fullWidth\n                      id=\"fullWidth\"\n                      label=\"Quantity\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      name=\"quantity\"\n                    /> */}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add outward Ends */}\n\n            {/* add Transfer */}\n\n            {form.formType === \"transfer\" && (\n              <Grid container p={5} className=\"productPadding\">\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Transfer\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Transfer stock and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    id=\"myForm\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleTransfer);\n                    }}\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      name=\"warehouse\"\n                      size=\"small\"\n                      required\n                      label=\"From Warehouse\"\n                      value={changeData.warehouse || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      select\n                      required\n                      size=\"small\"\n                      name=\"warehouse_to\"\n                      label=\"To Warehouse\"\n                      value={changeData.warehouse_to || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {warehouse.map(\n                        (option) =>\n                          changeData.warehouse !== option.value && (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.value}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      multiple\n                      autoHighlight\n                      noOptionsText={\"ex : P-01001\"}\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          product_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.product_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Product Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.product_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <Autocomplete\n                      disablePortal\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : H-01001\"}\n                      multiple\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.H_SKU.map((row) => {\n                        return row.product_id + \" Stock :\" + row.stock;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearchStockSKU}\n                          value={changeData.hardware_articles || \"\"}\n                          {...params}\n                          label=\"Hardware SKU\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          hardware_articles: newMember,\n                        }))\n                      }\n                    />\n\n                    {changeData.hardware_articles.length > 0 && (\n                      <Box mt={1}>\n                        <Typography component={\"span\"} variant=\"body1\">\n                          Hardware Quantities\n                        </Typography>\n                        <Box\n                          p={1}\n                          sx={{\n                            display: \"flex\",\n                            gap: \"5px\",\n                            flexDirection: \"column\",\n                            maxHeight: 150,\n                            overflow: \"scroll\",\n                          }}\n                        >\n                          {changeData.hardware_articles.map((item) => (\n                            <TextField\n                              name={item}\n                              fullWidth\n                              size=\"small\"\n                              type=\"number\"\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    {item.split(\"Stock\")[0]}\n                                  </InputAdornment>\n                                ),\n                              }}\n                              placeholder={item}\n                              onChange={handleProductFields}\n                              value={\n                                changeData[item] <= parseInt(item.split(\":\")[1])\n                                  ? changeData[item]\n                                  : parseInt(item.split(\":\")[1])\n                              }\n                            />\n                          ))}\n                        </Box>\n                      </Box>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"purpose\"\n                      label=\"Stage of Inventory\"\n                      value={changeData.purpose || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your purpose\"\n                      required\n                    >\n                      {purpose.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                    </TextField>\n\n                    <TextareaAutosize\n                      size=\"small\"\n                      fullWidth\n                      minRows={3}\n                      maxRows={3}\n                      // required\n                      resize={\"none\"}\n                      id=\"fullWidth\"\n                      placeholder=\"Please eloburate the reson here...\"\n                      type=\"text\"\n                      variant=\"outlined\"\n                      name=\"reason\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Save\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add Transfer Ends */}\n\n            {/*  add Polish Material */}\n\n            {form.formType === \"addPolish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handlePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      value={changeData.polish_type || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      label=\"Polish Finish\"\n                      value={changeData.polish_finish || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add addPolish  Ends */}\n\n            {/*  update Polish Material */}\n\n            {form.formType === \"update_polish\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Polish\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update your Polish and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdatePolish);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"polish_name\"\n                      value={changeData.polish_name || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Name\"\n                      type=\"text\"\n                      helperText=\"Please enter your primary material\"\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Outdoor Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the outdoor image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.savedImages.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.savedImages.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.savedImages;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      savedImages: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Indoor Images\n                    </FormLabel>\n                    <IndoorPreviews\n                      text={\"Please Drag and Drop the indoor image\"}\n                    >\n                      {\" \"}\n                    </IndoorPreviews>\n\n                    {/* {console.log(Indoor)} */}\n                    {Indoor.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {Indoor.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = Indoor;\n                                    console.log(\">>>>>>\", temp, Indoor);\n                                    temp.splice(index, 1);\n                                    setIndoor([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {changeData.indoorSavedImage.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Saved Images\n                        </FormLabel>\n                        {changeData.indoorSavedImage.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = changeData.indoorSavedImage;\n                                    temp.splice(index, 1);\n                                    setData({\n                                      ...changeData,\n                                      indoorSavedImage: temp,\n                                    });\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={img}\n                                  alt=\"productImage\"\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      id=\"outlined-select\"\n                      value={changeData.polish_type || \"\"}\n                      onChange={handleProductFields}\n                      select\n                      name=\"polish_type\"\n                      label=\"Polish Type\"\n                      multiple\n                      helperText=\"Please select your polish type.\"\n                      required\n                    >\n                      {polishCatalog.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"polish_finish\"\n                      value={changeData.polish_finish || \"\"}\n                      onChange={handleProductFields}\n                      label=\"Polish Finish\"\n                      multiple\n                      helperText=\"Please select your polish finish.\"\n                      required\n                    >\n                      <MenuItem key={\"Glossy\"} value={\"Glossy\"}>\n                        {\"Glossy\"}\n                      </MenuItem>\n\n                      <MenuItem key={\"Matt\"} value={\"Matt\"}>\n                        {\"Matt\"}\n                      </MenuItem>\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      select\n                      name=\"level\"\n                      label=\"Polish Level\"\n                      value={changeData.level || \"\"}\n                      multiple\n                      onChange={handleProductFields}\n                      helperText=\"Please select your polish level.\"\n                      required\n                    >\n                      {level.map(\n                        (option) =>\n                          option && (\n                            <MenuItem key={option} value={option}>\n                              {option}\n                            </MenuItem>\n                          )\n                      )}\n                      <MenuItem key={\"None\"} value={\"None\"}>\n                        {\"None\"}\n                      </MenuItem>\n                    </TextField>\n\n                    <TextField\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"price\"\n                      value={changeData.price || 0}\n                      onChange={handleProductFields}\n                      label=\"Price (per Inch)\"\n                      type=\"number\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={changeData.lock}\n                          onChange={handleProductFields}\n                          name=\"lock\"\n                        />\n                      }\n                      label=\"Lock Polish\"\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Polish\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update addPolish  Ends */}\n\n            {/* add Review */}\n\n            {form.formType === \"review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <Autocomplete\n                      freeSolo\n                      size=\"small\"\n                      fullWidth\n                      noOptionsText={\"ex : P-01001\"}\n                      autoHighlight\n                      id=\"combo-box-demo\"\n                      options={productSKU.P_SKU.map((row) => {\n                        return row.SKU;\n                      })}\n                      renderInput={(params) => (\n                        <TextField\n                          onKeyUpCapture={handleSearch}\n                          value={changeData.product_articles || \"\"}\n                          {...params}\n                          label=\"Product SKU\"\n                        />\n                      )}\n                      onChange={(e, val) =>\n                        setData((old) => ({\n                          ...old,\n                          product_id: val,\n                        }))\n                      }\n                    />\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Review Images\n                    </FormLabel>\n                    <ProductsPreviews\n                      text={\"Please Drag and Drop the review image\"}\n                    >\n                      {\" \"}\n                    </ProductsPreviews>\n\n                    {files.length > 0 && (\n                      <Grid sx={{ p: 2 }} spacing={2} container>\n                        {files.map((img, index) => {\n                          return (\n                            <>\n                              <Grid item xs={2} sx={{ position: \"relative\" }}>\n                                <CancelIcon\n                                  onClick={() => {\n                                    // this function is for removing the image from savedImage array\n                                    let temp = files;\n                                    console.log(\">>>>>>\", temp, files);\n                                    temp.splice(index, 1);\n                                    setFiles([...temp]);\n                                  }}\n                                  className=\"imageCross\"\n                                  color=\"primary\"\n                                />\n                                <img\n                                  style={{ width: \"100%\" }}\n                                  src={URL.createObjectURL(img)}\n                                  alt={img.name}\n                                />\n                              </Grid>\n                            </>\n                          );\n                        })}\n                      </Grid>\n                    )}\n\n                    {/* // image Squence  Images */}\n                    {files.length > 0 && (\n                      <ImageSquence\n                        text={\"New Images\"}\n                        image={files}\n                        setImage={setFiles}\n                        savedImage={false}\n                      />\n                    )}\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        // value={reviewData.data.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Name (Name you want to show on review)\"\n                      value={changeData.reviewer_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_name\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Reviewer Email\"\n                      value={changeData.reviewer_email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"reviewer_email\"\n                    />\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add REview ends */}\n\n            {/*  update Review */}\n\n            {form.formType === \"update_review\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Edit Review\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Edit review from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateReview);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      disabled\n                      onKeyUpCapture={handleSearch}\n                      size=\"small\"\n                      value={changeData.product_id}\n                      label=\"Product SKU\"\n                    />\n\n                    {/* rating */}\n                    <Box className=\"rating\">\n                      <Typography vriatn=\"h6\">\n                        How much you want to rate it?\n                      </Typography>\n                      <Rating\n                        name=\"hover-feedback\"\n                        value={changeData.rating || 4}\n                        precision={0.5}\n                        getLabelText={getLabelText}\n                        onChange={(event, newValue) => {\n                          setData((old) => ({ ...old, rating: newValue }));\n                        }}\n                        onChangeActive={(event, newHover) => {\n                          setHover(newHover);\n                        }}\n                        emptyIcon={\n                          <StarIcon\n                            style={{ opacity: 0.55 }}\n                            fontSize=\"inherit\"\n                          />\n                        }\n                      />\n                      {changeData.rating !== null && (\n                        <Box sx={{ ml: 2 }}>\n                          {labels[hover !== -1 ? hover : changeData.rating]}\n                        </Box>\n                      )}\n                    </Box>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Review Title\"\n                      size=\"small\"\n                      value={changeData.review_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"review_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"YouTube URL\"\n                      value={changeData.yourTube_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"yourTube_url\"\n                    />\n\n                    <TextareaAutosize\n                      minRows={5}\n                      maxRows={5}\n                      required\n                      name=\"review\"\n                      className=\"customTextArea\"\n                      placeholder=\"Write something beautiful...\"\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      value={changeData.review}\n                      onChange={handleProductFields}\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Review\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update Review  Ends */}\n\n            {/* add Banner */}\n\n            {form.formType === \"add_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Sequence Number\"\n                      size=\"small\"\n                      required\n                      error={sequence.includes(\n                        parseInt(changeData.sequence_no)\n                      )}\n                      helperText={\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      type=\"number\"\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add Banner ends */}\n            {/* Update Banner */}\n\n            {form.formType === \"update_banner\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Banner\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update banner details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateBanner);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Web View Banner Image (1920*1080)\n                    </FormLabel>\n                    <WebBannerPreviews\n                      webBanner={webBanner}\n                      setWebBanner={setWebBanner}\n                      text={\"Please Drag and Drop the Web Banner.\"}\n                    >\n                      {\" \"}\n                    </WebBannerPreviews>\n                    {changeData.web_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img alt=\"web_banner\" src={changeData.web_banner} />\n                        </Box>\n                      </>\n                    )}\n\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Mobile View Banner Image (800*200)\n                    </FormLabel>\n                    <MobileBannerPreviews\n                      mobileBanner={mobileBanner}\n                      setMobileBanner={setMobileBanner}\n                      text={\"Please Drag and Drop the Mobile Banner.\"}\n                    >\n                      {\" \"}\n                    </MobileBannerPreviews>\n                    {changeData.mobile_banner && (\n                      <>\n                        <FormLabel id=\"demo-radio-buttons-group-label\">\n                          Present Banner\n                        </FormLabel>\n                        <Box\n                          sx={{\n                            width: \"200px\",\n                            img: {\n                              width: \"100%\",\n                            },\n                          }}\n                        >\n                          <img\n                            alt=\"mobile_banner\"\n                            src={changeData.mobile_banner}\n                          />\n                        </Box>\n                      </>\n                    )}\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      label=\"Banner Title\"\n                      size=\"small\"\n                      value={changeData.banner_title}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"banner_title\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Web\"\n                      value={changeData.web_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"web_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Redirecting URL for Mobile\"\n                      value={changeData.mobile_url}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile_url\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      // error={sequence.includes(changeData.sequence_no)}\n                      label={`Sequence Number`}\n                      size=\"small\"\n                      type=\"number\"\n                      required\n                      error={\n                        parseInt(changeData.old_sequence_no) !==\n                          parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no))\n                      }\n                      helperText={\n                        parseInt(changeData.old_sequence_no) !==\n                          parseInt(changeData.sequence_no) &&\n                        sequence.includes(parseInt(changeData.sequence_no)) &&\n                        \"Index is already in use.\"\n                      }\n                      value={\n                        changeData.sequence_no < 0 ? 0 : changeData.sequence_no\n                      }\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"sequence_no\"\n                    />\n\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.web_banner_status}\n                            onChange={handleProductFields}\n                            name=\"web_banner_status\"\n                          />\n                        }\n                        label=\"Web Banner Status\"\n                      />\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={changeData.mobile_banner_status}\n                            onChange={handleProductFields}\n                            name=\"mobile_banner_status\"\n                          />\n                        }\n                        label=\"Mobile Banner Status\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Banner\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* Update REview ends */}\n\n            {/* add User */}\n            {form.formType === \"add_user\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add User\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add user details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUser);\n                    }}\n                    id=\"myForm\"\n                    encType=\"application/x-www-form-urlencoded\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Full Name\"\n                      value={changeData.user_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"user_name\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type=\"email\"\n                      label=\"Email Address\"\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"email\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Mobile Number\"\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type={\"password\"}\n                      label=\"Password\"\n                      value={changeData.password}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"password\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the role.\"\n                      name=\"role\"\n                      label=\"Select role...\"\n                      value={changeData.role || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {role.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Autocomplete\n                      sx={{ mt: 1 }}\n                      multiple\n                      id=\"size-small-standard-multi\"\n                      size=\"small\"\n                      options={modules}\n                      value={changeData.access || []}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select Access\"\n                          placeholder=\"Access\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          access: newMember,\n                        }))\n                      }\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add User\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* add User ends */}\n\n            {/* update User */}\n            {form.formType === \"update_user\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update User\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update usre details from here.\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={2}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateUser);\n                    }}\n                    id=\"myForm\"\n                    encType=\"application/x-www-form-urlencoded\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Full Name\"\n                      value={changeData.user_name}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"user_name\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      type=\"email\"\n                      label=\"Email Address\"\n                      value={changeData.email}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"email\"\n                    />\n                    <TextField\n                      fullWidth\n                      sx={{ mb: 1 }}\n                      size=\"small\"\n                      label=\"Mobile Number\"\n                      value={changeData.mobile}\n                      onChange={handleProductFields}\n                      variant=\"outlined\"\n                      name=\"mobile\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the role.\"\n                      name=\"role\"\n                      label=\"Select role...\"\n                      value={changeData.role || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {role.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    <Autocomplete\n                      sx={{ mt: 1 }}\n                      multiple\n                      id=\"size-small-standard-multi\"\n                      size=\"small\"\n                      options={modules}\n                      value={changeData.access || []}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          label=\"Select Access\"\n                          placeholder=\"Access\"\n                        />\n                      )}\n                      onChange={(e, newMember) =>\n                        setData((old) => ({\n                          ...old,\n                          access: newMember,\n                        }))\n                      }\n                    />\n\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update User\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n            {/* update User ends */}\n\n            {/* add coupon  */}\n            {form.formType === \"add_coupon\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Add Coupone\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Add coupone and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleCoupon);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      required\n                      id=\"outlined-select\"\n                      name=\"coupon_code\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      label=\"Cupone Code\"\n                      onChange={handleProductFields}\n                      value={changeData.coupon_code || \"\"}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon code must be unique.\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"times\"\n                      label=\"Useable Up To\"\n                      value={changeData.times}\n                      onChange={handleProductFields}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            Times\n                          </InputAdornment>\n                        ),\n                      }}\n                      helperText=\"How many time we can apply this coupone?\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the coupone type.\"\n                      name=\"coupon_type\"\n                      label=\"Select coupon...\"\n                      value={changeData.coupon_type || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {coupon_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    {changeData.coupon_type === \"FLAT\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        name=\"flat_amount\"\n                        label=\"Flat Amount\"\n                        value={changeData.flat_amount}\n                        onChange={handleProductFields}\n                        type=\"number\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">₹</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter amount for discount.\"\n                      />\n                    )}\n\n                    {changeData.coupon_type === \"OFF(%)\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        type=\"number\"\n                        name=\"off\"\n                        value={changeData.off < 100 ? changeData.off : 0}\n                        onChange={handleProductFields}\n                        inputProps={{ style: { textTransform: \"uppercase\" } }}\n                        label=\"OFF %\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">%</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter % amount for discount.\"\n                      />\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"valid_from\"\n                      value={changeData.valid_from}\n                      onChange={handleProductFields}\n                      label=\"Valid From\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n                    <TextField\n                      sx={{ mt: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"expiry\"\n                      value={changeData.expiry}\n                      onChange={handleProductFields}\n                      label=\"Expiry Date\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Coupon Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"coupon_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.coupon_description}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon description.\"\n                    />\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Add Coupone\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* add coupon */}\n            {/* add coupon  */}\n            {form.formType === \"update_coupon\" && (\n              <Grid container p={5}>\n                <Grid item xs={12}>\n                  <Typography component={\"span\"} variant=\"h5\">\n                    Update Coupone\n                    <Typography\n                      component={\"span\"}\n                      sx={{ display: \"block !important\" }}\n                      variant=\"caption\"\n                    >\n                      Update coupone and necessary information from here\n                    </Typography>\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={12} mt={5}>\n                  <form\n                    className=\"form\"\n                    onSubmit={(e) => {\n                      confirmBox(e, handleUpdateCoupon);\n                    }}\n                    id=\"myForm\"\n                    encType=\"multipart/form-data\"\n                    method=\"post\"\n                  >\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      required\n                      id=\"outlined-select\"\n                      name=\"coupon_code\"\n                      inputProps={{ style: { textTransform: \"uppercase\" } }}\n                      label=\"Cupone Code\"\n                      onChange={handleProductFields}\n                      value={changeData.coupon_code || \"\"}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon code must be unique.\"\n                    />\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      name=\"times\"\n                      label=\"Useable Up To\"\n                      value={changeData.times}\n                      onChange={handleProductFields}\n                      type=\"number\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            Times\n                          </InputAdornment>\n                        ),\n                      }}\n                      helperText=\"How many time we can apply this coupone?\"\n                    />\n\n                    <TextField\n                      fullWidth\n                      id=\"outlined-select\"\n                      required\n                      select\n                      size={\"small\"}\n                      helperText=\"Please select the coupone type.\"\n                      name=\"coupon_type\"\n                      label=\"Select coupon...\"\n                      value={changeData.coupon_type || \"\"}\n                      onChange={handleProductFields}\n                      multiple\n                    >\n                      {coupon_type.map((option) => (\n                        <MenuItem key={option} value={option}>\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n\n                    {changeData.coupon_type === \"FLAT\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        name=\"flat_amount\"\n                        label=\"Flat Amount\"\n                        value={changeData.flat_amount}\n                        onChange={handleProductFields}\n                        type=\"number\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">₹</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter amount for discount.\"\n                      />\n                    )}\n\n                    {changeData.coupon_type === \"OFF(%)\" && (\n                      <TextField\n                        size=\"small\"\n                        fullWidth\n                        // required\n                        id=\"outlined-select\"\n                        type=\"number\"\n                        name=\"off\"\n                        value={changeData.off < 100 ? changeData.off : 0}\n                        onChange={handleProductFields}\n                        inputProps={{ style: { textTransform: \"uppercase\" } }}\n                        label=\"OFF %\"\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">%</InputAdornment>\n                          ),\n                        }}\n                        helperText=\"Please enter % amount for discount.\"\n                      />\n                    )}\n\n                    <TextField\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"valid_from\"\n                      value={changeData.valid_from}\n                      onChange={handleProductFields}\n                      label=\"Valid From\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n                    <TextField\n                      sx={{ mt: 1 }}\n                      size=\"small\"\n                      fullWidth\n                      // required\n                      id=\"outlined-select\"\n                      type=\"date\"\n                      name=\"expiry\"\n                      value={changeData.expiry}\n                      onChange={handleProductFields}\n                      label=\"Expiry Date\"\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">Date</InputAdornment>\n                        ),\n                      }}\n                    />\n\n                    {/* product description  */}\n                    <FormLabel id=\"demo-radio-buttons-group-label\">\n                      Coupon Description\n                    </FormLabel>\n\n                    <TextareaAutosize\n                      fullWidth\n                      minRows={5}\n                      id=\"outlined-select\"\n                      name=\"coupon_description\"\n                      onChange={handleProductFields}\n                      defaultValue={changeData.coupon_description}\n                      type=\"text\"\n                      helperText=\"Please enter your coupon description.\"\n                    />\n                    <Button\n                      color=\"primary\"\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      Update Coupone\n                    </Button>\n                  </form>\n                </Grid>\n              </Grid>\n            )}\n\n            {/* update coupon */}\n          </Box>\n        </Backdrop>\n      </Slide>\n    </>\n  );\n};\n\n// for label the ratting\n\nexport default SideForm;\n\n// outter components ++++++++++++++++++++==================================\n// banner dimension for web 1920*1080\nfunction WebBannerDimension(images, setWebBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    console.log(width, height);\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 1920 && height === 1080 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setWebBanner([...res]));\n}\n\nfunction WebBannerPreviews({ text, webBanner, setWebBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      WebBannerDimension(acceptedFiles, setWebBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (webBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        webBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        webBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [webBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => webBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n// banner dimension for mobile 800*200\nfunction MobileBannerDimension(images, setMobileBanner) {\n  let result = images.map(async (image) => {\n    let { width, height } = await size(URL.createObjectURL(image));\n    // console.log(width,height)\n    Object.assign(image, {\n      preview: URL.createObjectURL(image),\n      validate: width === 800 && height === 200 ? true : false,\n    });\n    return image;\n  });\n  Promise.all(result).then((res) => setMobileBanner([...res]));\n}\n\nfunction MobileBannerPreviews({ text, mobileBanner, setMobileBanner }) {\n  const [acceptedFileItems, setAcceptedFileItems] = useState([]);\n  const [fileRejectionItems, setFileRejectionItems] = useState([]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: (acceptedFiles) => {\n      MobileBannerDimension(acceptedFiles, setMobileBanner);\n    },\n  });\n\n  // for check the file state in done or\n  useMemo(() => {\n    if (mobileBanner) {\n      // REJECTED FILES\n      setFileRejectionItems(\n        mobileBanner.map((file) => {\n          return !file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n\n      // accepted\n      setAcceptedFileItems(\n        mobileBanner.map((file, index) => {\n          return file.validate ? (\n            <div style={thumb} key={file.name}>\n              <div style={thumbInner}>\n                {/* {console.log(file.validate)} */}\n\n                <img\n                  src={URL.createObjectURL(file)}\n                  style={img}\n                  alt=\"Images\"\n                  // Revoke data uri after image is loaded\n                  onLoad={() => {\n                    URL.revokeObjectURL(file.preview);\n                  }}\n                />\n              </div>\n            </div>\n          ) : null;\n        })\n      );\n    }\n  }, [mobileBanner]);\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () =>\n      mobileBanner.forEach((file) => URL.revokeObjectURL(file.preview));\n  }, []);\n\n  return (\n    <section className=\"container dorpContainer\">\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>{text}</p>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <aside style={thumbsContainer}>{acceptedFileItems}</aside>\n        <h4>Rejected files</h4>\n        <aside style={thumbsContainer}>{fileRejectionItems}</aside>\n      </aside>\n    </section>\n  );\n}\n\nfunction AddressForm({ setOpen, open, confirmBox, handleAddress }) {\n  const [data, setData] = useState({\n    pincode: \"\",\n    city: \"\",\n    state: \"\",\n  });\n\n  const [catalog, setCatalogs] = useState({\n    city: [],\n    pincode: [],\n  });\n\n  useEffect(() => {\n    handelPincode();\n  }, [data.pincode]);\n\n  const handleValue = (e) => {\n    setData((old) => ({ ...old, [e.target.name]: e.target.value }));\n  };\n\n  async function handleSearch(e) {\n    console.log(e.target.value);\n    let res = await listPincode({\n      page: 1,\n      limit: 10,\n      total: 10,\n      pincode: e.target.value,\n    });\n    if (res.status === 200) {\n      setCatalogs((old) => ({ ...old, pincode: [...res.data.data] }));\n    }\n  }\n\n  async function handelPincode() {\n    if (data.pincode.toString().length === 6) {\n      let res = await getAddress(data.pincode);\n      if (res.status === 200) {\n        let pincode = res.data.results[data.pincode] || [];\n        setCatalogs((old) => ({ ...old, city: pincode }));\n        setData((old) => ({\n          ...old,\n          pincode: data.pincode,\n          state: pincode[0].state,\n        }));\n      }\n    } else {\n      setData((old) => ({ ...old, pincode: data.pincode }));\n    }\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={() => {\n        setOpen(false);\n      }}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>\n          <Typography sx={{ pb: 1 }} variant=\"h6\">\n            Address\n          </Typography>\n          <form\n            className=\"form\"\n            id=\"myForm\"\n            onSubmit={(e) => {\n              confirmBox(e, handleAddress);\n            }}\n            encType=\"multipart/form-data\"\n            method=\"post\"\n          >\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"customer_name\"\n              label=\"Name\"\n              type=\"text\"\n            />\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"mobile\"\n              label=\"Mobile\"\n              type=\"number\"\n            />\n            <Autocomplete\n              freeSolo\n              size=\"small\"\n              fullWidth\n              noOptionsText={\"ex : 305001\"}\n              autoHighlight\n              id=\"combo-box-demo\"\n              options={catalog.pincode.map((row) => {\n                return row.pincode;\n              })}\n              renderInput={(params) => (\n                <TextField\n                  onKeyUpCapture={handleSearch}\n                  value={data.pincode || \"\"}\n                  {...params}\n                  label=\"Pincode\"\n                />\n              )}\n              onChange={(e, val) =>\n                setData((old) => ({\n                  ...old,\n                  pincode: val,\n                }))\n              }\n            />\n\n            <TextField\n              fullWidth\n              id=\"outlined-select\"\n              required\n              select\n              size={\"small\"}\n              helperText=\"Please select the city.\"\n              name=\"city\"\n              label=\"Select city...\"\n              value={data.city || \"\"}\n              onChange={handleValue}\n              multiple\n            >\n              {catalog.city.map((option) => (\n                <MenuItem key={option.city} value={option.city}>\n                  {option.city}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              // required\n              id=\"outlined-select\"\n              name=\"state\"\n              value={data.state || \"\"}\n              onChange={handleValue}\n              label=\"State\"\n              type=\"text\"\n            />\n\n            <FormLabel id=\"demo-radio-buttons-group-label\">Address</FormLabel>\n\n            <TextareaAutosize\n              fullWidth\n              minRows={5}\n              id=\"outlined-select\"\n              name=\"address\"\n              type=\"text\"\n              placeholder=\"Please enter your address\"\n            />\n\n            <FormLabel id=\"demo-radio-buttons-group-label\">\n              Address Type\n            </FormLabel>\n\n            <TextField\n              size=\"small\"\n              fullWidth\n              id=\"outlined-select\"\n              select\n              name=\"type\"\n              displayEmpty\n              multiple\n              helperText=\"Please select your address type\"\n            >\n              <MenuItem key={\"home\"} value={\"home\"}>\n                Home\n              </MenuItem>\n              <MenuItem key={\"office\"} value={\"office\"}>\n                Office\n              </MenuItem>\n              <MenuItem key={\"none\"} value={\"none\"}>\n                None\n              </MenuItem>\n            </TextField>\n\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n              Add Address\n            </Button>\n          </form>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n"],"names":["option","labels","confirmable","cancellable","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","style","position","top","left","transform","bgcolor","boxShadow","p","useState","files","setFiles","webBanner","setWebBanner","mobileBanner","setMobileBanner","featured","setFeatured","React","hover","setHover","sequence","setSequence","imageLink","config","confirm","useConfirm","confirmBox","e","action","preventDefault","description","then","catch","err","console","log","Image","setImages","Indoor","setIndoor","open","setOpen","address","setAddress","FeaturesPreviews","props","useDropzone","accept","multiple","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","src","alt","onLoad","revokeObjectURL","name","className","text","customer_type","Dimension","images","result","image","size","validate","Promise","all","res","old","ProductsPreviews","acceptedFileItems","setAcceptedFileItems","fileRejectionItems","setFileRejectionItems","useMemo","index","useEffect","forEach","ImagePreviews","IndoorPreviews","polishCatalog","taxRateCatalog","value","label","backStyleCatalog","legCatalog","warehouse","weightCapCatalog","trollyMaterial","role","coupon_type","modules","assemblyLevelCatalog","unitCatalog","purpose","level","useSelector","state","form","mode","dispatch","useDispatch","cat","setCat","discount_limit","MRP","discount","setDiscount","activeStep","setActiveStep","SKU","setSKU","category","setCategory","subCategory","setSubCategory","materialCatalog","setMaterialCatalog","setSKUCatalog","setCustomerCatalog","P_SKU","H_SKU","supplier","productSKU","setProductSKU","hinge","knob","door","handle","fitting","polish","fabric","wheel","ceramic_drawer","ceramic_tiles","pincode","city","catalog","setCatalog","editorRef","useRef","CVW","dial","ACIN","primary_material","product_articles","hardware_articles","category_discount","range","product_array","variation_array","savedImages","specification_image","featured_image","mannequin_image","shipping","product_title","seo_title","seo_description","seo_keyword","product_des","sub_category","length","breadth","selling_points","priMater","priMater_weight","secMater","secMater_weight","selling_price","mrp","discount_cap","polish_time","manufacturing_time","wight_cap","wall_hanging","assembly_required","assembly_leg","assembly_part","silver","weight","selling_point","mirror","joints","tax_rate","seat_width","seat_depth","seat_height","wheel_included","trolly","returnable","returnDays","trolly_mater","top_size_length","top_size_breadth","dial_size","COD","textile","paid_amount","total_amount","customer_name","customer_email","shipping_address","searchCustomer","mobile_store","online_store","continue_selling","ceramic_drawer_included","ceramic_tiles_included","unit","quantity","textile_type","category_id","sub_category_id","product_description","legs","assembly_level","mattress","mattress_length","mattress_breadth","hinge_qty","knob_qty","handle_qty","door_qty","plywood","wheel_qty","cradle_bed","amazon_url","flipkart_url","jiomart_url","cradle_bed_depth","cradle_bed_height","cradle_bed_width","showroom_price","length_main","ceramic_drawer_qty","ceramic_tiles_qty","back_style","weight_capacity","drawer","package_breadth","package_height","package_length","silver_weight","mirror_length","mirror_width","drawer_count","seating_size_width","seating_size_depth","seating_size_height","restocking_time","min_quantity","hardware_polish","warehouse_to","wood_weight","metal_weight","package_weight","polish_name","polish_type","polish_finish","lock","price","indoorSavedImage","status","web_banner_status","mobile_banner_status","marketing","sequence_no","customer_mobile","GST","has_GST","billing","classification","country","note","changeData","setData","getLabelText","getDID","getDraftID","data","parseInt","DID","split","setSequenceFunc","getSequence","formType","payload","order","keys","item","getLastHardware","getPrimaryMaterial","categoryList","hardware","filter","row","category_name","_id","getSubCatagories","title","sub_category_name","hardware_image","bangalore_stock","jodhpur_stock","primary_material_name","getHardwareDropdown","getLastProduct","product_image","warehouse_name","hinge_name","knob_name","handle_name","door_name","fitting_name","fabric_qty","fabric_name","upholstery","trolley","trolley_material","rotating_seats","eatable_oil_polish","no_chemical","straight_back","lean_back","weaving","knife","not_suitable_for_Micro_Dish","tilt_top","inside_compartments","stackable","wheel_name","ceramic_tiles_name","ceramic_drawers_qty","ceramic_drawers","ceramic_drawers_included","ceramic_drawers_name","getLastOrder","OID","getPresentSKUs","customerCatalog","primaryMaterial_name","primaryMaterial_description","customizations","card_image","card_description","parent_SKU","variations","variant_label","CID","register_time","username","mobile","email","password","getLastMergeProduct","M","qty","product_id","stock","supplier_name","gst_no","alt_mobile","specialization","SID","getLastSupplier","outDoor_image","inDoor_image","formattedValue","rating","review","review_title","yourTube_url","uuid","web_banner","web_url","old_sequence_no","mobile_banner","mobile_url","banner_title","user_name","access","customer_ids","coupon_code","flat_amount","times","off","valid_from","expiry","coupon_description","handleNextStep","handleBackStep","handleDiscount","target","handleChangeData","feature","handleProductFields","includes","checked","handleChange","event","handleClose","resetAll","setForm","handleCategory","FD","FormData","append","category_status","addDraft","setAlert","variant","message","handleUpdateCategory","undefined","handleCustomer","JSON","stringify","addCustomer","setRow","id","response","profile_image","handleUpdateCustomer","updateCustomer","set","path","document","getElementById","reset","handleProduct","element","secondary_material_weight","handleVariation","variation","handleUpdateProduct","handleMergeProduct","Product_SKU","addMergeProduct","total","handleUpdateMergeProduct","updateMergeProduct","updates","handlePrimaryMaterial","primaryMaterial_status","handleUpdatePrimaryMaterial","handleSupplier","addSupplier","handleUpdateSupplier","editSupplier","handleApplyDiscount","discount_array","applyDiscount","handleInward","Hardware_SKU","challan_no","vehicle_no","toUpperCase","driver_name","driver_no","addInward","inward_id","order_no","date","handleOutward","cred","trim","reason","addOutward","outward_id","handleTransfer","addTransfer","transfer_id","handleSubCategories","sub_category_status","handleUpdateSubCategories","catName","url","setUrl","handleUpload","uploadImage","handleAddBlog","current","getContent","handleUpdateBlog","handleUpdateOrder","handleHardware","handleUpdateHardware","multiOBJ","handlePolish","handleUpdatePolish","handleUpdateCoupon","handleCoupon","handleReview","reviewer_name","reviewer_email","addReview","setCheck","admin_reply","review_images","review_videos","hide","handleUpdateReview","updateReview","handleSupplierList","delayDebounceFn","setTimeout","getSupplierDropdown","Suppliers","clearTimeout","handleSearchStockSKU","getStockSKU","search","handleSearch","getArticlesId","handleSearchCategory","getCategoryList","handleBanner","handleUpdateBanner","handleUser","addUser","handleUpdateUser","updateUser","toString","getAddress","results","handlePincodeSearch","listPincode","page","limit","handelPincode","Slide","direction","in","mountOnEnter","unmountOnExit","Backdrop","sx","zIndex","theme","Box","type","IconButton","onClick","color","Cancel","Grid","container","xs","Typography","component","mt","onSubmit","encType","method","Stepper","orientation","Step","StepLabel","cursor","StepContent","Button","disabled","TextField","fullWidth","required","select","onChange","helperText","MenuItem","InputProps","startAdornment","InputAdornment","InputLabel","Select","renderValue","selected","join","Checkbox","indexOf","ListItemText","primary","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","mb","spacing","temp","splice","ImageSquence","setImage","savedImage","justifyContent","alignItems","FormGroup","Slider","defaultValue","valueLabelDisplay","ml","alignItem","i","maxHeight","overflowY","listStyleType","TextareaAutosize","minRows","placeholder","pattern","Autocomplete","autoHighlight","noOptionsText","options","renderInput","params","onKeyUpCapture","newMember","gap","disablePortal","isOptionEqualToValue","isInclude","maxRows","Modal","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","apiKey","initialValue","onInit","editor","init","menubar","plugins","displayEmpty","AddressForm","handleAddress","overflowWrap","borderStyle","mr","Add","pb","freeSolo","val","resize","clearOnEscape","inputProps","textTransform","vriatn","Rating","precision","newValue","onChangeActive","newHover","emptyIcon","Star","opacity","fontSize","WebBannerPreviews","MobileBannerPreviews","error","getOptionLabel","WebBannerDimension","MobileBannerDimension","setCatalogs","handleValue"],"sourceRoot":""}